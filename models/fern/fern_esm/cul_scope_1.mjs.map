{"version":3,"names":["barnsley_transforms","winning_transform_values","i_in","winner","i","r","Math","random","total_probability","reduce","p","v","prob1","prob2","prob3","prob4","barnsley_0","barnsley_1","barnsley_2","barnsley_3","barnsley_4","barnsley_5","x","y"],"sources":["fern.cul.js"],"sourcesContent":["// the starting point here is modelled from the nicely simple/narrated code @ https://www.fractal.garden/barnsley-fern by Rico Trebeljahr\n\n// an array of 4 transformations and associated probabilities\nexport const barnsley_transforms = () => [\n  [\n    /* transformation params: */ 0, 0, 0, 0.16, 0, 0,\n    /* probability for this transform: */ 0.01,\n  ],\n  [0.85, 0.04, -0.04, 0.85, 0, 1.6, 0.85],\n  [0.2, -0.26, 0.23, 0.22, 0, 1.6, 0.07],\n  [-0.15, 0.28, 0.26, 0.24, 0, 0.44, 0.07],\n];\n\nexport const winning_transform_values = () => barnsley_transforms()[winner()];\n\nexport const i = () => i_in;\n\n// a draw determines which transformation to apply in each iteration\nexport const winner = () => {\n  var r = Math.random() + 0 * i();\n\n  // imperative so don't like this so much in calculang.. but its quick and ready, see reference above\n\n  // moving to weighting of probabilities, so easier to allow users to vary weights\n  const total_probability = barnsley_transforms().reduce((p, v) => p + v[6], 0);\n\n  const prob1 = barnsley_transforms()[1][6] / total_probability;\n  const prob2 = barnsley_transforms()[2][6] / total_probability;\n  const prob3 = barnsley_transforms()[3][6] / total_probability;\n  const prob4 = barnsley_transforms()[0][6] / total_probability;\n  if (r <= prob1) {\n    return 1;\n  } else if (r <= prob1 + prob2) {\n    return 2;\n  } else if (r <= prob1 + prob2 + prob3) {\n    return 3;\n  } else if (r <= prob1 + prob2 + prob3 + prob4) { // next step.. make # transforms variable\n    return 0;\n  }\n};\n\n// also abstract this..\nexport const barnsley_0 = () => winning_transform_values()[0];\nexport const barnsley_1 = () => winning_transform_values()[1];\nexport const barnsley_2 = () => winning_transform_values()[2];\nexport const barnsley_3 = () => winning_transform_values()[3];\nexport const barnsley_4 = () => winning_transform_values()[4];\nexport const barnsley_5 = () => winning_transform_values()[5];\n\n// this is where the magic is brought together::\n// the iterated function system\n\nexport const x = () => {\n  if (i() == 0) return 0;\n  else\n    return (\n      barnsley_0() * x({ i_in: i() - 1 }) +\n      barnsley_1() * y({ i_in: i() - 1 }) +\n      barnsley_4()\n    );\n};\n\nexport const y = () => {\n  if (i() == 0) return 0;\n  else\n    return (\n      barnsley_2() * x({ i_in: i() - 1 }) +\n      barnsley_3() * y({ i_in: i() - 1 }) +\n      barnsley_5()\n    );\n};\n"],"mappings":"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"}