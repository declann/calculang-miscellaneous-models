{"version":3,"sources":["webpack:///../../../../calculang-miscellaneous-models/webpack/universalModuleDefinition","webpack:///../../../../calculang-miscellaneous-models/webpack/bootstrap","webpack:///../../../../calculang-miscellaneous-models/fern-nomemo.cul.js"],"names":["barnsley_transforms","winning_transform_values","i_in","winner","i","r","Math","random","total_probability","reduce","p","v","prob1","prob2","prob3","prob4","barnsley_0","barnsley_1","barnsley_2","barnsley_3","barnsley_4","barnsley_5","x","y"],"mappings":"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","file":"fern-nomemo.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// the starting point here is modelled from the nicely simple/narrated code @ https://www.fractal.garden/barnsley-fern by Rico Trebeljahr\n\n// an array of 4 transformations and associated probabilities\nexport const barnsley_transforms = () => [\n  [\n    /* transformation params: */ 0, 0, 0, 0.16, 0, 0,\n    /* probability for this transform: */ 0.01,\n  ],\n  [0.85, 0.04, -0.04, 0.85, 0, 1.6, 0.85],\n  [0.2, -0.26, 0.23, 0.22, 0, 1.6, 0.07],\n  [-0.15, 0.28, 0.26, 0.24, 0, 0.44, 0.07],\n];\n\nexport const winning_transform_values = () => barnsley_transforms()[winner()];\n\nexport const i = () => i_in;\n\n// a draw determines which transformation to apply in each iteration\nexport const winner = () => {\n  var r = Math.random() + 0 * i();\n\n  // imperative so don't like this so much in calculang.. but its quick and ready, see reference above\n\n  // moving to weighting of probabilities, so easier to allow users to vary weights\n  const total_probability = barnsley_transforms().reduce((p, v) => p + v[6], 0);\n\n  const prob1 = barnsley_transforms()[1][6] / total_probability;\n  const prob2 = barnsley_transforms()[2][6] / total_probability;\n  const prob3 = barnsley_transforms()[3][6] / total_probability;\n  const prob4 = barnsley_transforms()[0][6] / total_probability;\n  if (r <= prob1) {\n    return 1;\n  } else if (r <= prob1 + prob2) {\n    return 2;\n  } else if (r <= prob1 + prob2 + prob3) {\n    return 3;\n  } else if (r <= prob1 + prob2 + prob3 + prob4) { // next step.. make # transforms variable\n    return 0;\n  }\n};\n\n// also abstract this..\nexport const barnsley_0 = () => winning_transform_values()[0];\nexport const barnsley_1 = () => winning_transform_values()[1];\nexport const barnsley_2 = () => winning_transform_values()[2];\nexport const barnsley_3 = () => winning_transform_values()[3];\nexport const barnsley_4 = () => winning_transform_values()[4];\nexport const barnsley_5 = () => winning_transform_values()[5];\n\n// this is where the magic is brought together::\n// the iterated function system\n\nexport const x = () => {\n  if (i() == 0) return 0;\n  else\n    return (\n      barnsley_0() * x({ i_in: i() - 1 }) +\n      barnsley_1() * y({ i_in: i() - 1 }) +\n      barnsley_4()\n    );\n};\n\nexport const y = () => {\n  if (i() == 0) return 0;\n  else\n    return (\n      barnsley_2() * x({ i_in: i() - 1 }) +\n      barnsley_3() * y({ i_in: i() - 1 }) +\n      barnsley_5()\n    );\n};\n"],"sourceRoot":""}