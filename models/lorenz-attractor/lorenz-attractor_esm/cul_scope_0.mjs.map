{"version":3,"names":["memoize","a_","a$","b_","b$","c_","c$","t_","t$","i_","i$","x_","x$","y_","y$","z_","z$","a$m","JSON","stringify","a","a_in","b$m","b","b_in","c$m","c","c_in","t$m","t","i$m","i","i_in","x$m","x","y$m","y","z$m","z"],"sources":["lorenz-attractor.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    import { a_ as a$, b_ as b$, c_ as c$, t_ as t$, i_ as i$, x_ as x$, y_ as y$, z_ as z$ } from './lorenz-attractor.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n    \n    \n\n////////// start a memo-loader code //////////\n//const a$m = memoize(999999, isEqual)(a$);\nexport const a$m = memoize(a$, JSON.stringify);\nexport const a = (a) => {\n  return a$m(a);\n  // eslint-disable-next-line no-undef\n  a$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end a memo-loader code //////////\n\n\n\n////////// start b memo-loader code //////////\n//const b$m = memoize(999999, isEqual)(b$);\nexport const b$m = memoize(b$, JSON.stringify);\nexport const b = (a) => {\n  return b$m(a);\n  // eslint-disable-next-line no-undef\n  b$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end b memo-loader code //////////\n\n\n\n////////// start c memo-loader code //////////\n//const c$m = memoize(999999, isEqual)(c$);\nexport const c$m = memoize(c$, JSON.stringify);\nexport const c = (a) => {\n  return c$m(a);\n  // eslint-disable-next-line no-undef\n  c$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end c memo-loader code //////////\n\n\n\n////////// start t memo-loader code //////////\n//const t$m = memoize(999999, isEqual)(t$);\nexport const t$m = memoize(t$, JSON.stringify);\nexport const t = (a) => {\n  return t$m(a);\n  // eslint-disable-next-line no-undef\n  t$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end t memo-loader code //////////\n\n\n\n////////// start i memo-loader code //////////\n//const i$m = memoize(999999, isEqual)(i$);\nexport const i$m = memoize(i$, JSON.stringify);\nexport const i = (a) => {\n  return i$m(a);\n  // eslint-disable-next-line no-undef\n  i$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end i memo-loader code //////////\n\n\n\n////////// start x memo-loader code //////////\n//const x$m = memoize(999999, isEqual)(x$);\nexport const x$m = memoize(x$, JSON.stringify);\nexport const x = (a) => {\n  return x$m(a);\n  // eslint-disable-next-line no-undef\n  x$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end x memo-loader code //////////\n\n\n\n////////// start y memo-loader code //////////\n//const y$m = memoize(999999, isEqual)(y$);\nexport const y$m = memoize(y$, JSON.stringify);\nexport const y = (a) => {\n  return y$m(a);\n  // eslint-disable-next-line no-undef\n  y$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end y memo-loader code //////////\n\n\n\n////////// start z memo-loader code //////////\n//const z$m = memoize(999999, isEqual)(z$);\nexport const z$m = memoize(z$, JSON.stringify);\nexport const z = (a) => {\n  return z$m(a);\n  // eslint-disable-next-line no-undef\n  z$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end z memo-loader code //////////\n\n\n    "],"mappings":"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"}