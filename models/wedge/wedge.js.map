{"version":3,"sources":["webpack:///../../../../calculang-miscellaneous-models/webpack/universalModuleDefinition","webpack:///../../../../calculang-miscellaneous-models/webpack/bootstrap","webpack:///../../../../calculang-miscellaneous-models/wedge.cul.js"],"names":["weight_y","coords","m","g","coords_in","Math","cos","theta","weight_x","sin","F_x","F_y","a_x","a_y","theta_in","g_in","m_in"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEO,MAAMA,QAAQ,GAAG,yCAAM;AAC5B,MAAIC,MAAM,eAAN,IAAY,QAAhB,EAA0B,OAAOC,CAAC,UAAD,GAAMC,CAAC,UAAd,CAA1B;AACK,MAAIF,MAAM,eAAN,IAAY,OAAhB;AACH,SAAOD,QAAQ,yBAAGI,SAAS,EAAE,QAAd,GAAR,GAAoCC,IAAI,CAACC,GAAL,CAASC,KAAK,cAAd,CAA3C;AACH,CAJM;;AAMA,MAAMC,QAAQ,GAAG,yCAAM;AAC5B,MAAIP,MAAM,eAAN,IAAY,QAAhB,EAA0B,OAAO,CAAP,CAA1B;AACK,MAAIA,MAAM,eAAN,IAAY,OAAhB;AACH,SAAOD,QAAQ,yBAASI,SAAS,EAAE,QAApB,GAAR,GAA0CC,IAAI,CAACI,GAAL,CAASF,KAAK,cAAd,CAAjD,CAH0B,CAG0C;AACvE,CAJM;;AAMP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACO,MAAMG,GAAG,GAAG,yCAAMF,QAAQ,qCAA1B;AACP;;AAEO,MAAMG,GAAG,GAAG,yCAAM;AACvB,MAAIV,MAAM,eAAN,IAAY,OAAhB,EAAyB,OAAO,CAAP;AACzB;AADA,OAEK,IAAIA,MAAM,eAAN,IAAY,QAAhB;AACH,SAAOO,QAAQ,yBAAGJ,SAAS,EAAE,OAAd,GAAR,GAAmCC,IAAI,CAACI,GAAL,CAASF,KAAK,cAAd,CAA1C,CAJqB,CAIwC;AAChE,CALM;AAMP;;AAEO,MAAMK,GAAG,GAAG,yCAAMF,GAAG,qCAAH,GAAQR,CAAC,UAA3B,C,CAA+B;;AAE/B,MAAMW,GAAG,GAAG,yCAAMF,GAAG,qCAAH,GAAQT,CAAC,UAA3B,C,CAA+B;;AAEtC;;AAEO,MAAMD,MAAM,GAAG,mBAAMG,SAArB,C,CAAgC;AAChC,MAAMG,KAAK,GAAG,kBAAMO,QAApB,C,CAA8B;AAC9B,MAAMX,CAAC,GAAG,cAAMY,IAAhB;AACA,MAAMb,CAAC,GAAG,cAAMc,IAAhB,C,CAAsB;AAC7B,sC","file":"wedge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// start simple: inclined plane by theta, no friction\r\n\r\n// multiple coordinate systems => an input, though I might get here incrementally\r\n\r\n// scale fns in-calculang, like an early view model, this might get me thinking about patterning.\r\n// +will an input control scales to usual fns, rather than making bespoke fns?\r\n\r\n// w/o friction the net force on inclined plane is mg*sin(theta) [mg=weight or gravitational force]\r\n// => a = F/m = g*sin(theta) [along the inclined plane]\r\n\r\n// todo generalise rotation of (0, mg) force? (think rotation matrix)\r\n\r\nexport const weight_y = () => {\r\n  if (coords() == 'ground') return m() * g();\r\n  else if (coords() == 'plane')\r\n    return weight_y({ coords_in: 'ground' }) * Math.cos(theta());\r\n};\r\n\r\nexport const weight_x = () => {\r\n  if (coords() == 'ground') return 0;\r\n  else if (coords() == 'plane')\r\n    return weight_y(/*!*/ { coords_in: 'ground' }) * Math.sin(theta()); // notation development as-in Julia would benefit a lot here\r\n};\r\n\r\n// other forces: Normal reaction which offsets weight_y on 'plane'\r\n// friction(out)\r\n\r\n// => net force on 'plane' is (?, 0)\r\n// but on 'ground' is (?, ?)\r\n// weight_x is the only force contributing to the net force (weight_y is offset by normal)\r\n\r\n// F is net force\r\n// only use weight_x\r\nexport const F_x = () => weight_x();\r\n// convert weight_x 'plane' to 'ground', so weight_x works directly?\r\n\r\nexport const F_y = () => {\r\n  if (coords() == 'plane') return 0;\r\n  // necessary? This is where normal+weight_y would cancel\r\n  else if (coords() == 'ground')\r\n    return weight_x({ coords_in: 'plane' }) * Math.sin(theta()); // ?\r\n};\r\n// convert weight_x 'plane' to 'ground', so weight_x('plane') is manipulated\r\n\r\nexport const a_x = () => F_x() / m(); // ?\r\n\r\nexport const a_y = () => F_y() / m(); // ?\r\n\r\n//export const a = () => g() * Math.sin(theta()); // relative to inclined plane, no coord stuff happening yet\r\n\r\nexport const coords = () => coords_in; // 'plane' for inclined plane and 'ground'\r\nexport const theta = () => theta_in; // radians, 1 radian ~= 57 degrees, todo configurable\r\nexport const g = () => g_in;\r\nexport const m = () => m_in; // force depends on mass, but not accelaration\r\n// todo also generalise x,y directions\r\n"],"sourceRoot":""}