{"version":3,"names":["memoize","x_","x$","y_","y$","block_x_","block_x$","section_x_","section_x$","block_y_","block_y$","color_","color$","x1_","x1$","y1_","y1$","skewness_","skewness$","x$m","JSON","stringify","x","a","y$m","y","block_x$m","block_x","section_x$m","section_x","block_y$m","block_y","color$m","color","x1$m","x1","y1$m","y1","skewness$m","skewness"],"sources":["sp-padrao.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    import { x_ as x$, y_ as y$, block_x_ as block_x$, section_x_ as section_x$, block_y_ as block_y$, color_ as color$, x1_ as x1$, y1_ as y1$, skewness_ as skewness$ } from './sp-padrao.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n    \n    \n\n////////// start x memo-loader code //////////\n//const x$m = memoize(999999, isEqual)(x$);\nexport const x$m = memoize(x$, JSON.stringify);\nexport const x = (a) => {\n  return x$m(a);\n  // eslint-disable-next-line no-undef\n  x$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end x memo-loader code //////////\n\n\n\n////////// start y memo-loader code //////////\n//const y$m = memoize(999999, isEqual)(y$);\nexport const y$m = memoize(y$, JSON.stringify);\nexport const y = (a) => {\n  return y$m(a);\n  // eslint-disable-next-line no-undef\n  y$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end y memo-loader code //////////\n\n\n\n////////// start block_x memo-loader code //////////\n//const block_x$m = memoize(999999, isEqual)(block_x$);\nexport const block_x$m = memoize(block_x$, JSON.stringify);\nexport const block_x = (a) => {\n  return block_x$m(a);\n  // eslint-disable-next-line no-undef\n  block_x$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end block_x memo-loader code //////////\n\n\n\n////////// start section_x memo-loader code //////////\n//const section_x$m = memoize(999999, isEqual)(section_x$);\nexport const section_x$m = memoize(section_x$, JSON.stringify);\nexport const section_x = (a) => {\n  return section_x$m(a);\n  // eslint-disable-next-line no-undef\n  section_x$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end section_x memo-loader code //////////\n\n\n\n////////// start block_y memo-loader code //////////\n//const block_y$m = memoize(999999, isEqual)(block_y$);\nexport const block_y$m = memoize(block_y$, JSON.stringify);\nexport const block_y = (a) => {\n  return block_y$m(a);\n  // eslint-disable-next-line no-undef\n  block_y$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end block_y memo-loader code //////////\n\n\n\n////////// start color memo-loader code //////////\n//const color$m = memoize(999999, isEqual)(color$);\nexport const color$m = memoize(color$, JSON.stringify);\nexport const color = (a) => {\n  return color$m(a);\n  // eslint-disable-next-line no-undef\n  color$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end color memo-loader code //////////\n\n\n\n////////// start x1 memo-loader code //////////\n//const x1$m = memoize(999999, isEqual)(x1$);\nexport const x1$m = memoize(x1$, JSON.stringify);\nexport const x1 = (a) => {\n  return x1$m(a);\n  // eslint-disable-next-line no-undef\n  x1$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end x1 memo-loader code //////////\n\n\n\n////////// start y1 memo-loader code //////////\n//const y1$m = memoize(999999, isEqual)(y1$);\nexport const y1$m = memoize(y1$, JSON.stringify);\nexport const y1 = (a) => {\n  return y1$m(a);\n  // eslint-disable-next-line no-undef\n  y1$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end y1 memo-loader code //////////\n\n\n\n////////// start skewness memo-loader code //////////\n//const skewness$m = memoize(999999, isEqual)(skewness$);\nexport const skewness$m = memoize(skewness$, JSON.stringify);\nexport const skewness = (a) => {\n  return skewness$m(a);\n  // eslint-disable-next-line no-undef\n  skewness$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end skewness memo-loader code //////////\n\n\n    "],"mappings":"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"}