{"version":3,"sources":["webpack:///../../../../calculang-miscellaneous-models/webpack/universalModuleDefinition","webpack:///../../../../calculang-miscellaneous-models/webpack/bootstrap","webpack:///../../../../calculang-miscellaneous-models/expected.cul.js","webpack:///../../../../calculang-miscellaneous-models/rec.cul.js"],"names":["subs_growth_pc","subs_growth_pc_in","subs_churn_pc","subs_churn_pc_in","subs_0","subs_0_in","year","year_in","CAC","CAC_in","subs_new","subs_new_actual_to_in","actuals_table_in","subs_churned_actual_to_in","subs","subs_churned","expenses","revenue","profit","actuals_table","subs_new_actual","subs_churned_actual","subs_new_actual_to","subs_churned_actual_to","subs_new_expected","subs_churned_expected","ea_start","ea_start_in","ea_end","ea_end_in","subs_ea","type","function","value","subs_new_experience","subs_churned_experience"],"mappings":"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","file":"rec.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const subs_growth_pc = () => subs_growth_pc_in;\nexport const subs_churn_pc = () => subs_churn_pc_in;\nexport const subs_0 = () => subs_0_in; // subs at start of year 0\nexport const year = () => year_in;\nexport const CAC = () => CAC_in;\n\nexport const subs_new = () =>\n  // its hard to find the year boundary needed here when I add expenses to model, when it worked without. Table and good error reporting is very important\n  year() < 0 ? 0 : subs({ year_in: year() - 1 }) * (subs_growth_pc() / 100);\n\nexport const subs_churned = () =>\n  ((subs({ year_in: year() - 1 }) + subs_new()) * subs_churn_pc()) / 100; // churn assumption also applies to new subs\n\n// subs at end = prev subs at end + new subs@yr - churned subs@yr\nexport const subs = () => {\n  if (year() < 0) return subs_0();\n  else return subs({ year_in: year() - 1 }) + subs_new() - subs_churned();\n}; // => can project subs given subs_0, growth and churn rates\n\nexport const expenses = () => subs_new() * CAC(); // error?\nexport const revenue = () => subs() * 100;\nexport const profit = () => revenue() - expenses();\n","import {\n  subs,\n  subs_new as subs_new_expected,\n  subs_churned as subs_churned_expected,\n  year,\n  revenue,\n  expenses,\n  profit,\n  CAC,\n} from './expected.cul.js';\nexport { subs, year };\nexport { revenue, expenses, profit, CAC }; // necessary\n\nexport const actuals_table = () => actuals_table_in;\n\n// actuals\nexport const subs_0 = () => subs_0_in; // start at 100 subs (this line now redundant!)\nexport const subs_new_actual = () =>\n  actuals_table()[year() + 1].subs_new_actual;\nexport const subs_churned_actual = () =>\n  actuals_table()[year() + 1].subs_churned_actual;\n\n// year up to which actual data should be used, -1=use only expecteds\nexport const subs_new_actual_to = () => subs_new_actual_to_in;\nexport const subs_churned_actual_to = () => subs_churned_actual_to_in;\n\n// interleave actuals into projections: this rebases expd using actuals?\nexport const subs_new = () => {\n  if (year() <= subs_new_actual_to()) return subs_new_actual();\n  else return subs_new_expected(); // this is an override which uses itself: but it doesn't compile correctly, check memo-loader version?\n};\nexport const subs_churned = () => {\n  if (year() <= subs_churned_actual_to()) return subs_churned_actual();\n  else return subs_churned_expected();\n};\n\n// move away from experience.\n// just look at projections\n// => subs({year:x,actuals:x})\n\nexport const ea_start = () => ea_start_in;\nexport const ea_end = () => ea_end_in;\n\nexport const subs_ea = () => [\n  {\n    type: 'Expected',\n    function: 'subs',\n    value: subs({\n      year_in: ea_end(),\n      subs_new_actual_to_in: ea_start(),\n      subs_churned_actual_to_in: ea_start(),\n    }),\n  },\n  {\n    type: '-> Actual Sales', // this impact will include expd churn on sales impact, alt. split could use 0 decrements and create a balancing 'confounding' amount\n    function: 'subs',\n    value: subs({\n      year_in: ea_end(),\n      subs_new_actual_to_in: ea_end(),\n      subs_churned_actual_to_in: ea_start(),\n    }),\n  },\n  {\n    type: '-> Actual Churn (=Actual)',\n    function: 'subs',\n    value: subs({\n      year_in: ea_end(),\n      subs_new_actual_to_in: ea_end(),\n      subs_churned_actual_to_in: ea_end(),\n    }),\n  },\n];\n// todo use an impacts abstraction or move subtraction to VL\n\n// reconcile actual to expected, experience=A-E\n// in year\n// this should be abstracted using a table for clarity\nexport const subs_new_experience = () => {\n  // now a fn on year\n  const subs_churned_actual_to_in = year() - 1;\n  return (\n    subs_new(/*_actual*/ { subs_new_actual_to_in: year() }) -\n    subs_new(/*_expected*/ { subs_new_actual_to_in: year() - 1 })\n  );\n};\n\nexport const subs_churned_experience = () => {\n  // now a fn on year\n  const subs_new_actual_to_in = year();\n  return (\n    subs_churned(/*_actual*/ { subs_churned_actual_to_in: year() }) -\n    subs_churned(/*_expected*/ { subs_churned_actual_to_in: year() - 1 })\n  ); // todo project, constrain rec ordering somewhere\n};\n\n// re introspection: devtools can probably do this? But messy at that stage, so might not be an option\n// export to excel with hacked formulae (=7+0*E8) for relationships is probably a nice short-term feature until I get the experience outside\n// hacked formulae can easily be replaced by proper conversions if I convert JS to Excel in fut\n// maybe this is important for explanation phase, more impt than technical/memo-loader?\n"],"sourceRoot":""}