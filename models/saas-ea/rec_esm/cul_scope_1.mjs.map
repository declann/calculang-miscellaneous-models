{"version":3,"names":["subs_growth_pc","subs_growth_pc_in","subs_churn_pc","subs_churn_pc_in","subs_0","subs_0_in","year","year_in","CAC","CAC_in","subs_new","subs_new_actual_to_in","actuals_table_in","subs_churned_actual_to_in","subs","subs_churned","expenses","revenue","profit"],"sources":["expected.cul.js"],"sourcesContent":["export const subs_growth_pc = () => subs_growth_pc_in;\nexport const subs_churn_pc = () => subs_churn_pc_in;\nexport const subs_0 = () => subs_0_in; // subs at start of year 0\nexport const year = () => year_in;\nexport const CAC = () => CAC_in;\n\nexport const subs_new = () =>\n  // its hard to find the year boundary needed here when I add expenses to model, when it worked without. Table and good error reporting is very important\n  year() < 0 ? 0 : subs({ year_in: year() - 1 }) * (subs_growth_pc() / 100);\n\nexport const subs_churned = () =>\n  ((subs({ year_in: year() - 1 }) + subs_new()) * subs_churn_pc()) / 100; // churn assumption also applies to new subs\n\n// subs at end = prev subs at end + new subs@yr - churned subs@yr\nexport const subs = () => {\n  if (year() < 0) return subs_0();\n  else return subs({ year_in: year() - 1 }) + subs_new() - subs_churned();\n}; // => can project subs given subs_0, growth and churn rates\n\nexport const expenses = () => subs_new() * CAC(); // error?\nexport const revenue = () => subs() * 100;\nexport const profit = () => revenue() - expenses();\n"],"mappings":"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"}