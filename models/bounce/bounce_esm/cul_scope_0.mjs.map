{"version":3,"names":["memoize","t_","t$","dx_","dx$","dampener_","dampener$","x_","x$","y_","y$","dy_","dy$","compressed_","compressed$","t$m","JSON","stringify","t","a","dx$m","dx","dampener$m","dampener","x$m","x","y$m","y","dy$m","dy","compressed$m","compressed"],"sources":["bounce.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    import { t_ as t$, dx_ as dx$, dampener_ as dampener$, x_ as x$, y_ as y$, dy_ as dy$, compressed_ as compressed$ } from './bounce.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n    \n    \n\n////////// start t memo-loader code //////////\n//const t$m = memoize(999999, isEqual)(t$);\nexport const t$m = memoize(t$, JSON.stringify);\nexport const t = (a) => {\n  return t$m(a);\n  // eslint-disable-next-line no-undef\n  t$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end t memo-loader code //////////\n\n\n\n////////// start dx memo-loader code //////////\n//const dx$m = memoize(999999, isEqual)(dx$);\nexport const dx$m = memoize(dx$, JSON.stringify);\nexport const dx = (a) => {\n  return dx$m(a);\n  // eslint-disable-next-line no-undef\n  dx$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end dx memo-loader code //////////\n\n\n\n////////// start dampener memo-loader code //////////\n//const dampener$m = memoize(999999, isEqual)(dampener$);\nexport const dampener$m = memoize(dampener$, JSON.stringify);\nexport const dampener = (a) => {\n  return dampener$m(a);\n  // eslint-disable-next-line no-undef\n  dampener$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end dampener memo-loader code //////////\n\n\n\n////////// start x memo-loader code //////////\n//const x$m = memoize(999999, isEqual)(x$);\nexport const x$m = memoize(x$, JSON.stringify);\nexport const x = (a) => {\n  return x$m(a);\n  // eslint-disable-next-line no-undef\n  x$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end x memo-loader code //////////\n\n\n\n////////// start y memo-loader code //////////\n//const y$m = memoize(999999, isEqual)(y$);\nexport const y$m = memoize(y$, JSON.stringify);\nexport const y = (a) => {\n  return y$m(a);\n  // eslint-disable-next-line no-undef\n  y$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end y memo-loader code //////////\n\n\n\n////////// start dy memo-loader code //////////\n//const dy$m = memoize(999999, isEqual)(dy$);\nexport const dy$m = memoize(dy$, JSON.stringify);\nexport const dy = (a) => {\n  return dy$m(a);\n  // eslint-disable-next-line no-undef\n  dy$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end dy memo-loader code //////////\n\n\n\n////////// start compressed memo-loader code //////////\n//const compressed$m = memoize(999999, isEqual)(compressed$);\nexport const compressed$m = memoize(compressed$, JSON.stringify);\nexport const compressed = (a) => {\n  return compressed$m(a);\n  // eslint-disable-next-line no-undef\n  compressed$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end compressed memo-loader code //////////\n\n\n    "],"mappings":";AACI,SAASA,OAAO,QAAQ,YAAY;AACpC;AACA;;AAEA,SAASC,EAAE,IAAIC,EAAE,EAAEC,GAAG,IAAIC,GAAG,EAAEC,SAAS,IAAIC,SAAS,EAAEC,EAAE,IAAIC,EAAE,EAAEC,EAAE,IAAIC,EAAE,EAAEC,GAAG,IAAIC,GAAG,EAAEC,WAAW,IAAIC,WAAW,QAAQ,8DAAyB,CAAC,CAAC;;;;AAIxJ;AACA;AACA,OAAO,MAAMC,GAAG,GAAGf,OAAO,CAACE,EAAE,EAAEc,IAAI,CAACC,SAAS,CAAC;AAC9C,OAAO,MAAMC,CAAC,GAAG,CAACC,CAAC,KAAK;EACtB,OAAOJ,GAAG,CAACI,CAAC,CAAC;EACb;EACAjB,EAAE,UAAE,CAAC,CAAC;AACR,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,IAAI,GAAGpB,OAAO,CAACI,GAAG,EAAEY,IAAI,CAACC,SAAS,CAAC;AAChD,OAAO,MAAMI,EAAE,GAAG,CAACF,CAAC,KAAK;EACvB,OAAOC,IAAI,CAACD,CAAC,CAAC;EACd;EACAf,GAAG,WAAE,CAAC,CAAC;AACT,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,UAAU,GAAGtB,OAAO,CAACM,SAAS,EAAEU,IAAI,CAACC,SAAS,CAAC;AAC5D,OAAO,MAAMM,QAAQ,GAAG,CAACJ,CAAC,KAAK;EAC7B,OAAOG,UAAU,CAACH,CAAC,CAAC;EACpB;EACAb,SAAS,iBAAE,CAAC,CAAC;AACf,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,GAAG,GAAGxB,OAAO,CAACQ,EAAE,EAAEQ,IAAI,CAACC,SAAS,CAAC;AAC9C,OAAO,MAAMQ,CAAC,GAAG,CAACN,CAAC,KAAK;EACtB,OAAOK,GAAG,CAACL,CAAC,CAAC;EACb;EACAX,EAAE,iBAAE,CAAC,CAAC;AACR,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,GAAG,GAAG1B,OAAO,CAACU,EAAE,EAAEM,IAAI,CAACC,SAAS,CAAC;AAC9C,OAAO,MAAMU,CAAC,GAAG,CAACR,CAAC,KAAK;EACtB,OAAOO,GAAG,CAACP,CAAC,CAAC;EACb;EACAT,EAAE,uBAAE,CAAC,CAAC;AACR,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,IAAI,GAAG5B,OAAO,CAACY,GAAG,EAAEI,IAAI,CAACC,SAAS,CAAC;AAChD,OAAO,MAAMY,EAAE,GAAG,CAACV,CAAC,KAAK;EACvB,OAAOS,IAAI,CAACT,CAAC,CAAC;EACd;EACAP,GAAG,uBAAE,CAAC,CAAC;AACT,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMkB,YAAY,GAAG9B,OAAO,CAACc,WAAW,EAAEE,IAAI,CAACC,SAAS,CAAC;AAChE,OAAO,MAAMc,UAAU,GAAG,CAACZ,CAAC,KAAK;EAC/B,OAAOW,YAAY,CAACX,CAAC,CAAC;EACtB;EACAL,WAAW,uBAAE,CAAC,CAAC;AACjB,CAAC;AACD"}