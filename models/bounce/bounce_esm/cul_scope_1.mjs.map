{"version":3,"names":["dy","y","x","dampener","dx","t","t_","t_in","dx_","dx_in","dampener_","dampener_in","x_","y_","dy_"],"sources":["bounce.cul.js"],"sourcesContent":["import { dy } from \"./bounce.cul.js\";import { y } from \"./bounce.cul.js\";import { x } from \"./bounce.cul.js\";import { dampener } from \"./bounce.cul.js\";import { dx } from \"./bounce.cul.js\";import { t } from \"./bounce.cul.js\"; // at time 0 (when t_in=0) values for x and dy are 0, while value for y is 50 (values hardcoded below).\n// the floor is at y=190 so the ball will start falling until it reaches 190, and then bounce.\n// dy calculates the change to y in each time step (except where the \"floor rule\" bites).\n// dy is 3 at t_in=1 and is influenced by a dampener input\n\n/////////// model ///////////\n\n// explicit inputs (by convention):\nexport const t_ = ({ t_in }) => t_in;\nexport const dx_ = ({ dx_in }) => dx_in;\nexport const dampener_ = ({ dampener_in }) => dampener_in;\n\n// functions:\n\n// calculang determines x function dependent on inputs t_in, dx_in\nexport const x_ = ({ t_in, dx_in }) => {\n  if (t({ t_in }) == 0) return 0;else\n  return x({ dx_in, t_in: t({ t_in }) - 1 }) + dx({ dx_in });\n};\n\n// calculang determines y function dependent on inputs t_in, dampener_in\nexport const y_ = ({ t_in, dampener_in }) => {\n  if (t({ t_in }) == 0) return 50;else\n  if (y({ dampener_in, t_in: t({ t_in }) - 1 }) + dy({ t_in, dampener_in }) > 185) return 190; // \"floor rule\"\n  else return y({ dampener_in, t_in: t({ t_in }) - 1 }) + dy({ t_in, dampener_in });\n};\n\n// calculang determines dy function dependent on inputs t_in, dampener_in\nexport const dy_ = ({ t_in, dampener_in }) => {\n  if (t({ t_in }) == 0) return 0;else\n  if (y({ dampener_in, t_in: t({ t_in }) - 1 }) + dy({ dampener_in, t_in: t({ t_in }) - 1 }) * dampener({ dampener_in }) + 3 > 185)\n  return -dy({ dampener_in, t_in: t({ t_in }) - 1 }); // bounce at the floor by negating dy\n  else return dy({ dampener_in, t_in: t({ t_in }) - 1 }) * dampener({ dampener_in }) + 3;\n};"],"mappings":"AAAA,SAASA,EAAE,QAAQ,mBAAiB,CAAC,SAASC,CAAC,QAAQ,mBAAiB,CAAC,SAASC,CAAC,QAAQ,mBAAiB,CAAC,SAASC,QAAQ,QAAQ,mBAAiB,CAAC,SAASC,EAAE,QAAQ,mBAAiB,CAAC,SAASC,CAAC,QAAQ,mBAAiB,CAAC,CAAC;AAClO;AACA;AACA;;AAEA;;AAEA;AACA,OAAO,MAAMC,EAAE,GAAGA,CAAC,EAAEC,IAAI,CAAC,CAAC,KAAKA,IAAI;AACpC,OAAO,MAAMC,GAAG,GAAGA,CAAC,EAAEC,KAAK,CAAC,CAAC,KAAKA,KAAK;AACvC,OAAO,MAAMC,SAAS,GAAGA,CAAC,EAAEC,WAAW,CAAC,CAAC,KAAKA,WAAW;;AAEzD;;AAEA;AACA,OAAO,MAAMC,EAAE,GAAGA,CAAC,EAAEL,IAAI,EAAEE,KAAK,CAAC,CAAC,KAAK;EACrC,IAAIJ,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;EAC/B,OAAOL,CAAC,CAAC,EAAEO,KAAK,EAAEF,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGH,EAAE,CAAC,EAAEK,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,OAAO,MAAMI,EAAE,GAAGA,CAAC,EAAEN,IAAI,EAAEI,WAAW,CAAC,CAAC,KAAK;EAC3C,IAAIN,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC;EAChC,IAAIN,CAAC,CAAC,EAAEU,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGP,EAAE,CAAC,EAAEO,IAAI,EAAEI,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,GAAG,CAAC,CAAC;EAAA,KACxF,OAAOV,CAAC,CAAC,EAAEU,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGP,EAAE,CAAC,EAAEO,IAAI,EAAEI,WAAW,CAAC,CAAC,CAAC;AACnF,CAAC;;AAED;AACA,OAAO,MAAMG,GAAG,GAAGA,CAAC,EAAEP,IAAI,EAAEI,WAAW,CAAC,CAAC,KAAK;EAC5C,IAAIN,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;EAC/B,IAAIN,CAAC,CAAC,EAAEU,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGP,EAAE,CAAC,EAAEW,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGJ,QAAQ,CAAC,EAAEQ,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;EAChI,OAAO,CAACX,EAAE,CAAC,EAAEW,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA,KAC/C,OAAOP,EAAE,CAAC,EAAEW,WAAW,EAAEJ,IAAI,EAAEF,CAAC,CAAC,EAAEE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGJ,QAAQ,CAAC,EAAEQ,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;AACxF,CAAC"}