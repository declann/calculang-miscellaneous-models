{"version":3,"file":"./cul_scope_0-babeled-fondued.bundle.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;ACVa,8CAA6C,EAAE,aAAa,EAAC,CAAC,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,UAAU,GAAG,UAAU,GAAG,gBAAgB,GAAG,kBAAkB,WAAW;AACzL;AACA;;AAEA;;AAEA;AACA,0BAA0B,qBAAqB,cAAc,SAAS;AACtE,6BAA6B,wBAAwB,eAAe,UAAU;AAC9E,yCAAyC,oCAAoC;;AAE7E;;AAEA;AACA,gBAAgB,YAAY,2BAA2B;AACvD,UAAU,YAAY,0BAA0B,cAAc,EAAE;AAChE,aAAa,wBAAwB,YAAY,OAAO,SAAS,cAAc;AAC/E;;AAEA;AACA,SAAS,KAAK,2BAA2B;AACzC,UAAU,YAAY,kBAAkB;AACxC,UAAU,oCAAoC,YAAY,OAAO,SAAS,oCAAoC,YAAY,OAAO,qBAAqB;AACtJ,kBAAkB,oCAAoC,YAAY,OAAO,SAAS,oCAAoC,YAAY,OAAO;AACzI;;AAEA;AACA,SAAS,KAAK,6BAA6B;AAC3C,UAAU,YAAY,8BAA8B,0BAA0B,MAAM;AACpF,UAAU,oCAAoC,YAAY,GAAG,sBAAsB,oCAAoC,YAAY,OAAO,GAAG;AAC7I,mBAAmB,oCAAoC,YAAY,OAAO,eAAe,0BAA0B;AACnH,GAAG;;AAEH;AACA,UAAU,MAAM,6CAA6C,sDAAsD,WAAW,sCAAsC,0BAA0B,kBAAkB;;AAEhN,+C","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./cul_scope_0-babeled-fondued.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","\"use strict\";Object.defineProperty(exports, \"__esModule\", { value: true });exports.y = exports.x = exports.t = exports.dy = exports.dx = exports.dampener = exports.compressed = void 0; // the floor is at y=190 so the ball will start falling until it reaches 190, and then bounce.\n// dy calculates the change to y in each time step (except where the \"floor rule\" bites).\n// dy is 3 at t_in=0 and is influenced by a dampener input\n\n/////////// model ///////////\n\n// explicit inputs (by convention):\nvar t = function t(_ref) {var t_in = _ref.t_in;return t_in;};exports.t = t;\nvar dx = function dx(_ref2) {var dx_in = _ref2.dx_in;return dx_in;};exports.dx = dx;\nvar dampener = function dampener(_ref3) {var dampener_in = _ref3.dampener_in;return dampener_in;};\n\n// functions:\n\n// calculang determines x function dependent on inputs t_in, dx_in\nexports.dampener = dampener;var x = function x(_ref4) {var t_in = _ref4.t_in,dx_in = _ref4.dx_in;\n  if (t({ t_in: t_in }) == 0) return 100 + dx({ dx_in: dx_in });else\n  return x({ dx_in: dx_in, t_in: t({ t_in: t_in }) - 1 }) + dx({ dx_in: dx_in });\n};\n\n// calculang determines y function dependent on inputs t_in, dampener_in\nexports.x = x;var y = function y(_ref5) {var t_in = _ref5.t_in,dampener_in = _ref5.dampener_in;\n  if (t({ t_in: t_in }) == 0) return 50;else\n  if (y({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 }) + dy({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 }) > 185) return 190; // \"floor rule\"\n  else return y({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 }) + dy({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 });\n};\n\n// calculang determines dy function dependent on inputs t_in, dampener_in\nexports.y = y;var dy = function dy(_ref6) {var t_in = _ref6.t_in,dampener_in = _ref6.dampener_in;\n  if (t({ t_in: t_in }) == 0) return 0 * dampener({ dampener_in: dampener_in }) + 3;else\n  if (y({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) }) > 185) return -dy({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 }); // bounce at the floor by negating dy\n  else return dy({ dampener_in: dampener_in, t_in: t({ t_in: t_in }) - 1 }) * dampener({ dampener_in: dampener_in }) + 3;\n}; // if expressions vs statements would really help make this more concise\n\n// ball gets compressed on the ground before bouncing upwards\nexports.dy = dy;var compressed = function compressed(_ref7) {var t_in = _ref7.t_in,dampener_in = _ref7.dampener_in;return y({ t_in: t_in, dampener_in: dampener_in }) == 190 ? true : false;};exports.compressed = compressed;\n\n//# sourceMappingURL=cul_scope_0-babeled.js.map"],"names":[],"sourceRoot":""}