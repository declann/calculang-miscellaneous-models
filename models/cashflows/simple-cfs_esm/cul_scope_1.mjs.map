{"version":3,"sources":["simple-cfs.cul.js"],"names":["npv_i","last_month","salary_per_employee","new_employees_per_month","employees_0","rent","vc_2","vc_1","mrr_growth","month","mrr","npv","total_cf","payroll_cf","employees","rent_cf","vc_cf","mrr_cf","mrr_cf_","month_in","mrr_in","mrr_growth_in","Math","exp","vc_cf_","vc_1_in","vc_2_in","rent_cf_","rent_in","employees_","employees_0_in","new_employees_per_month_in","payroll_cf_","salary_per_employee_in","total_cf_","npv_","last_month_in","npv_i_in","mrr_","month_","mrr_growth_","vc_1_","vc_2_","rent_","employees_0_","new_employees_per_month_","salary_per_employee_","last_month_","npv_i_"],"mappings":"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","sourcesContent":["import { npv_i } from \"./simple-cfs.cul.js\";import { last_month } from \"./simple-cfs.cul.js\";import { salary_per_employee } from \"./simple-cfs.cul.js\";import { new_employees_per_month } from \"./simple-cfs.cul.js\";import { employees_0 } from \"./simple-cfs.cul.js\";import { rent } from \"./simple-cfs.cul.js\";import { vc_2 } from \"./simple-cfs.cul.js\";import { vc_1 } from \"./simple-cfs.cul.js\";import { mrr_growth } from \"./simple-cfs.cul.js\";import { month } from \"./simple-cfs.cul.js\";import { mrr } from \"./simple-cfs.cul.js\";import { npv } from \"./simple-cfs.cul.js\";import { total_cf } from \"./simple-cfs.cul.js\";import { payroll_cf } from \"./simple-cfs.cul.js\";import { employees } from \"./simple-cfs.cul.js\";import { rent_cf } from \"./simple-cfs.cul.js\";import { vc_cf } from \"./simple-cfs.cul.js\";import { mrr_cf } from \"./simple-cfs.cul.js\";export const mrr_cf_ = ({ month_in, mrr_in, mrr_growth_in }) => {\n  if (month({ month_in }) == -1) return 0;else\n  return mrr({ mrr_in }) * Math.exp(month({ month_in }) * mrr_growth({ mrr_growth_in }));\n};\n\nexport const vc_cf_ = ({ month_in, vc_1_in, vc_2_in }) => {\n  if (month({ month_in }) == 3) return vc_1({ vc_1_in });\n  if (month({ month_in }) == 11) return vc_2({ vc_2_in });else\n  return 0;\n};\n\nexport const rent_cf_ = ({ month_in, rent_in }) => {\n  if (month({ month_in }) == -1) return 0; // => rent_cf now dept on month\n  else return -rent({ rent_in });\n};\n\nexport const employees_ = ({ month_in, employees_0_in, new_employees_per_month_in }) => {\n  if (month({ month_in }) == -1) return 0;\n  if (month({ month_in }) == 0) return employees_0({ employees_0_in });else\n  return employees({ employees_0_in, new_employees_per_month_in, month_in: month({ month_in }) - 1 }) + new_employees_per_month({ new_employees_per_month_in });\n};\n\nexport const payroll_cf_ = ({ salary_per_employee_in, month_in, employees_0_in, new_employees_per_month_in }) => -salary_per_employee({ salary_per_employee_in }) * employees({ month_in, employees_0_in, new_employees_per_month_in });\n\nexport const total_cf_ = ({ month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in }) => mrr_cf({ month_in, mrr_in, mrr_growth_in }) + rent_cf({ month_in, rent_in }) + vc_cf({ month_in, vc_1_in, vc_2_in }) + payroll_cf({ salary_per_employee_in, month_in, employees_0_in, new_employees_per_month_in });\n\nexport const npv_ = ({ month_in, last_month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, npv_i_in }) => {\n  if (month({ month_in }) >= last_month({ last_month_in })) return 0;\n  return (\n    (npv({ last_month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, npv_i_in, month_in: month({ month_in }) + 1 }) + total_cf({ mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, month_in: month({ month_in }) + 1 })) / (\n    1 + npv_i({ npv_i_in })));\n\n};\n\n// inputs\nexport const mrr_ = ({ mrr_in }) => mrr_in;\nexport const month_ = ({ month_in }) => month_in;\nexport const mrr_growth_ = ({ mrr_growth_in }) => mrr_growth_in;\nexport const vc_1_ = ({ vc_1_in }) => vc_1_in;\nexport const vc_2_ = ({ vc_2_in }) => vc_2_in;\nexport const rent_ = ({ rent_in }) => rent_in;\nexport const employees_0_ = ({ employees_0_in }) => employees_0_in;\nexport const new_employees_per_month_ = ({ new_employees_per_month_in }) => new_employees_per_month_in;\nexport const salary_per_employee_ = ({ salary_per_employee_in }) => salary_per_employee_in;\nexport const last_month_ = ({ last_month_in }) => last_month_in;\nexport const npv_i_ = ({ npv_i_in }) => npv_i_in;"]}