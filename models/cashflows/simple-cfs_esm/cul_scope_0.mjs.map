{"version":3,"names":["memoize","mrr_cf_","mrr_cf$","vc_cf_","vc_cf$","rent_cf_","rent_cf$","employees_","employees$","payroll_cf_","payroll_cf$","total_cf_","total_cf$","npv_","npv$","mrr_","mrr$","month_","month$","mrr_growth_","mrr_growth$","vc_1_","vc_1$","vc_2_","vc_2$","rent_","rent$","employees_0_","employees_0$","new_employees_per_month_","new_employees_per_month$","salary_per_employee_","salary_per_employee$","last_month_","last_month$","npv_i_","npv_i$","mrr_cf$m","JSON","stringify","mrr_cf","a","month_in","mrr_in","mrr_growth_in","vc_cf$m","vc_cf","vc_1_in","vc_2_in","rent_cf$m","rent_cf","rent_in","employees$m","employees","employees_0_in","new_employees_per_month_in","payroll_cf$m","payroll_cf","salary_per_employee_in","total_cf$m","total_cf","npv$m","npv","last_month_in","npv_i_in","mrr$m","mrr","month$m","month","mrr_growth$m","mrr_growth","vc_1$m","vc_1","vc_2$m","vc_2","rent$m","rent","employees_0$m","employees_0","new_employees_per_month$m","new_employees_per_month","salary_per_employee$m","salary_per_employee","last_month$m","last_month","npv_i$m","npv_i"],"sources":["simple-cfs.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    // import/export non-to memo?\n\n    import { mrr_cf_ as mrr_cf$, vc_cf_ as vc_cf$, rent_cf_ as rent_cf$, employees_ as employees$, payroll_cf_ as payroll_cf$, total_cf_ as total_cf$, npv_ as npv$, mrr_ as mrr$, month_ as month$, mrr_growth_ as mrr_growth$, vc_1_ as vc_1$, vc_2_ as vc_2$, rent_ as rent$, employees_0_ as employees_0$, new_employees_per_month_ as new_employees_per_month$, salary_per_employee_ as salary_per_employee$, last_month_ as last_month$, npv_i_ as npv_i$ } from './simple-cfs.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n    \n    \n    \n\n////////// start mrr_cf memo-loader code //////////\n//const mrr_cf$m = memoize(999999, isEqual)(mrr_cf$);\nexport const mrr_cf$m = memoize(mrr_cf$, JSON.stringify);\nexport const mrr_cf = (a) => {\n  return mrr_cf$m(a);\n  // eslint-disable-next-line no-undef\n  mrr_cf$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr_cf memo-loader code //////////\n\n\n\n////////// start vc_cf memo-loader code //////////\n//const vc_cf$m = memoize(999999, isEqual)(vc_cf$);\nexport const vc_cf$m = memoize(vc_cf$, JSON.stringify);\nexport const vc_cf = (a) => {\n  return vc_cf$m(a);\n  // eslint-disable-next-line no-undef\n  vc_cf$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_cf memo-loader code //////////\n\n\n\n////////// start rent_cf memo-loader code //////////\n//const rent_cf$m = memoize(999999, isEqual)(rent_cf$);\nexport const rent_cf$m = memoize(rent_cf$, JSON.stringify);\nexport const rent_cf = (a) => {\n  return rent_cf$m(a);\n  // eslint-disable-next-line no-undef\n  rent_cf$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end rent_cf memo-loader code //////////\n\n\n\n////////// start employees memo-loader code //////////\n//const employees$m = memoize(999999, isEqual)(employees$);\nexport const employees$m = memoize(employees$, JSON.stringify);\nexport const employees = (a) => {\n  return employees$m(a);\n  // eslint-disable-next-line no-undef\n  employees$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end employees memo-loader code //////////\n\n\n\n////////// start payroll_cf memo-loader code //////////\n//const payroll_cf$m = memoize(999999, isEqual)(payroll_cf$);\nexport const payroll_cf$m = memoize(payroll_cf$, JSON.stringify);\nexport const payroll_cf = (a) => {\n  return payroll_cf$m(a);\n  // eslint-disable-next-line no-undef\n  payroll_cf$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end payroll_cf memo-loader code //////////\n\n\n\n////////// start total_cf memo-loader code //////////\n//const total_cf$m = memoize(999999, isEqual)(total_cf$);\nexport const total_cf$m = memoize(total_cf$, JSON.stringify);\nexport const total_cf = (a) => {\n  return total_cf$m(a);\n  // eslint-disable-next-line no-undef\n  total_cf$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end total_cf memo-loader code //////////\n\n\n\n////////// start npv memo-loader code //////////\n//const npv$m = memoize(999999, isEqual)(npv$);\nexport const npv$m = memoize(npv$, JSON.stringify);\nexport const npv = (a) => {\n  return npv$m(a);\n  // eslint-disable-next-line no-undef\n  npv$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end npv memo-loader code //////////\n\n\n\n////////// start mrr memo-loader code //////////\n//const mrr$m = memoize(999999, isEqual)(mrr$);\nexport const mrr$m = memoize(mrr$, JSON.stringify);\nexport const mrr = (a) => {\n  return mrr$m(a);\n  // eslint-disable-next-line no-undef\n  mrr$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr memo-loader code //////////\n\n\n\n////////// start month memo-loader code //////////\n//const month$m = memoize(999999, isEqual)(month$);\nexport const month$m = memoize(month$, JSON.stringify);\nexport const month = (a) => {\n  return month$m(a);\n  // eslint-disable-next-line no-undef\n  month$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end month memo-loader code //////////\n\n\n\n////////// start mrr_growth memo-loader code //////////\n//const mrr_growth$m = memoize(999999, isEqual)(mrr_growth$);\nexport const mrr_growth$m = memoize(mrr_growth$, JSON.stringify);\nexport const mrr_growth = (a) => {\n  return mrr_growth$m(a);\n  // eslint-disable-next-line no-undef\n  mrr_growth$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr_growth memo-loader code //////////\n\n\n\n////////// start vc_1 memo-loader code //////////\n//const vc_1$m = memoize(999999, isEqual)(vc_1$);\nexport const vc_1$m = memoize(vc_1$, JSON.stringify);\nexport const vc_1 = (a) => {\n  return vc_1$m(a);\n  // eslint-disable-next-line no-undef\n  vc_1$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_1 memo-loader code //////////\n\n\n\n////////// start vc_2 memo-loader code //////////\n//const vc_2$m = memoize(999999, isEqual)(vc_2$);\nexport const vc_2$m = memoize(vc_2$, JSON.stringify);\nexport const vc_2 = (a) => {\n  return vc_2$m(a);\n  // eslint-disable-next-line no-undef\n  vc_2$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_2 memo-loader code //////////\n\n\n\n////////// start rent memo-loader code //////////\n//const rent$m = memoize(999999, isEqual)(rent$);\nexport const rent$m = memoize(rent$, JSON.stringify);\nexport const rent = (a) => {\n  return rent$m(a);\n  // eslint-disable-next-line no-undef\n  rent$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end rent memo-loader code //////////\n\n\n\n////////// start employees_0 memo-loader code //////////\n//const employees_0$m = memoize(999999, isEqual)(employees_0$);\nexport const employees_0$m = memoize(employees_0$, JSON.stringify);\nexport const employees_0 = (a) => {\n  return employees_0$m(a);\n  // eslint-disable-next-line no-undef\n  employees_0$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end employees_0 memo-loader code //////////\n\n\n\n////////// start new_employees_per_month memo-loader code //////////\n//const new_employees_per_month$m = memoize(999999, isEqual)(new_employees_per_month$);\nexport const new_employees_per_month$m = memoize(new_employees_per_month$, JSON.stringify);\nexport const new_employees_per_month = (a) => {\n  return new_employees_per_month$m(a);\n  // eslint-disable-next-line no-undef\n  new_employees_per_month$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end new_employees_per_month memo-loader code //////////\n\n\n\n////////// start salary_per_employee memo-loader code //////////\n//const salary_per_employee$m = memoize(999999, isEqual)(salary_per_employee$);\nexport const salary_per_employee$m = memoize(salary_per_employee$, JSON.stringify);\nexport const salary_per_employee = (a) => {\n  return salary_per_employee$m(a);\n  // eslint-disable-next-line no-undef\n  salary_per_employee$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end salary_per_employee memo-loader code //////////\n\n\n\n////////// start last_month memo-loader code //////////\n//const last_month$m = memoize(999999, isEqual)(last_month$);\nexport const last_month$m = memoize(last_month$, JSON.stringify);\nexport const last_month = (a) => {\n  return last_month$m(a);\n  // eslint-disable-next-line no-undef\n  last_month$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end last_month memo-loader code //////////\n\n\n\n////////// start npv_i memo-loader code //////////\n//const npv_i$m = memoize(999999, isEqual)(npv_i$);\nexport const npv_i$m = memoize(npv_i$, JSON.stringify);\nexport const npv_i = (a) => {\n  return npv_i$m(a);\n  // eslint-disable-next-line no-undef\n  npv_i$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end npv_i memo-loader code //////////\n\n\n    "],"mappings":"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"}