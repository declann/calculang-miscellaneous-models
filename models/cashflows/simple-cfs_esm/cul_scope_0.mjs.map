{"version":3,"sources":["simple-cfs.cul.js"],"names":["memoize","mrr_cf_","mrr_cf$","vc_cf_","vc_cf$","rent_cf_","rent_cf$","employees_","employees$","payroll_cf_","payroll_cf$","total_cf_","total_cf$","npv_","npv$","mrr_","mrr$","month_","month$","mrr_growth_","mrr_growth$","vc_1_","vc_1$","vc_2_","vc_2$","rent_","rent$","employees_0_","employees_0$","new_employees_per_month_","new_employees_per_month$","salary_per_employee_","salary_per_employee$","last_month_","last_month$","npv_i_","npv_i$","mrr_cf$m","JSON","stringify","mrr_cf","a","month_in","mrr_in","mrr_growth_in","vc_cf$m","vc_cf","vc_1_in","vc_2_in","rent_cf$m","rent_cf","rent_in","employees$m","employees","employees_0_in","new_employees_per_month_in","payroll_cf$m","payroll_cf","salary_per_employee_in","total_cf$m","total_cf","npv$m","npv","last_month_in","npv_i_in","mrr$m","mrr","month$m","month","mrr_growth$m","mrr_growth","vc_1$m","vc_1","vc_2$m","vc_2","rent$m","rent","employees_0$m","employees_0","new_employees_per_month$m","new_employees_per_month","salary_per_employee$m","salary_per_employee","last_month$m","last_month","npv_i$m","npv_i"],"mappings":"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","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { mrr_cf_ as mrr_cf$, vc_cf_ as vc_cf$, rent_cf_ as rent_cf$, employees_ as employees$, payroll_cf_ as payroll_cf$, total_cf_ as total_cf$, npv_ as npv$, mrr_ as mrr$, month_ as month$, mrr_growth_ as mrr_growth$, vc_1_ as vc_1$, vc_2_ as vc_2$, rent_ as rent$, employees_0_ as employees_0$, new_employees_per_month_ as new_employees_per_month$, salary_per_employee_ as salary_per_employee$, last_month_ as last_month$, npv_i_ as npv_i$ } from \"./simple-cfs.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start mrr_cf memo-loader code //////////\n//const mrr_cf$m = memoize(999999, isEqual)(mrr_cf$);\nexport const mrr_cf$m = memoize(mrr_cf$, JSON.stringify);\nexport const mrr_cf = (a) => {\n  return mrr_cf$m(a);\n  // eslint-disable-next-line no-undef\n  mrr_cf$({ month_in, mrr_in, mrr_growth_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr_cf memo-loader code //////////\n\n\n\n////////// start vc_cf memo-loader code //////////\n//const vc_cf$m = memoize(999999, isEqual)(vc_cf$);\nexport const vc_cf$m = memoize(vc_cf$, JSON.stringify);\nexport const vc_cf = (a) => {\n  return vc_cf$m(a);\n  // eslint-disable-next-line no-undef\n  vc_cf$({ month_in, vc_1_in, vc_2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_cf memo-loader code //////////\n\n\n\n////////// start rent_cf memo-loader code //////////\n//const rent_cf$m = memoize(999999, isEqual)(rent_cf$);\nexport const rent_cf$m = memoize(rent_cf$, JSON.stringify);\nexport const rent_cf = (a) => {\n  return rent_cf$m(a);\n  // eslint-disable-next-line no-undef\n  rent_cf$({ month_in, rent_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end rent_cf memo-loader code //////////\n\n\n\n////////// start employees memo-loader code //////////\n//const employees$m = memoize(999999, isEqual)(employees$);\nexport const employees$m = memoize(employees$, JSON.stringify);\nexport const employees = (a) => {\n  return employees$m(a);\n  // eslint-disable-next-line no-undef\n  employees$({ month_in, employees_0_in, new_employees_per_month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end employees memo-loader code //////////\n\n\n\n////////// start payroll_cf memo-loader code //////////\n//const payroll_cf$m = memoize(999999, isEqual)(payroll_cf$);\nexport const payroll_cf$m = memoize(payroll_cf$, JSON.stringify);\nexport const payroll_cf = (a) => {\n  return payroll_cf$m(a);\n  // eslint-disable-next-line no-undef\n  payroll_cf$({ salary_per_employee_in, month_in, employees_0_in, new_employees_per_month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end payroll_cf memo-loader code //////////\n\n\n\n////////// start total_cf memo-loader code //////////\n//const total_cf$m = memoize(999999, isEqual)(total_cf$);\nexport const total_cf$m = memoize(total_cf$, JSON.stringify);\nexport const total_cf = (a) => {\n  return total_cf$m(a);\n  // eslint-disable-next-line no-undef\n  total_cf$({ month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end total_cf memo-loader code //////////\n\n\n\n////////// start npv memo-loader code //////////\n//const npv$m = memoize(999999, isEqual)(npv$);\nexport const npv$m = memoize(npv$, JSON.stringify);\nexport const npv = (a) => {\n  return npv$m(a);\n  // eslint-disable-next-line no-undef\n  npv$({ month_in, last_month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, npv_i_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end npv memo-loader code //////////\n\n\n\n////////// start mrr memo-loader code //////////\n//const mrr$m = memoize(999999, isEqual)(mrr$);\nexport const mrr$m = memoize(mrr$, JSON.stringify);\nexport const mrr = (a) => {\n  return mrr$m(a);\n  // eslint-disable-next-line no-undef\n  mrr$({ mrr_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr memo-loader code //////////\n\n\n\n////////// start month memo-loader code //////////\n//const month$m = memoize(999999, isEqual)(month$);\nexport const month$m = memoize(month$, JSON.stringify);\nexport const month = (a) => {\n  return month$m(a);\n  // eslint-disable-next-line no-undef\n  month$({ month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end month memo-loader code //////////\n\n\n\n////////// start mrr_growth memo-loader code //////////\n//const mrr_growth$m = memoize(999999, isEqual)(mrr_growth$);\nexport const mrr_growth$m = memoize(mrr_growth$, JSON.stringify);\nexport const mrr_growth = (a) => {\n  return mrr_growth$m(a);\n  // eslint-disable-next-line no-undef\n  mrr_growth$({ mrr_growth_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end mrr_growth memo-loader code //////////\n\n\n\n////////// start vc_1 memo-loader code //////////\n//const vc_1$m = memoize(999999, isEqual)(vc_1$);\nexport const vc_1$m = memoize(vc_1$, JSON.stringify);\nexport const vc_1 = (a) => {\n  return vc_1$m(a);\n  // eslint-disable-next-line no-undef\n  vc_1$({ vc_1_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_1 memo-loader code //////////\n\n\n\n////////// start vc_2 memo-loader code //////////\n//const vc_2$m = memoize(999999, isEqual)(vc_2$);\nexport const vc_2$m = memoize(vc_2$, JSON.stringify);\nexport const vc_2 = (a) => {\n  return vc_2$m(a);\n  // eslint-disable-next-line no-undef\n  vc_2$({ vc_2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end vc_2 memo-loader code //////////\n\n\n\n////////// start rent memo-loader code //////////\n//const rent$m = memoize(999999, isEqual)(rent$);\nexport const rent$m = memoize(rent$, JSON.stringify);\nexport const rent = (a) => {\n  return rent$m(a);\n  // eslint-disable-next-line no-undef\n  rent$({ rent_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end rent memo-loader code //////////\n\n\n\n////////// start employees_0 memo-loader code //////////\n//const employees_0$m = memoize(999999, isEqual)(employees_0$);\nexport const employees_0$m = memoize(employees_0$, JSON.stringify);\nexport const employees_0 = (a) => {\n  return employees_0$m(a);\n  // eslint-disable-next-line no-undef\n  employees_0$({ employees_0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end employees_0 memo-loader code //////////\n\n\n\n////////// start new_employees_per_month memo-loader code //////////\n//const new_employees_per_month$m = memoize(999999, isEqual)(new_employees_per_month$);\nexport const new_employees_per_month$m = memoize(new_employees_per_month$, JSON.stringify);\nexport const new_employees_per_month = (a) => {\n  return new_employees_per_month$m(a);\n  // eslint-disable-next-line no-undef\n  new_employees_per_month$({ new_employees_per_month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end new_employees_per_month memo-loader code //////////\n\n\n\n////////// start salary_per_employee memo-loader code //////////\n//const salary_per_employee$m = memoize(999999, isEqual)(salary_per_employee$);\nexport const salary_per_employee$m = memoize(salary_per_employee$, JSON.stringify);\nexport const salary_per_employee = (a) => {\n  return salary_per_employee$m(a);\n  // eslint-disable-next-line no-undef\n  salary_per_employee$({ salary_per_employee_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end salary_per_employee memo-loader code //////////\n\n\n\n////////// start last_month memo-loader code //////////\n//const last_month$m = memoize(999999, isEqual)(last_month$);\nexport const last_month$m = memoize(last_month$, JSON.stringify);\nexport const last_month = (a) => {\n  return last_month$m(a);\n  // eslint-disable-next-line no-undef\n  last_month$({ last_month_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end last_month memo-loader code //////////\n\n\n\n////////// start npv_i memo-loader code //////////\n//const npv_i$m = memoize(999999, isEqual)(npv_i$);\nexport const npv_i$m = memoize(npv_i$, JSON.stringify);\nexport const npv_i = (a) => {\n  return npv_i$m(a);\n  // eslint-disable-next-line no-undef\n  npv_i$({ npv_i_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end npv_i memo-loader code //////////"]}