{"version":3,"sources":["simple-cfs-nomemo.cul.js"],"names":["mrr_cf","month_in","mrr_in","mrr_growth_in","month","mrr","Math","exp","mrr_growth","vc_cf","vc_1_in","vc_2_in","vc_1","vc_2","rent_cf","rent_in","rent","employees","employees_0_in","new_employees_per_month_in","employees_0","new_employees_per_month","payroll_cf","salary_per_employee_in","salary_per_employee","total_cf","npv","last_month_in","npv_i_in","last_month","npv_i"],"mappings":"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","sourcesContent":["export const mrr_cf = ({ month_in, mrr_in, mrr_growth_in }) => {\n  if (month({ month_in }) == -1) return 0;else\n  return mrr({ mrr_in }) * Math.exp(month({ month_in }) * mrr_growth({ mrr_growth_in }));\n};\n\nexport const vc_cf = ({ month_in, vc_1_in, vc_2_in }) => {\n  if (month({ month_in }) == 3) return vc_1({ vc_1_in });\n  if (month({ month_in }) == 11) return vc_2({ vc_2_in });else\n  return 0;\n};\n\nexport const rent_cf = ({ month_in, rent_in }) => {\n  if (month({ month_in }) == -1) return 0; // => rent_cf now dept on month\n  else return -rent({ rent_in });\n};\n\nexport const employees = ({ month_in, employees_0_in, new_employees_per_month_in }) => {\n  if (month({ month_in }) == -1) return 0;\n  if (month({ month_in }) == 0) return employees_0({ employees_0_in });else\n  return employees({ employees_0_in, new_employees_per_month_in, month_in: month({ month_in }) - 1 }) + new_employees_per_month({ new_employees_per_month_in });\n};\n\nexport const payroll_cf = ({ salary_per_employee_in, month_in, employees_0_in, new_employees_per_month_in }) => -salary_per_employee({ salary_per_employee_in }) * employees({ month_in, employees_0_in, new_employees_per_month_in });\n\nexport const total_cf = ({ month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in }) => mrr_cf({ month_in, mrr_in, mrr_growth_in }) + rent_cf({ month_in, rent_in }) + vc_cf({ month_in, vc_1_in, vc_2_in }) + payroll_cf({ salary_per_employee_in, month_in, employees_0_in, new_employees_per_month_in });\n\nexport const npv = ({ month_in, last_month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, npv_i_in }) => {\n  if (month({ month_in }) >= last_month({ last_month_in })) return 0;\n  return (\n    (npv({ last_month_in, mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, npv_i_in, month_in: month({ month_in }) + 1 }) + total_cf({ mrr_in, mrr_growth_in, rent_in, vc_1_in, vc_2_in, salary_per_employee_in, employees_0_in, new_employees_per_month_in, month_in: month({ month_in }) + 1 })) / (\n    1 + npv_i({ npv_i_in })));\n\n};\n\n// inputs\nexport const mrr = ({ mrr_in }) => mrr_in;\nexport const month = ({ month_in }) => month_in;\nexport const mrr_growth = ({ mrr_growth_in }) => mrr_growth_in;\nexport const vc_1 = ({ vc_1_in }) => vc_1_in;\nexport const vc_2 = ({ vc_2_in }) => vc_2_in;\nexport const rent = ({ rent_in }) => rent_in;\nexport const employees_0 = ({ employees_0_in }) => employees_0_in;\nexport const new_employees_per_month = ({ new_employees_per_month_in }) => new_employees_per_month_in;\nexport const salary_per_employee = ({ salary_per_employee_in }) => salary_per_employee_in;\nexport const last_month = ({ last_month_in }) => last_month_in;\nexport const npv_i = ({ npv_i_in }) => npv_i_in;"]}