{"version":3,"sources":["suncalc-seek-sunsets.cul.js"],"names":["memoize","sunset_date_","sunset_date$","sunset_projection_times_for_sunset_date_","sunset_projection_times_for_sunset_date$","sunset_projection_for_sunset_date_","sunset_projection_for_sunset_date$","sunset_time_for_sunset_date_","sunset_time_for_sunset_date$","date_","date$","lat_","lat$","lng_","lng$","dayMs_","dayMs$","J1970_","J1970$","J2000_","J2000$","rad_","rad$","e_","e$","lw_","lw$","phi_","phi$","julian_1_","julian_1$","l_","l$","b_","b$","right_ascension_","right_ascension$","declination_","declination$","dec_","dec$","azimuth_","azimuth$","altitude_","altitude$","sidereal_time_","sidereal_time$","obj_","obj$","solar_mean_anomaly_","solar_mean_anomaly$","equation_of_center_","equation_of_center$","perihelion_of_earth_","perihelion_of_earth$","ecliptic_longitude_","ecliptic_longitude$","declination_L0_","declination_L0$","right_ascension_L0_","right_ascension_L0$","H_","H$","azimuth_obj_","azimuth_obj$","altitude_obj_","altitude_obj$","sunset_date$m","JSON","stringify","sunset_date","a","sunset_date_in","sunset_projection_times_for_sunset_date$m","sunset_projection_times_for_sunset_date","lat_in","lng_in","l_in","b_in","sunset_projection_for_sunset_date$m","sunset_projection_for_sunset_date","sunset_time_for_sunset_date$m","sunset_time_for_sunset_date","date$m","date","date_in","lat$m","lat","lng$m","lng","dayMs$m","dayMs","J1970$m","J1970","J2000$m","J2000","rad$m","rad","e$m","e","lw$m","lw","phi$m","phi","julian_1$m","julian_1","l$m","l","b$m","b","right_ascension$m","right_ascension","declination$m","declination","dec$m","dec","dec_in","azimuth$m","azimuth","obj_in","altitude$m","altitude","sidereal_time$m","sidereal_time","obj$m","obj","solar_mean_anomaly$m","solar_mean_anomaly","equation_of_center$m","equation_of_center","perihelion_of_earth$m","perihelion_of_earth","ecliptic_longitude$m","ecliptic_longitude","declination_L0$m","declination_L0","right_ascension_L0$m","right_ascension_L0","H$m","H","azimuth_obj$m","azimuth_obj","altitude_obj$m","altitude_obj"],"mappings":";AACA,SAASA,OAAT,QAAwB,YAAxB;AACA;AACA;;AAEA,SAASC,YAAY,IAAIC,YAAzB,EAAuCC,wCAAwC,IAAIC,wCAAnF,EAA6HC,kCAAkC,IAAIC,kCAAnK,EAAuMC,4BAA4B,IAAIC,4BAAvO,EAAqQC,KAAK,IAAIC,KAA9Q,EAAqRC,IAAI,IAAIC,IAA7R,EAAmSC,IAAI,IAAIC,IAA3S,EAAiTC,MAAM,IAAIC,MAA3T,EAAmUC,MAAM,IAAIC,MAA7U,EAAqVC,MAAM,IAAIC,MAA/V,EAAuWC,IAAI,IAAIC,IAA/W,EAAqXC,EAAE,IAAIC,EAA3X,EAA+XC,GAAG,IAAIC,GAAtY,EAA2YC,IAAI,IAAIC,IAAnZ,EAAyZC,SAAS,IAAIC,SAAta,EAAibC,EAAE,IAAIC,EAAvb,EAA2bC,EAAE,IAAIC,EAAjc,EAAqcC,gBAAgB,IAAIC,gBAAzd,EAA2eC,YAAY,IAAIC,YAA3f,EAAygBC,IAAI,IAAIC,IAAjhB,EAAuhBC,QAAQ,IAAIC,QAAniB,EAA6iBC,SAAS,IAAIC,SAA1jB,EAAqkBC,cAAc,IAAIC,cAAvlB,EAAumBC,IAAI,IAAIC,IAA/mB,EAAqnBC,mBAAmB,IAAIC,mBAA5oB,EAAiqBC,mBAAmB,IAAIC,mBAAxrB,EAA6sBC,oBAAoB,IAAIC,oBAAruB,EAA2vBC,mBAAmB,IAAIC,mBAAlxB,EAAuyBC,eAAe,IAAIC,eAA1zB,EAA20BC,mBAAmB,IAAIC,mBAAl2B,EAAu3BC,EAAE,IAAIC,EAA73B,EAAi4BC,YAAY,IAAIC,YAAj5B,EAA+5BC,aAAa,IAAIC,aAAh7B,QAAq8B,mBAAr8B,C,CAAmhC;;;;AAInhC;AACA;AACA,OAAO,MAAMC,aAAa,GAAGnE,OAAO,CAACE,YAAD,EAAekE,IAAI,CAACC,SAApB,CAA7B;AACP,OAAO,MAAMC,WAAW,GAAG,CAACC,CAAD,KAAO;AAChC,SAAOJ,aAAa,CAACI,CAAD,CAApB;AACA;AACArE,EAAAA,YAAY,CAAC,EAAEsE,cAAF,EAAD,CAAZ,CAHgC,CAGE;AACnC,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMC,yCAAyC,GAAGzE,OAAO,CAACI,wCAAD,EAA2CgE,IAAI,CAACC,SAAhD,CAAzD;AACP,OAAO,MAAMK,uCAAuC,GAAG,CAACH,CAAD,KAAO;AAC5D,SAAOE,yCAAyC,CAACF,CAAD,CAAhD;AACA;AACAnE,EAAAA,wCAAwC,CAAC,EAAEuE,MAAF,EAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BN,cAA9B,EAAD,CAAxC,CAH4D,CAG8B;AAC3F,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMO,mCAAmC,GAAG/E,OAAO,CAACM,kCAAD,EAAqC8D,IAAI,CAACC,SAA1C,CAAnD;AACP,OAAO,MAAMW,iCAAiC,GAAG,CAACT,CAAD,KAAO;AACtD,SAAOQ,mCAAmC,CAACR,CAAD,CAA1C;AACA;AACAjE,EAAAA,kCAAkC,CAAC,EAAEqE,MAAF,EAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BN,cAA9B,EAAD,CAAlC,CAHsD,CAG8B;AACrF,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMS,6BAA6B,GAAGjF,OAAO,CAACQ,4BAAD,EAA+B4D,IAAI,CAACC,SAApC,CAA7C;AACP,OAAO,MAAMa,2BAA2B,GAAG,CAACX,CAAD,KAAO;AAChD,SAAOU,6BAA6B,CAACV,CAAD,CAApC;AACA;AACA/D,EAAAA,4BAA4B,CAAC,EAAEmE,MAAF,EAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BN,cAA9B,EAAD,CAA5B,CAHgD,CAG8B;AAC/E,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMW,MAAM,GAAGnF,OAAO,CAACU,KAAD,EAAQ0D,IAAI,CAACC,SAAb,CAAtB;AACP,OAAO,MAAMe,IAAI,GAAG,CAACb,CAAD,KAAO;AACzB,SAAOY,MAAM,CAACZ,CAAD,CAAb;AACA;AACA7D,EAAAA,KAAK,CAAC,EAAE2E,OAAF,EAAD,CAAL,CAHyB,CAGL;AACrB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMC,KAAK,GAAGtF,OAAO,CAACY,IAAD,EAAOwD,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAMkB,GAAG,GAAG,CAAChB,CAAD,KAAO;AACxB,SAAOe,KAAK,CAACf,CAAD,CAAZ;AACA;AACA3D,EAAAA,IAAI,CAAC,EAAE+D,MAAF,EAAD,CAAJ,CAHwB,CAGN;AACnB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMa,KAAK,GAAGxF,OAAO,CAACc,IAAD,EAAOsD,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAMoB,GAAG,GAAG,CAAClB,CAAD,KAAO;AACxB,SAAOiB,KAAK,CAACjB,CAAD,CAAZ;AACA;AACAzD,EAAAA,IAAI,CAAC,EAAE8D,MAAF,EAAD,CAAJ,CAHwB,CAGN;AACnB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMc,OAAO,GAAG1F,OAAO,CAACgB,MAAD,EAASoD,IAAI,CAACC,SAAd,CAAvB;AACP,OAAO,MAAMsB,KAAK,GAAG,CAACpB,CAAD,KAAO;AAC1B,SAAOmB,OAAO,CAACnB,CAAD,CAAd;AACA;AACAvD,EAAAA,MAAM,CAAC,EAAD,CAAN,CAH0B,CAGd;AACb,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM4E,OAAO,GAAG5F,OAAO,CAACkB,MAAD,EAASkD,IAAI,CAACC,SAAd,CAAvB;AACP,OAAO,MAAMwB,KAAK,GAAG,CAACtB,CAAD,KAAO;AAC1B,SAAOqB,OAAO,CAACrB,CAAD,CAAd;AACA;AACArD,EAAAA,MAAM,CAAC,EAAD,CAAN,CAH0B,CAGd;AACb,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM4E,OAAO,GAAG9F,OAAO,CAACoB,MAAD,EAASgD,IAAI,CAACC,SAAd,CAAvB;AACP,OAAO,MAAM0B,KAAK,GAAG,CAACxB,CAAD,KAAO;AAC1B,SAAOuB,OAAO,CAACvB,CAAD,CAAd;AACA;AACAnD,EAAAA,MAAM,CAAC,EAAD,CAAN,CAH0B,CAGd;AACb,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM4E,KAAK,GAAGhG,OAAO,CAACsB,IAAD,EAAO8C,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAM4B,GAAG,GAAG,CAAC1B,CAAD,KAAO;AACxB,SAAOyB,KAAK,CAACzB,CAAD,CAAZ;AACA;AACAjD,EAAAA,IAAI,CAAC,EAAD,CAAJ,CAHwB,CAGd;AACX,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM4E,GAAG,GAAGlG,OAAO,CAACwB,EAAD,EAAK4C,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAM8B,CAAC,GAAG,CAAC5B,CAAD,KAAO;AACtB,SAAO2B,GAAG,CAAC3B,CAAD,CAAV;AACA;AACA/C,EAAAA,EAAE,CAAC,EAAD,CAAF,CAHsB,CAGd;AACT,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM4E,IAAI,GAAGpG,OAAO,CAAC0B,GAAD,EAAM0C,IAAI,CAACC,SAAX,CAApB;AACP,OAAO,MAAMgC,EAAE,GAAG,CAAC9B,CAAD,KAAO;AACvB,SAAO6B,IAAI,CAAC7B,CAAD,CAAX;AACA;AACA7C,EAAAA,GAAG,CAAC,EAAEkD,MAAF,EAAD,CAAH,CAHuB,CAGN;AAClB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM0B,KAAK,GAAGtG,OAAO,CAAC4B,IAAD,EAAOwC,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAMkC,GAAG,GAAG,CAAChC,CAAD,KAAO;AACxB,SAAO+B,KAAK,CAAC/B,CAAD,CAAZ;AACA;AACA3C,EAAAA,IAAI,CAAC,EAAE+C,MAAF,EAAD,CAAJ,CAHwB,CAGN;AACnB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM6B,UAAU,GAAGxG,OAAO,CAAC8B,SAAD,EAAYsC,IAAI,CAACC,SAAjB,CAA1B;AACP,OAAO,MAAMoC,QAAQ,GAAG,CAAClC,CAAD,KAAO;AAC7B,SAAOiC,UAAU,CAACjC,CAAD,CAAjB;AACA;AACAzC,EAAAA,SAAS,CAAC,EAAEuD,OAAF,EAAD,CAAT,CAH6B,CAGL;AACzB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMqB,GAAG,GAAG1G,OAAO,CAACgC,EAAD,EAAKoC,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAMsC,CAAC,GAAG,CAACpC,CAAD,KAAO;AACtB,SAAOmC,GAAG,CAACnC,CAAD,CAAV;AACA;AACAvC,EAAAA,EAAE,CAAC,EAAE6C,IAAF,EAAD,CAAF,CAHsB,CAGR;AACf,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM+B,GAAG,GAAG5G,OAAO,CAACkC,EAAD,EAAKkC,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAMwC,CAAC,GAAG,CAACtC,CAAD,KAAO;AACtB,SAAOqC,GAAG,CAACrC,CAAD,CAAV;AACA;AACArC,EAAAA,EAAE,CAAC,EAAE4C,IAAF,EAAD,CAAF,CAHsB,CAGR;AACf,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMgC,iBAAiB,GAAG9G,OAAO,CAACoC,gBAAD,EAAmBgC,IAAI,CAACC,SAAxB,CAAjC;AACP,OAAO,MAAM0C,eAAe,GAAG,CAACxC,CAAD,KAAO;AACpC,SAAOuC,iBAAiB,CAACvC,CAAD,CAAxB;AACA;AACAnC,EAAAA,gBAAgB,CAAC,EAAEyC,IAAF,EAAQC,IAAR,EAAD,CAAhB,CAHoC,CAGF;AACnC,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMkC,aAAa,GAAGhH,OAAO,CAACsC,YAAD,EAAe8B,IAAI,CAACC,SAApB,CAA7B;AACP,OAAO,MAAM4C,WAAW,GAAG,CAAC1C,CAAD,KAAO;AAChC,SAAOyC,aAAa,CAACzC,CAAD,CAApB;AACA;AACAjC,EAAAA,YAAY,CAAC,EAAEwC,IAAF,EAAQD,IAAR,EAAD,CAAZ,CAHgC,CAGF;AAC/B,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMqC,KAAK,GAAGlH,OAAO,CAACwC,IAAD,EAAO4B,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAM8C,GAAG,GAAG,CAAC5C,CAAD,KAAO;AACxB,SAAO2C,KAAK,CAAC3C,CAAD,CAAZ;AACA;AACA/B,EAAAA,IAAI,CAAC,EAAE4E,MAAF,EAAD,CAAJ,CAHwB,CAGN;AACnB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGrH,OAAO,CAAC0C,QAAD,EAAW0B,IAAI,CAACC,SAAhB,CAAzB;AACP,OAAO,MAAMiD,OAAO,GAAG,CAAC/C,CAAD,KAAO;AAC5B,SAAO8C,SAAS,CAAC9C,CAAD,CAAhB;AACA;AACA7B,EAAAA,QAAQ,CAAC,EAAE2C,OAAF,EAAWT,MAAX,EAAmB2C,MAAnB,EAA2B5C,MAA3B,EAAmCyC,MAAnC,EAAD,CAAR,CAH4B,CAG2B;AACxD,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMI,UAAU,GAAGxH,OAAO,CAAC4C,SAAD,EAAYwB,IAAI,CAACC,SAAjB,CAA1B;AACP,OAAO,MAAMoD,QAAQ,GAAG,CAAClD,CAAD,KAAO;AAC7B,SAAOiD,UAAU,CAACjD,CAAD,CAAjB;AACA;AACA3B,EAAAA,SAAS,CAAC,EAAE+B,MAAF,EAAUyC,MAAV,EAAkB/B,OAAlB,EAA2BT,MAA3B,EAAmC2C,MAAnC,EAAD,CAAT,CAH6B,CAG2B;AACzD,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMG,eAAe,GAAG1H,OAAO,CAAC8C,cAAD,EAAiBsB,IAAI,CAACC,SAAtB,CAA/B;AACP,OAAO,MAAMsD,aAAa,GAAG,CAACpD,CAAD,KAAO;AAClC,SAAOmD,eAAe,CAACnD,CAAD,CAAtB;AACA;AACAzB,EAAAA,cAAc,CAAC,EAAEuC,OAAF,EAAWT,MAAX,EAAD,CAAd,CAHkC,CAGG;AACtC,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMgD,KAAK,GAAG5H,OAAO,CAACgD,IAAD,EAAOoB,IAAI,CAACC,SAAZ,CAArB;AACP,OAAO,MAAMwD,GAAG,GAAG,CAACtD,CAAD,KAAO;AACxB,SAAOqD,KAAK,CAACrD,CAAD,CAAZ;AACA;AACAvB,EAAAA,IAAI,CAAC,EAAEuE,MAAF,EAAD,CAAJ,CAHwB,CAGN;AACnB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMO,oBAAoB,GAAG9H,OAAO,CAACkD,mBAAD,EAAsBkB,IAAI,CAACC,SAA3B,CAApC;AACP,OAAO,MAAM0D,kBAAkB,GAAG,CAACxD,CAAD,KAAO;AACvC,SAAOuD,oBAAoB,CAACvD,CAAD,CAA3B;AACA;AACArB,EAAAA,mBAAmB,CAAC,EAAEqE,MAAF,EAAUlC,OAAV,EAAD,CAAnB,CAHuC,CAGG;AAC3C,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM2C,oBAAoB,GAAGhI,OAAO,CAACoD,mBAAD,EAAsBgB,IAAI,CAACC,SAA3B,CAApC;AACP,OAAO,MAAM4D,kBAAkB,GAAG,CAAC1D,CAAD,KAAO;AACvC,SAAOyD,oBAAoB,CAACzD,CAAD,CAA3B;AACA;AACAnB,EAAAA,mBAAmB,CAAC,EAAEmE,MAAF,EAAUlC,OAAV,EAAD,CAAnB,CAHuC,CAGG;AAC3C,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM6C,qBAAqB,GAAGlI,OAAO,CAACsD,oBAAD,EAAuBc,IAAI,CAACC,SAA5B,CAArC;AACP,OAAO,MAAM8D,mBAAmB,GAAG,CAAC5D,CAAD,KAAO;AACxC,SAAO2D,qBAAqB,CAAC3D,CAAD,CAA5B;AACA;AACAjB,EAAAA,oBAAoB,CAAC,EAAD,CAApB,CAHwC,CAGd;AAC3B,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAM8E,oBAAoB,GAAGpI,OAAO,CAACwD,mBAAD,EAAsBY,IAAI,CAACC,SAA3B,CAApC;AACP,OAAO,MAAMgE,kBAAkB,GAAG,CAAC9D,CAAD,KAAO;AACvC,SAAO6D,oBAAoB,CAAC7D,CAAD,CAA3B;AACA;AACAf,EAAAA,mBAAmB,CAAC,EAAE+D,MAAF,EAAUlC,OAAV,EAAD,CAAnB,CAHuC,CAGG;AAC3C,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMiD,gBAAgB,GAAGtI,OAAO,CAAC0D,eAAD,EAAkBU,IAAI,CAACC,SAAvB,CAAhC;AACP,OAAO,MAAMkE,cAAc,GAAG,CAAChE,CAAD,KAAO;AACnC,SAAO+D,gBAAgB,CAAC/D,CAAD,CAAvB;AACA;AACAb,EAAAA,eAAe,CAAC,EAAE6D,MAAF,EAAUlC,OAAV,EAAD,CAAf,CAHmC,CAGG;AACvC,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMmD,oBAAoB,GAAGxI,OAAO,CAAC4D,mBAAD,EAAsBQ,IAAI,CAACC,SAA3B,CAApC;AACP,OAAO,MAAMoE,kBAAkB,GAAG,CAAClE,CAAD,KAAO;AACvC,SAAOiE,oBAAoB,CAACjE,CAAD,CAA3B;AACA;AACAX,EAAAA,mBAAmB,CAAC,EAAE2D,MAAF,EAAUlC,OAAV,EAAD,CAAnB,CAHuC,CAGG;AAC3C,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMqD,GAAG,GAAG1I,OAAO,CAAC8D,EAAD,EAAKM,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAMsE,CAAC,GAAG,CAACpE,CAAD,KAAO;AACtB,SAAOmE,GAAG,CAACnE,CAAD,CAAV;AACA;AACAT,EAAAA,EAAE,CAAC,EAAEuB,OAAF,EAAWT,MAAX,EAAmB2C,MAAnB,EAAD,CAAF,CAHsB,CAGW;AAClC,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMqB,aAAa,GAAG5I,OAAO,CAACgE,YAAD,EAAeI,IAAI,CAACC,SAApB,CAA7B;AACP,OAAO,MAAMwE,WAAW,GAAG,CAACtE,CAAD,KAAO;AAChC,SAAOqE,aAAa,CAACrE,CAAD,CAApB;AACA;AACAP,EAAAA,YAAY,CAAC,EAAEqB,OAAF,EAAWT,MAAX,EAAmB2C,MAAnB,EAA2B5C,MAA3B,EAAD,CAAZ,CAHgC,CAGmB;AACpD,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMmE,cAAc,GAAG9I,OAAO,CAACkE,aAAD,EAAgBE,IAAI,CAACC,SAArB,CAA9B;AACP,OAAO,MAAM0E,YAAY,GAAG,CAACxE,CAAD,KAAO;AACjC,SAAOuE,cAAc,CAACvE,CAAD,CAArB;AACA;AACAL,EAAAA,aAAa,CAAC,EAAES,MAAF,EAAUU,OAAV,EAAmBT,MAAnB,EAA2B2C,MAA3B,EAAD,CAAb,CAHiC,CAGmB;AACrD,CAJM;AAKP","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { sunset_date_ as sunset_date$, sunset_projection_times_for_sunset_date_ as sunset_projection_times_for_sunset_date$, sunset_projection_for_sunset_date_ as sunset_projection_for_sunset_date$, sunset_time_for_sunset_date_ as sunset_time_for_sunset_date$, date_ as date$, lat_ as lat$, lng_ as lng$, dayMs_ as dayMs$, J1970_ as J1970$, J2000_ as J2000$, rad_ as rad$, e_ as e$, lw_ as lw$, phi_ as phi$, julian_1_ as julian_1$, l_ as l$, b_ as b$, right_ascension_ as right_ascension$, declination_ as declination$, dec_ as dec$, azimuth_ as azimuth$, altitude_ as altitude$, sidereal_time_ as sidereal_time$, obj_ as obj$, solar_mean_anomaly_ as solar_mean_anomaly$, equation_of_center_ as equation_of_center$, perihelion_of_earth_ as perihelion_of_earth$, ecliptic_longitude_ as ecliptic_longitude$, declination_L0_ as declination_L0$, right_ascension_L0_ as right_ascension_L0$, H_ as H$, azimuth_obj_ as azimuth_obj$, altitude_obj_ as altitude_obj$ } from \"./suncalc-seek-sunsets.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start sunset_date memo-loader code //////////\n//const sunset_date$m = memoize(999999, isEqual)(sunset_date$);\nexport const sunset_date$m = memoize(sunset_date$, JSON.stringify);\nexport const sunset_date = (a) => {\n  return sunset_date$m(a);\n  // eslint-disable-next-line no-undef\n  sunset_date$({ sunset_date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sunset_date memo-loader code //////////\n\n\n\n////////// start sunset_projection_times_for_sunset_date memo-loader code //////////\n//const sunset_projection_times_for_sunset_date$m = memoize(999999, isEqual)(sunset_projection_times_for_sunset_date$);\nexport const sunset_projection_times_for_sunset_date$m = memoize(sunset_projection_times_for_sunset_date$, JSON.stringify);\nexport const sunset_projection_times_for_sunset_date = (a) => {\n  return sunset_projection_times_for_sunset_date$m(a);\n  // eslint-disable-next-line no-undef\n  sunset_projection_times_for_sunset_date$({ lat_in, lng_in, l_in, b_in, sunset_date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sunset_projection_times_for_sunset_date memo-loader code //////////\n\n\n\n////////// start sunset_projection_for_sunset_date memo-loader code //////////\n//const sunset_projection_for_sunset_date$m = memoize(999999, isEqual)(sunset_projection_for_sunset_date$);\nexport const sunset_projection_for_sunset_date$m = memoize(sunset_projection_for_sunset_date$, JSON.stringify);\nexport const sunset_projection_for_sunset_date = (a) => {\n  return sunset_projection_for_sunset_date$m(a);\n  // eslint-disable-next-line no-undef\n  sunset_projection_for_sunset_date$({ lat_in, lng_in, l_in, b_in, sunset_date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sunset_projection_for_sunset_date memo-loader code //////////\n\n\n\n////////// start sunset_time_for_sunset_date memo-loader code //////////\n//const sunset_time_for_sunset_date$m = memoize(999999, isEqual)(sunset_time_for_sunset_date$);\nexport const sunset_time_for_sunset_date$m = memoize(sunset_time_for_sunset_date$, JSON.stringify);\nexport const sunset_time_for_sunset_date = (a) => {\n  return sunset_time_for_sunset_date$m(a);\n  // eslint-disable-next-line no-undef\n  sunset_time_for_sunset_date$({ lat_in, lng_in, l_in, b_in, sunset_date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sunset_time_for_sunset_date memo-loader code //////////\n\n\n\n////////// start date memo-loader code //////////\n//const date$m = memoize(999999, isEqual)(date$);\nexport const date$m = memoize(date$, JSON.stringify);\nexport const date = (a) => {\n  return date$m(a);\n  // eslint-disable-next-line no-undef\n  date$({ date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end date memo-loader code //////////\n\n\n\n////////// start lat memo-loader code //////////\n//const lat$m = memoize(999999, isEqual)(lat$);\nexport const lat$m = memoize(lat$, JSON.stringify);\nexport const lat = (a) => {\n  return lat$m(a);\n  // eslint-disable-next-line no-undef\n  lat$({ lat_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end lat memo-loader code //////////\n\n\n\n////////// start lng memo-loader code //////////\n//const lng$m = memoize(999999, isEqual)(lng$);\nexport const lng$m = memoize(lng$, JSON.stringify);\nexport const lng = (a) => {\n  return lng$m(a);\n  // eslint-disable-next-line no-undef\n  lng$({ lng_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end lng memo-loader code //////////\n\n\n\n////////// start dayMs memo-loader code //////////\n//const dayMs$m = memoize(999999, isEqual)(dayMs$);\nexport const dayMs$m = memoize(dayMs$, JSON.stringify);\nexport const dayMs = (a) => {\n  return dayMs$m(a);\n  // eslint-disable-next-line no-undef\n  dayMs$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end dayMs memo-loader code //////////\n\n\n\n////////// start J1970 memo-loader code //////////\n//const J1970$m = memoize(999999, isEqual)(J1970$);\nexport const J1970$m = memoize(J1970$, JSON.stringify);\nexport const J1970 = (a) => {\n  return J1970$m(a);\n  // eslint-disable-next-line no-undef\n  J1970$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end J1970 memo-loader code //////////\n\n\n\n////////// start J2000 memo-loader code //////////\n//const J2000$m = memoize(999999, isEqual)(J2000$);\nexport const J2000$m = memoize(J2000$, JSON.stringify);\nexport const J2000 = (a) => {\n  return J2000$m(a);\n  // eslint-disable-next-line no-undef\n  J2000$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end J2000 memo-loader code //////////\n\n\n\n////////// start rad memo-loader code //////////\n//const rad$m = memoize(999999, isEqual)(rad$);\nexport const rad$m = memoize(rad$, JSON.stringify);\nexport const rad = (a) => {\n  return rad$m(a);\n  // eslint-disable-next-line no-undef\n  rad$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end rad memo-loader code //////////\n\n\n\n////////// start e memo-loader code //////////\n//const e$m = memoize(999999, isEqual)(e$);\nexport const e$m = memoize(e$, JSON.stringify);\nexport const e = (a) => {\n  return e$m(a);\n  // eslint-disable-next-line no-undef\n  e$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end e memo-loader code //////////\n\n\n\n////////// start lw memo-loader code //////////\n//const lw$m = memoize(999999, isEqual)(lw$);\nexport const lw$m = memoize(lw$, JSON.stringify);\nexport const lw = (a) => {\n  return lw$m(a);\n  // eslint-disable-next-line no-undef\n  lw$({ lng_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end lw memo-loader code //////////\n\n\n\n////////// start phi memo-loader code //////////\n//const phi$m = memoize(999999, isEqual)(phi$);\nexport const phi$m = memoize(phi$, JSON.stringify);\nexport const phi = (a) => {\n  return phi$m(a);\n  // eslint-disable-next-line no-undef\n  phi$({ lat_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end phi memo-loader code //////////\n\n\n\n////////// start julian_1 memo-loader code //////////\n//const julian_1$m = memoize(999999, isEqual)(julian_1$);\nexport const julian_1$m = memoize(julian_1$, JSON.stringify);\nexport const julian_1 = (a) => {\n  return julian_1$m(a);\n  // eslint-disable-next-line no-undef\n  julian_1$({ date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end julian_1 memo-loader code //////////\n\n\n\n////////// start l memo-loader code //////////\n//const l$m = memoize(999999, isEqual)(l$);\nexport const l$m = memoize(l$, JSON.stringify);\nexport const l = (a) => {\n  return l$m(a);\n  // eslint-disable-next-line no-undef\n  l$({ l_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end l memo-loader code //////////\n\n\n\n////////// start b memo-loader code //////////\n//const b$m = memoize(999999, isEqual)(b$);\nexport const b$m = memoize(b$, JSON.stringify);\nexport const b = (a) => {\n  return b$m(a);\n  // eslint-disable-next-line no-undef\n  b$({ b_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end b memo-loader code //////////\n\n\n\n////////// start right_ascension memo-loader code //////////\n//const right_ascension$m = memoize(999999, isEqual)(right_ascension$);\nexport const right_ascension$m = memoize(right_ascension$, JSON.stringify);\nexport const right_ascension = (a) => {\n  return right_ascension$m(a);\n  // eslint-disable-next-line no-undef\n  right_ascension$({ l_in, b_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end right_ascension memo-loader code //////////\n\n\n\n////////// start declination memo-loader code //////////\n//const declination$m = memoize(999999, isEqual)(declination$);\nexport const declination$m = memoize(declination$, JSON.stringify);\nexport const declination = (a) => {\n  return declination$m(a);\n  // eslint-disable-next-line no-undef\n  declination$({ b_in, l_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end declination memo-loader code //////////\n\n\n\n////////// start dec memo-loader code //////////\n//const dec$m = memoize(999999, isEqual)(dec$);\nexport const dec$m = memoize(dec$, JSON.stringify);\nexport const dec = (a) => {\n  return dec$m(a);\n  // eslint-disable-next-line no-undef\n  dec$({ dec_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end dec memo-loader code //////////\n\n\n\n////////// start azimuth memo-loader code //////////\n//const azimuth$m = memoize(999999, isEqual)(azimuth$);\nexport const azimuth$m = memoize(azimuth$, JSON.stringify);\nexport const azimuth = (a) => {\n  return azimuth$m(a);\n  // eslint-disable-next-line no-undef\n  azimuth$({ date_in, lng_in, obj_in, lat_in, dec_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end azimuth memo-loader code //////////\n\n\n\n////////// start altitude memo-loader code //////////\n//const altitude$m = memoize(999999, isEqual)(altitude$);\nexport const altitude$m = memoize(altitude$, JSON.stringify);\nexport const altitude = (a) => {\n  return altitude$m(a);\n  // eslint-disable-next-line no-undef\n  altitude$({ lat_in, dec_in, date_in, lng_in, obj_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end altitude memo-loader code //////////\n\n\n\n////////// start sidereal_time memo-loader code //////////\n//const sidereal_time$m = memoize(999999, isEqual)(sidereal_time$);\nexport const sidereal_time$m = memoize(sidereal_time$, JSON.stringify);\nexport const sidereal_time = (a) => {\n  return sidereal_time$m(a);\n  // eslint-disable-next-line no-undef\n  sidereal_time$({ date_in, lng_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sidereal_time memo-loader code //////////\n\n\n\n////////// start obj memo-loader code //////////\n//const obj$m = memoize(999999, isEqual)(obj$);\nexport const obj$m = memoize(obj$, JSON.stringify);\nexport const obj = (a) => {\n  return obj$m(a);\n  // eslint-disable-next-line no-undef\n  obj$({ obj_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end obj memo-loader code //////////\n\n\n\n////////// start solar_mean_anomaly memo-loader code //////////\n//const solar_mean_anomaly$m = memoize(999999, isEqual)(solar_mean_anomaly$);\nexport const solar_mean_anomaly$m = memoize(solar_mean_anomaly$, JSON.stringify);\nexport const solar_mean_anomaly = (a) => {\n  return solar_mean_anomaly$m(a);\n  // eslint-disable-next-line no-undef\n  solar_mean_anomaly$({ obj_in, date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end solar_mean_anomaly memo-loader code //////////\n\n\n\n////////// start equation_of_center memo-loader code //////////\n//const equation_of_center$m = memoize(999999, isEqual)(equation_of_center$);\nexport const equation_of_center$m = memoize(equation_of_center$, JSON.stringify);\nexport const equation_of_center = (a) => {\n  return equation_of_center$m(a);\n  // eslint-disable-next-line no-undef\n  equation_of_center$({ obj_in, date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end equation_of_center memo-loader code //////////\n\n\n\n////////// start perihelion_of_earth memo-loader code //////////\n//const perihelion_of_earth$m = memoize(999999, isEqual)(perihelion_of_earth$);\nexport const perihelion_of_earth$m = memoize(perihelion_of_earth$, JSON.stringify);\nexport const perihelion_of_earth = (a) => {\n  return perihelion_of_earth$m(a);\n  // eslint-disable-next-line no-undef\n  perihelion_of_earth$({}); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end perihelion_of_earth memo-loader code //////////\n\n\n\n////////// start ecliptic_longitude memo-loader code //////////\n//const ecliptic_longitude$m = memoize(999999, isEqual)(ecliptic_longitude$);\nexport const ecliptic_longitude$m = memoize(ecliptic_longitude$, JSON.stringify);\nexport const ecliptic_longitude = (a) => {\n  return ecliptic_longitude$m(a);\n  // eslint-disable-next-line no-undef\n  ecliptic_longitude$({ obj_in, date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end ecliptic_longitude memo-loader code //////////\n\n\n\n////////// start declination_L0 memo-loader code //////////\n//const declination_L0$m = memoize(999999, isEqual)(declination_L0$);\nexport const declination_L0$m = memoize(declination_L0$, JSON.stringify);\nexport const declination_L0 = (a) => {\n  return declination_L0$m(a);\n  // eslint-disable-next-line no-undef\n  declination_L0$({ obj_in, date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end declination_L0 memo-loader code //////////\n\n\n\n////////// start right_ascension_L0 memo-loader code //////////\n//const right_ascension_L0$m = memoize(999999, isEqual)(right_ascension_L0$);\nexport const right_ascension_L0$m = memoize(right_ascension_L0$, JSON.stringify);\nexport const right_ascension_L0 = (a) => {\n  return right_ascension_L0$m(a);\n  // eslint-disable-next-line no-undef\n  right_ascension_L0$({ obj_in, date_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end right_ascension_L0 memo-loader code //////////\n\n\n\n////////// start H memo-loader code //////////\n//const H$m = memoize(999999, isEqual)(H$);\nexport const H$m = memoize(H$, JSON.stringify);\nexport const H = (a) => {\n  return H$m(a);\n  // eslint-disable-next-line no-undef\n  H$({ date_in, lng_in, obj_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end H memo-loader code //////////\n\n\n\n////////// start azimuth_obj memo-loader code //////////\n//const azimuth_obj$m = memoize(999999, isEqual)(azimuth_obj$);\nexport const azimuth_obj$m = memoize(azimuth_obj$, JSON.stringify);\nexport const azimuth_obj = (a) => {\n  return azimuth_obj$m(a);\n  // eslint-disable-next-line no-undef\n  azimuth_obj$({ date_in, lng_in, obj_in, lat_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end azimuth_obj memo-loader code //////////\n\n\n\n////////// start altitude_obj memo-loader code //////////\n//const altitude_obj$m = memoize(999999, isEqual)(altitude_obj$);\nexport const altitude_obj$m = memoize(altitude_obj$, JSON.stringify);\nexport const altitude_obj = (a) => {\n  return altitude_obj$m(a);\n  // eslint-disable-next-line no-undef\n  altitude_obj$({ lat_in, date_in, lng_in, obj_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end altitude_obj memo-loader code //////////"]}