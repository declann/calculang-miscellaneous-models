{"version":3,"sources":["suncalc-seek-sunsets.cul.js"],"names":["altitude_obj","azimuth_obj","H","right_ascension_L0","declination_L0","ecliptic_longitude","perihelion_of_earth","equation_of_center","solar_mean_anomaly","obj","sidereal_time","altitude","azimuth","dec","declination","right_ascension","b","l","julian_1","phi","lw","e","rad","J2000","J1970","dayMs","lng","lat","date","sunset_time_for_sunset_date","sunset_projection_for_sunset_date","sunset_projection_times_for_sunset_date","sunset_date","addMinutes","isSameDay","addDays","_","sunset_date_","sunset_date_in","sunset_projection_times_for_sunset_date_","lat_in","lng_in","l_in","b_in","Date","range","map","i","sunset_projection_for_sunset_date_","date_in","obj_in","sunset_time_for_sunset_date_","find","d","date_","lat_","lng_","dayMs_","J1970_","J2000_","rad_","Math","PI","sin","cos","tan","asin","atan","atan2","acos","e_","lw_","phi_","julian_1_","valueOf","l_","b_","right_ascension_","declination_","dec_","dec_in","azimuth_","altitude_","sidereal_time_","obj_","solar_mean_anomaly_","console","error","equation_of_center_","perihelion_of_earth_","ecliptic_longitude_","declination_L0_","right_ascension_L0_","H_","azimuth_obj_","altitude_obj_"],"mappings":"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","sourcesContent":["import { altitude_obj } from \"./suncalc-seek-sunsets.cul.js\";import { azimuth_obj } from \"./suncalc-seek-sunsets.cul.js\";import { H } from \"./suncalc-seek-sunsets.cul.js\";import { right_ascension_L0 } from \"./suncalc-seek-sunsets.cul.js\";import { declination_L0 } from \"./suncalc-seek-sunsets.cul.js\";import { ecliptic_longitude } from \"./suncalc-seek-sunsets.cul.js\";import { perihelion_of_earth } from \"./suncalc-seek-sunsets.cul.js\";import { equation_of_center } from \"./suncalc-seek-sunsets.cul.js\";import { solar_mean_anomaly } from \"./suncalc-seek-sunsets.cul.js\";import { obj } from \"./suncalc-seek-sunsets.cul.js\";import { sidereal_time } from \"./suncalc-seek-sunsets.cul.js\";import { altitude } from \"./suncalc-seek-sunsets.cul.js\";import { azimuth } from \"./suncalc-seek-sunsets.cul.js\";import { dec } from \"./suncalc-seek-sunsets.cul.js\";import { declination } from \"./suncalc-seek-sunsets.cul.js\";import { right_ascension } from \"./suncalc-seek-sunsets.cul.js\";import { b } from \"./suncalc-seek-sunsets.cul.js\";import { l } from \"./suncalc-seek-sunsets.cul.js\";import { julian_1 } from \"./suncalc-seek-sunsets.cul.js\";import { phi } from \"./suncalc-seek-sunsets.cul.js\";import { lw } from \"./suncalc-seek-sunsets.cul.js\";import { e } from \"./suncalc-seek-sunsets.cul.js\";import { rad } from \"./suncalc-seek-sunsets.cul.js\";import { J2000 } from \"./suncalc-seek-sunsets.cul.js\";import { J1970 } from \"./suncalc-seek-sunsets.cul.js\";import { dayMs } from \"./suncalc-seek-sunsets.cul.js\";import { lng } from \"./suncalc-seek-sunsets.cul.js\";import { lat } from \"./suncalc-seek-sunsets.cul.js\";import { date } from \"./suncalc-seek-sunsets.cul.js\";import { sunset_time_for_sunset_date } from \"./suncalc-seek-sunsets.cul.js\";import { sunset_projection_for_sunset_date } from \"./suncalc-seek-sunsets.cul.js\";import { sunset_projection_times_for_sunset_date } from \"./suncalc-seek-sunsets.cul.js\";import { sunset_date } from \"./suncalc-seek-sunsets.cul.js\"; // TERRIBLE\n// Seeking approach (note recursion) will be hopeless without memo\n// Until [issue #72](https://github.com/calculang/calculang/issues/72) is fixed,\n// this means I can't use modularity.\n// Therefore I copy the suncalc.cul code below.\n\n// other terrible things: This exposed some other bugs in calculang.\n// So this seeking part is **not** a good example of clean, recyclable, model code, which is what calculang models should be.\n\nimport { addMinutes, isSameDay, addDays } from 'date-fns';\nimport _ from 'underscore';\n\nexport const sunset_date_ = ({ sunset_date_in }) => sunset_date_in;\n\n// seeking: we can use the sunset time in previous day to give us a rough idea of the sunset time in the following day.\n// This just about works for my viz purposes.\n\nexport const sunset_projection_times_for_sunset_date_ = ({ lat_in, lng_in, l_in, b_in, sunset_date_in }) => {\n  //date(); obj_in();\n  //sunset_time_for_sunset_date({ sunset_date_in: new Date(2021, 9, 29) });\n  lat({ lat_in });\n  lng({ lng_in });\n  l({ l_in });\n  b({ b_in }); //very bad hack around calculang bugs in this fn\n  if (isSameDay(sunset_date({ sunset_date_in }), new Date(2021, 9, 29))) // start date is calculang release date\n    return _.range(0, 100) // 500 mins => over 8 hours\n    .map((i) => addMinutes(new Date(2021, 9, 29, 17 /* 5pm? */), i * 5)); // these are very limiting paramaters for other locations ! Maybe move to check all 5 min intervals?\n    // assuming after 10/29/21\n  else\n  return _.range(-15, 15) // ~75mins. Wide to capture time changes? +I could use the solsticies to avoid seeking both ways\n  .map((i) =>\n  addDays(\n  addMinutes(\n  sunset_time_for_sunset_date({ lat_in, lng_in, l_in, b_in,\n    sunset_date_in: addDays(sunset_date({ sunset_date_in }), -1) }),\n\n\n  i * 5),\n  1));\n\n\n  //.map((datezz) => (\n  /*altitude:*/6; //altitude_obj({ obj_in: 'sun', X: date()*0+obj() }) // compiler doesn't like this\n  //,azimuth: 2//azimuth_obj({ /* obj_in: 'sun', date_in, X: date()*0+obj() */ }),\n  //));\n};\n\nexport const sunset_projection_for_sunset_date_ = ({ lat_in, lng_in, l_in, b_in, sunset_date_in }) =>\nsunset_projection_times_for_sunset_date({ lat_in, lng_in, l_in, b_in, sunset_date_in }).map((date_in) => ({\n  date_in,\n  sunset_date_in: sunset_date({ sunset_date_in }),\n  altitude: altitude_obj({ lat_in, date_in, lng_in, obj_in: 'sun' }),\n  azimuth: azimuth_obj({ date_in, lng_in, lat_in, obj_in: 'sun' }) }));\n\n\nexport const sunset_time_for_sunset_date_ = ({ lat_in, lng_in, l_in, b_in, sunset_date_in }) =>\nsunset_projection_for_sunset_date({ lat_in, lng_in, l_in, b_in, sunset_date_in }).find((d) => d.altitude < 0).date_in;\n\n\n////// suncalc.cul.js begin:\n\n// based on formulae in SunCalc,\n// https://github.com/mourner/suncalc\n// SunCalc is (c) Vladimir Agafonkin (http://agafonkin.com/en)\n\n// SunCalc readme:\n// \"Most calculations are based on the formulas given in the excellent Astronomy Answers articles\n// about [position of the sun](http://aa.quae.nl/en/reken/zonpositie.html)\n// and [the planets](http://aa.quae.nl/en/reken/hemelpositie.html).\"\n\n// ideas: compare/rec against Mike Bostock solar-calculator module on npm, and/or NOAA s/s on which solar-calculator based.\n// + https://observablehq.com/@mourner/sun-position-in-900-bytes\n//   ^ \"more precise\" \"based on formulas from the 2nd edition of [Jean Meeus's \"Astronomical Algorithms\" book](https://www.willbell.com/math/mc1.htm)\" \n\n// + https://observablehq.com/@mourner/sun-position-in-900-bytes\n// \"based on formulas from the 2nd edition of [Jean Meeus's \"Astronomical Algorithms\" book](https://www.willbell.com/math/mc1.htm)\" \"more precise\"\n\nexport const date_ = ({ date_in }) => date_in;\nexport const lat_ = ({ lat_in }) => lat_in;\nexport const lng_ = ({ lng_in }) => lng_in;\n\n// \"date/time constants and conversions\"\nexport const dayMs_ = ({}) => 1000 * 60 * 60 * 24;\nexport const J1970_ = ({}) => 2440588;\nexport const J2000_ = ({}) => 2451545;\nexport const rad_ = ({}) => Math.PI / 180;\n\n// bad form?\nvar PI = Math.PI,\nsin = Math.sin,\ncos = Math.cos,\ntan = Math.tan,\nasin = Math.asin,\natan = Math.atan2,\nacos = Math.acos;\n\nexport const e_ = ({}) => rad({}) * 23.4397; // obliquity of the Earth\n\nexport const lw_ = ({ lng_in }) => rad({}) * -lng({ lng_in });\nexport const phi_ = ({ lat_in }) => rad({}) * lat({ lat_in });\n\nexport const julian_1_ = ({ date_in }) => date({ date_in }).valueOf() / dayMs({}) - 0.5 + J1970({}) - J2000({}); // fn on date_in\n\n//// right_ascension, declination locked input structure\nexport const l_ = ({ l_in }) => l_in;\nexport const b_ = ({ b_in }) => b_in;\n\nexport const right_ascension_ = ({ l_in, b_in }) =>\natan(sin(l({ l_in })) * cos(e({})) - tan(b({ b_in })) * sin(e({})), cos(l({ l_in })));\nexport const declination_ = ({ b_in, l_in }) =>\nasin(sin(b({ b_in })) * cos(e({})) + cos(b({ b_in })) * sin(e({})) * sin(l({ l_in })));\n\n/// azimuth, altitude ~~locked~~ input structure\n//export const H = () => H_in;\n//export const phi = () => phi_in;\nexport const dec_ = ({ dec_in }) => dec_in;\n\nexport const azimuth_ = ({ date_in, lng_in, obj_in, lat_in, dec_in }) =>\natan(sin(H({ date_in, lng_in, obj_in })), cos(H({ date_in, lng_in, obj_in })) * sin(phi({ lat_in })) - tan(dec({ dec_in })) * cos(phi({ lat_in }))); // some refactors to function might help here\nexport const altitude_ = ({ lat_in, dec_in, date_in, lng_in, obj_in }) =>\nasin(sin(phi({ lat_in })) * sin(dec({ dec_in })) + cos(phi({ lat_in })) * cos(dec({ dec_in })) * cos(H({ date_in, lng_in, obj_in })));\n\n//export const lw = () => lw_in;\nexport const sidereal_time_ = ({ date_in, lng_in }) =>\nrad({}) * (280.16 + 360.9856235 * julian_1({ date_in })) - lw({ lng_in });\n\n// abstract sun, moon values via obj_in\nexport const obj_ = ({ obj_in }) => obj_in;\nexport const solar_mean_anomaly_ = ({ obj_in, date_in }) => {\n  if (obj({ obj_in }) == 'sun') return rad({}) * (357.5291 + 0.98560028 * julian_1({ date_in }));else\n  if (obj({ obj_in }) == 'moon') return rad({}) * (134.963 + 13.064993 * julian_1({ date_in }));else\n  console.error('obj not sun or moon');\n};\n\nexport const equation_of_center_ = ({ obj_in, date_in }) =>\nrad({}) * (\n1.9148 * sin(solar_mean_anomaly({ obj_in, date_in })) +\n0.02 * sin(2 * solar_mean_anomaly({ obj_in, date_in })) +\n0.0003 * sin(3 * solar_mean_anomaly({ obj_in, date_in })));\n\nexport const perihelion_of_earth_ = ({}) => rad({}) * 102.9372;\n\nexport const ecliptic_longitude_ = ({ obj_in, date_in }) =>\nMath.PI + solar_mean_anomaly({ obj_in, date_in }) + equation_of_center({ obj_in, date_in }) + perihelion_of_earth({});\n\n// sunCoords outputs (still intermediate)\n// naming convention? (L, 0) / _obj?\nexport const declination_L0_ = ({ obj_in, date_in }) =>\ndeclination({ l_in: ecliptic_longitude({ obj_in, date_in }), b_in: 0 });\nexport const right_ascension_L0_ = ({ obj_in, date_in }) =>\nright_ascension({ l_in: ecliptic_longitude({ obj_in, date_in }), b_in: 0 });\n\nexport const H_ = ({ date_in, lng_in, obj_in }) => sidereal_time({ date_in, lng_in }) - right_ascension_L0({ obj_in, date_in });\n\n// outputs\nexport const azimuth_obj_ = ({ date_in, lng_in, obj_in, lat_in }) => azimuth({ date_in, lng_in, obj_in, lat_in, dec_in: declination_L0({ obj_in, date_in }) });\nexport const altitude_obj_ = ({ lat_in, date_in, lng_in, obj_in }) => altitude({ lat_in, date_in, lng_in, obj_in, dec_in: declination_L0({ obj_in, date_in }) });\n\n// moon calcs in suncalc have an astroRefraction param I didn't build?\n// also some other error?\n// but sun recs closer from a few tests"]}