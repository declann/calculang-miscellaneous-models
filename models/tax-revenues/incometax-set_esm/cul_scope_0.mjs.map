{"version":3,"sources":["incometax-set.cul.js"],"names":["income_tax","effective_rate","usc","paye","taxpayer_id","taxpayer_id_in","taxpayer_table","taxpayer_table_in","taxpayer_count","taxpayer_count_in","gross_salary","proportion","income_tax_by_taxpayer","paye_by_taxpayer","usc_by_taxpayer","income_tax_sum","reduce","acc","val","paye_sum","usc_sum"],"mappings":"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","sourcesContent":["import { income_tax, effective_rate, usc, paye } from \"./simple-incometax.cul?cul_scope_id=1&cul_parent_scope_id=0\";\nexport { income_tax, effective_rate, usc, paye };\n\nexport const taxpayer_id = ({ taxpayer_id_in }) => taxpayer_id_in;\nexport const taxpayer_table = ({ taxpayer_table_in }) => taxpayer_table_in;\nexport const taxpayer_count = ({ taxpayer_count_in }) => taxpayer_count_in;\n\nexport const gross_salary = ({ taxpayer_table_in, taxpayer_id_in }) => taxpayer_table({ taxpayer_table_in })[taxpayer_id({ taxpayer_id_in })].gross_salary;\nexport const proportion = ({ taxpayer_table_in, taxpayer_id_in }) => taxpayer_table({ taxpayer_table_in })[taxpayer_id({ taxpayer_id_in })].proportion;\n\n\nexport const income_tax_by_taxpayer = ({ taxpayer_table_in, taxpayer_id_in, taxpayer_count_in }) => income_tax({ taxpayer_table_in, taxpayer_id_in }) * proportion({ taxpayer_table_in, taxpayer_id_in }) * taxpayer_count({ taxpayer_count_in });\nexport const paye_by_taxpayer = ({ taxpayer_table_in, taxpayer_id_in, taxpayer_count_in }) => paye({ taxpayer_table_in, taxpayer_id_in }) * proportion({ taxpayer_table_in, taxpayer_id_in }) * taxpayer_count({ taxpayer_count_in });\nexport const usc_by_taxpayer = ({ taxpayer_table_in, taxpayer_id_in, taxpayer_count_in }) => usc({ taxpayer_table_in, taxpayer_id_in }) * proportion({ taxpayer_table_in, taxpayer_id_in }) * taxpayer_count({ taxpayer_count_in });\n\nexport const income_tax_sum = ({ taxpayer_table_in, taxpayer_count_in }) =>\ntaxpayer_table({ taxpayer_table_in }).reduce(\n(acc, val) =>\nacc +\nincome_tax({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) *\nproportion({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) * // this should be abstracted e.g. income_tax = income_tax * proportion * taxpayer_calc in sep. scaling model, for now creating _by_taxpayer variables\ntaxpayer_count({ taxpayer_count_in }),\n0);\n\n\nexport const paye_sum = ({ taxpayer_table_in, taxpayer_count_in }) =>\ntaxpayer_table({ taxpayer_table_in }).reduce(\n(acc, val) =>\nacc +\npaye({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) *\nproportion({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) *\ntaxpayer_count({ taxpayer_count_in }),\n0);\n\n\nexport const usc_sum = ({ taxpayer_table_in, taxpayer_count_in }) =>\ntaxpayer_table({ taxpayer_table_in }).reduce(\n(acc, val) =>\nacc +\nusc({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) *\nproportion({ taxpayer_table_in, taxpayer_id_in: val.taxpayer_id }) *\ntaxpayer_count({ taxpayer_count_in }),\n0);"]}