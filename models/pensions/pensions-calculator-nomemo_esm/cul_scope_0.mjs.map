{"version":3,"names":["fund_value","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","annual_salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_balance","unit_price","age","age_0","fund_value_0","unit_allocation","annual_premium","unit_growth_rate","retirement_age","annual_salary","empee_contribution_rate","annual_salary_0","salary_inflation_rate","projected_fund_value"],"sources":["pensions-calculator-nomemo.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price(); // was caught by stack error because of no lower bound! static analysis!\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n   // timing = premium received at start of year and allocated immediately\n}\n\nexport const unit_allocation = () => annual_premium() / unit_price(); // TODO model a contribution charge\nexport const unit_price = () => { // no b/o spread. Should this part be in terms of age ?\n  if (age() <= age_0()) return 1;\n  else return unit_price({age_in:age()-1})*(1+unit_growth_rate())\n}\n\nexport const annual_premium = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return annual_salary({ age_in: age() - 1 }) * empee_contribution_rate();\n}\n\n// at end of year\nexport const annual_salary = () => {\n  if (age() <= age_0() - 1) return annual_salary_0();\n  else if (age() >= retirement_age())\n    return 0;\n  else\n    return annual_salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\n\n// at retirement:\nexport const projected_fund_value = () =>\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const annual_salary_0 = () => annual_salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\n//export const emper_contribution_rate = () => (emper_contribution_rate_in) not modelling employer contributions yet\n\nexport const unit_growth_rate = () => (unit_growth_rate_in);\n\nexport const fund_value_0 = () => (fund_value_0_in);\n"],"mappings":"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"}