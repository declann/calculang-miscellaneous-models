{"version":3,"names":["income_tax","fund_value","unit_balance","unit_allocation","unit_price","empee_contribution","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","emper_contribution","salary","projected_fund_value","age","age_0","age_0_projected","retirement_age","retirement_age_projected","salary_0","salary_0_projected","salary_inflation_rate","salary_inflation_rate_projected","empee_contribution_rate","empee_contribution_rate_projected","emper_contribution_rate","emper_contribution_rate_projected","unit_growth_rate","unit_growth_rate_projected","fund_value_0","fund_value_0_projected","contribution_charge","contribution_charge_projected","actuals","actuals_in","salary_inflation_rate_actual","age_in","salary_inflation_rate_in","empee_contribution_rate_actual","empee_contribution_rate_in","unit_growth_rate_actual","unit_growth_rate_in","age_0_actual","age_0_in","fund_value_0_actual","fund_value_0_in","retirement_age_actual","retirement_age_in","salary_0_actual","salary_0_in","age_opening","age_opening_in","age_opening_closing_offset_in","age_opening_closing_offset","age_closing","age_closing_in","rec_step","rec_step_in","age_0_actual_co","retirement_age_actual_co","salary_0_actual_co","salary_inflation_rate_actual_co","empee_contribution_rate_actual_co","emper_contribution_rate_actual_co","unit_growth_rate_actual_co","fund_value_0_actual_co","contribution_charge_actual_co","emper_contribution_rate_actual","contribution_charge_actual","rec_order"],"sources":["rec-exec-nomemo.cul.js"],"sourcesContent":["\nimport {\n  //age, // important\n  income_tax,fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,accumulated_empee_contributions,pension_tax_relief_ratio,empee_contribution_tax_relief,emper_contribution,salary,projected_fund_value,age,\n  age_0 as age_0_projected,\nretirement_age as retirement_age_projected,\nsalary_0 as salary_0_projected,\nsalary_inflation_rate as salary_inflation_rate_projected,\nempee_contribution_rate as empee_contribution_rate_projected,\nemper_contribution_rate as emper_contribution_rate_projected,\nunit_growth_rate as unit_growth_rate_projected,\nfund_value_0 as fund_value_0_projected,\ncontribution_charge as contribution_charge_projected // how come I didn't put _ here and it worked?\n} from \"./projected.cul\";\n\n\n// actual data todo add flexibility\n\nexport const actuals = () => actuals_in;\n\n// TODO generalise\nexport const salary_inflation_rate_actual = () => actuals()[age()-30+1].salary_inflation_rate_in;\nexport const empee_contribution_rate_actual = () => actuals()[age()-30+1].empee_contribution_rate_in;\nexport const unit_growth_rate_actual = () => actuals()[age()-30+1].unit_growth_rate_in;\nexport const age_0_actual = () => actuals()[age()-30+1].age_0_in;\nexport const fund_value_0_actual = () => actuals()[age()-30+1].fund_value_0_in;\nexport const retirement_age_actual = () => actuals()[age()-30+1].retirement_age_in;\nexport const salary_0_actual = () => actuals()[age()-30+1].salary_0_in;\n\nexport {\n  income_tax,fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,accumulated_empee_contributions,pension_tax_relief_ratio,empee_contribution_tax_relief,emper_contribution,salary,projected_fund_value,age,\n  age_0_projected,\nretirement_age_projected,\nsalary_0_projected,\nsalary_inflation_rate_projected,\nempee_contribution_rate_projected,\nemper_contribution_rate_projected,\nunit_growth_rate_projected,\nfund_value_0_projected,\ncontribution_charge_projected\n};\n\n// TODO generalise\nexport const age_opening = () => age_opening_in + age_opening_closing_offset(); // todo offset in terms of closing-opening?\nexport const age_closing = () => age_closing_in + age_opening_closing_offset();\nexport const age_opening_closing_offset = () => age_opening_closing_offset_in;\nexport const rec_step = () => rec_step_in; // wrong: 0 = AAA, 1 = E salary inflation, 2 = E empee contribution, 3 = E unit growth rate (=EEE)\n\n\n// neater if I merge these 2 blocks together:\n\nexport const age_0_actual_co = () => {\n  if (rec_step() >= 1) return age_opening();\n  else return age_closing();\n};\n\nexport const retirement_age_actual_co = () => {\n  if (rec_step() >= 2) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_0_actual_co = () => {\n  if (rec_step() >= 3) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_inflation_rate_actual_co = () => {\n  if (rec_step() >= 4) return age_opening();\n  else return age_closing();\n};\n\nexport const empee_contribution_rate_actual_co = () => {\n  if (rec_step() >= 5) return age_opening();\n  else return age_closing();\n};\n\nexport const emper_contribution_rate_actual_co = () => {\n  if (rec_step() >= 6) return age_opening();\n  else return age_closing();\n};\n\nexport const unit_growth_rate_actual_co = () => {\n  if (rec_step() >= 7) return age_opening();\n  else return age_closing();\n};\n\nexport const fund_value_0_actual_co = () => {\n  if (rec_step() >= 8) return age_opening();\n  else return age_closing();\n};\n\nexport const contribution_charge_actual_co = () => {\n  if (rec_step() >= 9) return age_opening();\n  else return age_closing();\n};;\n\nexport const age_0 = () => {\n  if(age() > age_0_actual_co())\n    return age_0_projected()\n  else return age_0_actual();\n};\n\nexport const retirement_age = () => {\n  if(age() > retirement_age_actual_co())\n    return retirement_age_projected()\n  else return retirement_age_actual();\n};\n\nexport const salary_0 = () => {\n  if(age() > salary_0_actual_co())\n    return salary_0_projected()\n  else return salary_0_actual();\n};\n\nexport const salary_inflation_rate = () => {\n  if(age() > salary_inflation_rate_actual_co())\n    return salary_inflation_rate_projected()\n  else return salary_inflation_rate_actual();\n};\n\nexport const empee_contribution_rate = () => {\n  if(age() > empee_contribution_rate_actual_co())\n    return empee_contribution_rate_projected()\n  else return empee_contribution_rate_actual();\n};\n\nexport const emper_contribution_rate = () => {\n  if(age() > emper_contribution_rate_actual_co())\n    return emper_contribution_rate_projected()\n  else return emper_contribution_rate_actual();\n};\n\nexport const unit_growth_rate = () => {\n  if(age() > unit_growth_rate_actual_co())\n    return unit_growth_rate_projected()\n  else return unit_growth_rate_actual();\n};\n\nexport const fund_value_0 = () => {\n  if(age() > fund_value_0_actual_co())\n    return fund_value_0_projected()\n  else return fund_value_0_actual();\n};\n\nexport const contribution_charge = () => {\n  if(age() > contribution_charge_actual_co())\n    return contribution_charge_projected()\n  else return contribution_charge_actual();\n};;\n\nexport const rec_order = ['age_0','retirement_age','salary_0','salary_inflation_rate','empee_contribution_rate','emper_contribution_rate','unit_growth_rate','fund_value_0','contribution_charge'];\n\n\n"],"mappings":"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"}