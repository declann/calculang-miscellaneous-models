{"version":3,"names":["income_tax","fund_value","unit_balance","unit_allocation","unit_price","empee_contribution","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","emper_contribution","salary","projected_fund_value","actuals","actuals_in","inputs","inputs_in","salary_inflation_rate_actual","age_in","age","salary_inflation_rate_in","empee_contribution_rate_actual","empee_contribution_rate_in","unit_growth_rate_actual","unit_growth_rate_in","age_0_actual","age_0_in","fund_value_0_actual","fund_value_0_in","retirement_age_actual","retirement_age_in","salary_0_actual","salary_0_in","emper_contribution_rate_actual","emper_contribution_rate_in","contribution_charge_actual","contribution_charge_in","age_opening","age_opening_in","age_closing","age_closing_in","rec_step","rec_step_in","rec_step_inputs","rec_step_inputs_in","age_0_projected","c","findIndex","d","length","age_0","retirement_age_projected","retirement_age","salary_0_projected","salary_0","salary_inflation_rate_projected","salary_inflation_rate","empee_contribution_rate_projected","empee_contribution_rate","emper_contribution_rate_projected","emper_contribution_rate","unit_growth_rate_projected","unit_growth_rate","fund_value_0_projected","fund_value_0","contribution_charge_projected","contribution_charge","age_0_actual_co","retirement_age_actual_co","salary_0_actual_co","salary_inflation_rate_actual_co","empee_contribution_rate_actual_co","emper_contribution_rate_actual_co","unit_growth_rate_actual_co","fund_value_0_actual_co","contribution_charge_actual_co","rec_order"],"sources":["rec-exec-nomemo.cul.js"],"sourcesContent":["\nimport {\n  //age, // important\n  income_tax,fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,accumulated_empee_contributions,pension_tax_relief_ratio,empee_contribution_tax_relief,emper_contribution,salary,projected_fund_value,\n} from \"./projected.cul\";\n\n\n// actual data todo add flexibility\n\nexport const actuals = () => actuals_in;\nexport const inputs = () => inputs_in;\n\n// TODO generalise\nexport const salary_inflation_rate_actual = () => actuals()[age()-30+1].salary_inflation_rate_in;\nexport const empee_contribution_rate_actual = () => actuals()[age()-30+1].empee_contribution_rate_in;\nexport const unit_growth_rate_actual = () => actuals()[age()-30+1].unit_growth_rate_in;\nexport const age_0_actual = () => actuals()[age()-30+1].age_0_in;\nexport const fund_value_0_actual = () => actuals()[age()-30+1].fund_value_0_in;\nexport const retirement_age_actual = () => actuals()[age()-30+1].retirement_age_in;\nexport const salary_0_actual = () => actuals()[age()-30+1].salary_0_in;\nexport const emper_contribution_rate_actual = () => actuals()[age()-30+1].emper_contribution_rate_in;\nexport const contribution_charge_actual = () => actuals()[age()-30+1].contribution_charge_in;\n\nexport {\n  income_tax,fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,accumulated_empee_contributions,pension_tax_relief_ratio,empee_contribution_tax_relief,emper_contribution,salary,projected_fund_value\n};\n\n// TODO generalise\nexport const age_opening = () => age_opening_in;\nexport const age_closing = () => age_closing_in;\nexport const rec_step = () => rec_step_in; // wrong: 0 = AAA, 1 = E salary inflation, 2 = E empee contribution, 3 = E unit growth rate (=EEE)\nexport const age = () => age_in;\nexport const rec_step_inputs = () => rec_step_inputs_in;\n\nexport const age_0_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].age_0; // abstract complete object in one todo\n    else return inputs()[c].age_0\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const retirement_age_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].retirement_age; // abstract complete object in one todo\n    else return inputs()[c].retirement_age\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const salary_0_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].salary_0; // abstract complete object in one todo\n    else return inputs()[c].salary_0\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const salary_inflation_rate_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].salary_inflation_rate; // abstract complete object in one todo\n    else return inputs()[c].salary_inflation_rate\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const empee_contribution_rate_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].empee_contribution_rate; // abstract complete object in one todo\n    else return inputs()[c].empee_contribution_rate\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const emper_contribution_rate_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].emper_contribution_rate; // abstract complete object in one todo\n    else return inputs()[c].emper_contribution_rate\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const unit_growth_rate_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].unit_growth_rate; // abstract complete object in one todo\n    else return inputs()[c].unit_growth_rate\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const fund_value_0_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].fund_value_0; // abstract complete object in one todo\n    else return inputs()[c].fund_value_0\n  } else { // lookup inputs using\n\n  }\n};\n\nexport const contribution_charge_projected = () => {\n  if (rec_step_inputs() == 0) {\n    let c = inputs().findIndex(d => d.age_in < age_opening()); // think about timing // the constraint is on the Next record... (or End)\n    if (c == -1) return inputs()[inputs().length-1].contribution_charge; // abstract complete object in one todo\n    else return inputs()[c].contribution_charge\n  } else { // lookup inputs using\n\n  }\n};;\n\n\n// neater if I merge these 2 blocks together:\n\nexport const age_0_actual_co = () => {\n  if (rec_step() >= 1) return age_opening();\n  else return age_closing();\n};\n\nexport const retirement_age_actual_co = () => {\n  if (rec_step() >= 2) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_0_actual_co = () => {\n  if (rec_step() >= 3) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_inflation_rate_actual_co = () => {\n  if (rec_step() >= 4) return age_opening();\n  else return age_closing();\n};\n\nexport const empee_contribution_rate_actual_co = () => {\n  if (rec_step() >= 5) return age_opening();\n  else return age_closing();\n};\n\nexport const emper_contribution_rate_actual_co = () => {\n  if (rec_step() >= 6) return age_opening();\n  else return age_closing();\n};\n\nexport const unit_growth_rate_actual_co = () => {\n  if (rec_step() >= 7) return age_opening();\n  else return age_closing();\n};\n\nexport const fund_value_0_actual_co = () => {\n  if (rec_step() >= 8) return age_opening();\n  else return age_closing();\n};\n\nexport const contribution_charge_actual_co = () => {\n  if (rec_step() >= 9) return age_opening();\n  else return age_closing();\n};;\n\nexport const age_0 = () => {\n  if(age() > age_0_actual_co())\n    return age_0_projected(); // Make it _0 vars?\n  else return age_0_actual();\n};\n\nexport const retirement_age = () => {\n  if(age() > retirement_age_actual_co())\n    return retirement_age_actual({age_in:retirement_age_actual_co()}); // Make it _0 vars?\n  else return retirement_age_actual();\n};\n\nexport const salary_0 = () => {\n  if(age() > salary_0_actual_co())\n    return salary_0_projected(); // Make it _0 vars?\n  else return salary_0_actual();\n};\n\nexport const salary_inflation_rate = () => {\n  if(age() > salary_inflation_rate_actual_co())\n    return salary_inflation_rate_projected(); // Make it _0 vars?\n  else return salary_inflation_rate_actual();\n};\n\nexport const empee_contribution_rate = () => {\n  if(age() > empee_contribution_rate_actual_co())\n    return empee_contribution_rate_projected(); // Make it _0 vars?\n  else return empee_contribution_rate_actual();\n};\n\nexport const emper_contribution_rate = () => {\n  if(age() > emper_contribution_rate_actual_co())\n    return emper_contribution_rate_projected(); // Make it _0 vars?\n  else return emper_contribution_rate_actual();\n};\n\nexport const unit_growth_rate = () => {\n  if(age() > unit_growth_rate_actual_co())\n    return unit_growth_rate_projected(); // Make it _0 vars?\n  else return unit_growth_rate_actual();\n};\n\nexport const fund_value_0 = () => {\n  if(age() > fund_value_0_actual_co())\n    return fund_value_0_projected(); // Make it _0 vars?\n  else return fund_value_0_actual();\n};\n\nexport const contribution_charge = () => {\n  if(age() > contribution_charge_actual_co())\n    return contribution_charge_projected(); // Make it _0 vars?\n  else return contribution_charge_actual();\n};;\n\nexport const rec_order = ['age_0','retirement_age','salary_0','salary_inflation_rate','empee_contribution_rate','emper_contribution_rate','unit_growth_rate','fund_value_0','contribution_charge'];\n\n\n"],"mappings":"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"}