{"version":3,"names":["age","age_in","age_0","retirement_age","annual_salary_0","salary_inflation_rate","empee_contribution_rate","unit_growth_rate","fund_value_0","fund_value","rec_step_in","age_opening_in","age_closing_in","unit_balance","unit_price","unit_allocation","empee_contribution","salary","salary_0","projected_fund_value"],"sources":["projected.cul.js"],"sourcesContent":["export const age = () => age_in;\nexport const age_0 = () => 20;\nexport const retirement_age = () => 65;\nexport const annual_salary_0 = () => 30000;\nexport const salary_inflation_rate = () => 0.02;\nexport const empee_contribution_rate = () => 0.1;\nexport const unit_growth_rate = () => 0.05;\nexport const fund_value_0 = () => 0;\n\n// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () => empee_contribution() / unit_price(); // todo emper contribution, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n"],"mappings":"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"}