{"version":3,"names":["income_tax","fund_value","unit_balance","unit_price","age","age_0","fund_value_0","age_in","unit_allocation","empee_contribution","emper_contribution","contribution_charge","unit_growth_rate","retirement_age","salary","empee_contribution_rate","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","gross_salary_in","tax_credits_in","pension_contribution_in","emper_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value"],"sources":["projected.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nimport { income_tax } from \"./simple-incometax.cul\";\nexport { income_tax };\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () =>\n  ((empee_contribution() + emper_contribution()) *\n    (1 - contribution_charge())) /\n  unit_price(); // todo, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const accumulated_empee_contributions = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contributions({ age_in: age() - 1 }) +\n      empee_contribution()\n    );\n};\n\nexport const pension_tax_relief_ratio = () =>\n  empee_contribution_tax_relief() / empee_contribution();\n\nexport const empee_contribution_tax_relief = () =>\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: 0,\n  }) -\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: empee_contribution(),\n  });\n\n// affected by bug: depends on gross_salary_in, for some reason\n// issue #102\n/*export const accumulated_empee_contribution_tax_relief = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contribution_tax_relief({ age_in: age() - 1 }) +\n      empee_contribution_tax_relief()\n    );\n};*/\n\nexport const emper_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * emper_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::"],"mappings":"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"}