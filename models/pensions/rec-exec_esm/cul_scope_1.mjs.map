{"version":3,"names":["income_tax","fund_value","age_in","rec_step_in","age_opening_in","age_closing_in","rec_step_inputs_in","inputs_in","actuals_in","unit_balance","unit_price","age","age_0","fund_value_0","unit_allocation","empee_contribution","emper_contribution","contribution_charge","unit_growth_rate","retirement_age","salary","empee_contribution_rate","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","gross_salary_in","tax_credits_in","pension_contribution_in","emper_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value"],"sources":["projected.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nimport { income_tax } from \"./simple-incometax.cul\";\nexport { income_tax };\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () =>\n  ((empee_contribution() + emper_contribution()) *\n    (1 - contribution_charge())) /\n  unit_price(); // todo, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const accumulated_empee_contributions = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contributions({ age_in: age() - 1 }) +\n      empee_contribution()\n    );\n};\n\nexport const pension_tax_relief_ratio = () =>\n  empee_contribution_tax_relief() / empee_contribution();\n\nexport const empee_contribution_tax_relief = () =>\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: 0,\n  }) -\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: empee_contribution(),\n  });\n\n// affected by bug: depends on gross_salary_in, for some reason\n// issue #102\n/*export const accumulated_empee_contribution_tax_relief = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contribution_tax_relief({ age_in: age() - 1 }) +\n      empee_contribution_tax_relief()\n    );\n};*/\n\nexport const emper_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * emper_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::"],"mappings":"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"}