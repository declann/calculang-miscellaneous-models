{"version":3,"names":["fund_value","unit_balance","unit_allocation","unit_price","empee_contribution","salary","projected_fund_value","age","age_0","age_0_projected","retirement_age","retirement_age_projected","salary_0","salary_0_projected","salary_inflation_rate","salary_inflation_rate_projected","empee_contribution_rate","empee_contribution_rate_projected","unit_growth_rate","unit_growth_rate_projected","fund_value_0","fund_value_0_projected","salary_inflation_rate_actual","empee_contribution_rate_actual","unit_growth_rate_actual","age_0_actual","fund_value_0_actual","retirement_age_actual","salary_0_actual","age_opening","age_opening_in","age_opening_closing_offset_in","age_opening_closing_offset","age_closing","age_closing_in","rec_step","rec_step_in","age_0_actual_co","retirement_age_actual_co","salary_0_actual_co","salary_inflation_rate_actual_co","empee_contribution_rate_actual_co","unit_growth_rate_actual_co","fund_value_0_actual_co","age_in","rec_order"],"sources":["rec-exec.cul.js"],"sourcesContent":["\nimport {\n  //age, // important\n  fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,salary,projected_fund_value,age,\n  age_0 as age_0_projected,\nretirement_age as retirement_age_projected,\nsalary_0 as salary_0_projected,\nsalary_inflation_rate as salary_inflation_rate_projected,\nempee_contribution_rate as empee_contribution_rate_projected,\nunit_growth_rate as unit_growth_rate_projected,\nfund_value_0 as fund_value_0_projected // how come I didn't put _ here and it worked?\n} from \"./projected.cul\";\n\n\n// actual data todo add flexibility\n\nexport const salary_inflation_rate_actual = () => 0.019//age() - age_0() < 0 ? 0 : [0.019, 0.01, 0.01][age() - age_0()];\nexport const empee_contribution_rate_actual = () => 0.08//age() - age_0() < 0 ? 0 : [0.1, 0.1, 0.08][age() - age_0()];\nexport const unit_growth_rate_actual = () => 0.08//age() - age_0() < 0 ? 0 : [0.06, 0.04, 0.04][age() - age_0()];\nexport const age_0_actual = () => 20;//[20,20,20][age() - age_0()]; // silly?\nexport const fund_value_0_actual = () => 0//age() - age_0() < 0 ? 0 : [0,0,0][age() - age_0()];\nexport const retirement_age_actual = () =>65// age() - age_0() < 0 ? 0 : [65,65,65][age() - age_0()];\nexport const salary_0_actual = () => 30000//age() - age_0() < 0 ? 0 : [30000,30000,30000][age() - age_0()];\n\nexport {\n  fund_value,unit_balance,unit_allocation,unit_price,empee_contribution,salary,projected_fund_value,age,\n  age_0_projected,\nretirement_age_projected,\nsalary_0_projected,\nsalary_inflation_rate_projected,\nempee_contribution_rate_projected,\nunit_growth_rate_projected,\nfund_value_0_projected\n};\n\n// TODO\nexport const age_opening = () => age_opening_in + age_opening_closing_offset();\nexport const age_closing = () => age_closing_in + age_opening_closing_offset();\nexport const age_opening_closing_offset = () => age_opening_closing_offset_in;\nexport const rec_step = () => rec_step_in; // wrong: 0 = AAA, 1 = E salary inflation, 2 = E empee contribution, 3 = E unit growth rate (=EEE)\n\n\n// neater if I merge these 2 blocks together:\n\nexport const age_0_actual_co = () => {\n  if (rec_step() >= 1) return age_opening();\n  else return age_closing();\n};\n\nexport const retirement_age_actual_co = () => {\n  if (rec_step() >= 2) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_0_actual_co = () => {\n  if (rec_step() >= 3) return age_opening();\n  else return age_closing();\n};\n\nexport const salary_inflation_rate_actual_co = () => {\n  if (rec_step() >= 4) return age_opening();\n  else return age_closing();\n};\n\nexport const empee_contribution_rate_actual_co = () => {\n  if (rec_step() >= 5) return age_opening();\n  else return age_closing();\n};\n\nexport const unit_growth_rate_actual_co = () => {\n  if (rec_step() >= 6) return age_opening();\n  else return age_closing();\n};\n\nexport const fund_value_0_actual_co = () => {\n  if (rec_step() >= 7) return age_opening();\n  else return age_closing();\n};;\n\nexport const age_0 = () => {\n  if(age() > age_0_actual_co())\n    return age_0_projected()\n  else return age_0_actual();\n};\n\nexport const retirement_age = () => {\n  if(age() > retirement_age_actual_co())\n    return retirement_age_projected()\n  else return retirement_age_actual();\n};\n\nexport const salary_0 = () => {\n  if(age() > salary_0_actual_co())\n    return salary_0_projected()\n  else return salary_0_actual();\n};\n\nexport const salary_inflation_rate = () => {\n  if(age() > salary_inflation_rate_actual_co())\n    return salary_inflation_rate_projected()\n  else return salary_inflation_rate_actual();\n};\n\nexport const empee_contribution_rate = () => {\n  if(age() > empee_contribution_rate_actual_co())\n    return empee_contribution_rate_projected()\n  else return empee_contribution_rate_actual();\n};\n\nexport const unit_growth_rate = () => {\n  if(age() > unit_growth_rate_actual_co())\n    return unit_growth_rate_projected()\n  else return unit_growth_rate_actual();\n};\n\nexport const fund_value_0 = () => {\n  if(age() > fund_value_0_actual_co())\n    return fund_value_0_projected()\n  else return fund_value_0_actual();\n};;\n\nexport const rec_order = ['age_0','retirement_age','salary_0','salary_inflation_rate','empee_contribution_rate','unit_growth_rate','fund_value_0'];\n\n\n"],"mappings":"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"}