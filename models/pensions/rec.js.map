{"version":3,"sources":["webpack:///../../../../calculang-miscellaneous-models/webpack/universalModuleDefinition","webpack:///../../../../calculang-miscellaneous-models/webpack/bootstrap","webpack:///../../../../calculang-miscellaneous-models/projected.cul.js","webpack:///../../../../calculang-miscellaneous-models/rec.cul.js","webpack:///../../../../calculang-miscellaneous-models/pensions-calculator.cul.js","webpack:///../../../../calculang-miscellaneous-models/actual.cul.js"],"names":["age_0","retirement_age","annual_salary_0","salary_inflation_rate","empee_contribution_rate","unit_growth_rate","fund_value_0","age_opening","age_opening_in","age_closing","age_closing_in","rec_step","rec_step_in","salary_inflation_rate_actual_co","age_in","age","salary_inflation_rate_projected","salary_inflation_rate_actual","empee_contribution_rate_projected","unit_growth_rate_projected","fund_value","unit_balance","unit_price","unit_allocation","annual_premium","annual_salary","projected_fund_value","age_0_in","retirement_age_in","annual_salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_growth_rate_in","fund_value_0_in"],"mappings":"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","file":"rec.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  /*age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate,\n  empee_contribution_rate,\n  unit_growth_rate,\n  fund_value_0,*/\n} from \"./pensions-calculator.cul\";\nexport {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  /*age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate,\n  empee_contribution_rate,\n  unit_growth_rate,\n  fund_value_0,*/\n};\n\nexport const age_0 = () => 20;\nexport const retirement_age = () => 65;\nexport const annual_salary_0 = () => 30000;\nexport const salary_inflation_rate = () => 0.02;\nexport const empee_contribution_rate = () => 0.1;\nexport const unit_growth_rate = () => 0.05;\nexport const fund_value_0 = () => 0;\n","// a reconciliation pattern (automate-able)\n\nimport {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate as salary_inflation_rate_projected,\n  empee_contribution_rate as empee_contribution_rate_projected,\n  unit_growth_rate as unit_growth_rate_projected,\n  fund_value_0,\n} from \"./projected.cul\";\n\nimport {\n  salary_inflation_rate as salary_inflation_rate_actual,\n  empee_contribution_rate as empee_contribution_rate_actual,\n  unit_growth_rate as unit_growth_rate_actual,\n} from \"./actual.cul\";\n\nexport {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  age_0,\n  retirement_age,\n  annual_salary_0,\n};\n\nexport const age_opening = () => age_opening_in;\nexport const age_closing = () => age_closing_in;\nexport const rec_step = () => rec_step_in; // 0 = AAA, 1 = E salary inflation, 2 = E empee contribution, 3 = E unit growth rate (=EEE)\n\nexport const salary_inflation_rate_actual_co = () => {\n  if (rec_step() >= 1) return age_opening();\n  else return age_closing();\n};\n\n// logic on age op/closing, age, rec step\nexport const salary_inflation_rate = () => {\n  if (age() > salary_inflation_rate_actual_co())\n    return salary_inflation_rate_projected();\n  else return salary_inflation_rate_actual();\n};\n\nexport const empee_contribution_rate = () => empee_contribution_rate_projected();\nexport const unit_growth_rate = () => unit_growth_rate_projected();\n","// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price(); // was caught by stack error because of no lower bound! static analysis!\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n   // timing = premium received at start of year and allocated immediately\n}\n\nexport const unit_allocation = () => annual_premium() / unit_price(); // TODO model a contribution charge\nexport const unit_price = () => { // no b/o spread. Should this part be in terms of age ?\n  if (age() <= age_0()) return 1;\n  else return unit_price({age_in:age()-1})*(1+unit_growth_rate())\n}\n\nexport const annual_premium = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return annual_salary({ age_in: age() - 1 }) * empee_contribution_rate();\n}\n\n// at end of year\nexport const annual_salary = () => {\n  if (age() <= age_0() - 1) return annual_salary_0();\n  else if (age() >= retirement_age())\n    return 0;\n  else\n    return annual_salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\n\n// at retirement:\nexport const projected_fund_value = () =>\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const annual_salary_0 = () => annual_salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\n//export const emper_contribution_rate = () => (emper_contribution_rate_in) not modelling employer contributions yet\n\nexport const unit_growth_rate = () => (unit_growth_rate_in);\n\nexport const fund_value_0 = () => (fund_value_0_in);\n","//import {\n  /*fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,*/\n  /*age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate,\n  empee_contribution_rate,\n  unit_growth_rate,\n  fund_value_0,*/\n//} from \"./pensions-calculator.cul\";\n//export {\n  /*fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,*/\n  /*age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate,\n  empee_contribution_rate,\n  unit_growth_rate,\n  fund_value_0,*/\n//};\n\n// just reconciling on 3 inputs now: salary_inflation_rate, empee_contribution_rate, unit_growth_rate\n\nexport const age_0 = () => 20;\nexport const retirement_age = () => 65;\nexport const annual_salary_0 = () => 30000;\nexport const salary_inflation_rate = () => [0.02, 0.01, 0.01][age() - age_0()];\nexport const empee_contribution_rate = () => [0.1, 0.1, 0.08][age() - age_0()];\nexport const unit_growth_rate = () => [0.06, 0.04, 0.04][age() - age_0()];\nexport const fund_value_0 = () => 0;\n"],"sourceRoot":""}