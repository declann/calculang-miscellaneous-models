{"version":3,"names":["fund_value","unit_balance","unit_allocation","unit_price","annual_premium","annual_salary","projected_fund_value","age","age_0","retirement_age","annual_salary_0","salary_inflation_rate","salary_inflation_rate_projected","empee_contribution_rate","empee_contribution_rate_projected","unit_growth_rate","unit_growth_rate_projected","fund_value_0","salary_inflation_rate_actual","empee_contribution_rate_actual","unit_growth_rate_actual","age_opening","age_opening_in","age_closing","age_closing_in","rec_step","rec_step_in","salary_inflation_rate_actual_co","age_in"],"sources":["rec.cul.js"],"sourcesContent":["// a reconciliation pattern (automate-able)\n\nimport {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  age_0,\n  retirement_age,\n  annual_salary_0,\n  salary_inflation_rate as salary_inflation_rate_projected,\n  empee_contribution_rate as empee_contribution_rate_projected,\n  unit_growth_rate as unit_growth_rate_projected,\n  fund_value_0,\n} from \"./projected.cul\";\n\nimport {\n  salary_inflation_rate as salary_inflation_rate_actual,\n  empee_contribution_rate as empee_contribution_rate_actual,\n  unit_growth_rate as unit_growth_rate_actual,\n} from \"./actual.cul\";\n\nexport {\n  fund_value,\n  unit_balance,\n  unit_allocation,\n  unit_price,\n  annual_premium,\n  annual_salary,\n  projected_fund_value,\n  age,\n  age_0,\n  retirement_age,\n  annual_salary_0,\n};\n\nexport const age_opening = () => age_opening_in;\nexport const age_closing = () => age_closing_in;\nexport const rec_step = () => rec_step_in; // 0 = AAA, 1 = E salary inflation, 2 = E empee contribution, 3 = E unit growth rate (=EEE)\n\nexport const salary_inflation_rate_actual_co = () => {\n  if (rec_step() >= 1) return age_opening();\n  else return age_closing();\n};\n\n// logic on age op/closing, age, rec step\nexport const salary_inflation_rate = () => {\n  if (age() > salary_inflation_rate_actual_co())\n    return salary_inflation_rate_projected();\n  else return salary_inflation_rate_actual();\n};\n\nexport const empee_contribution_rate = () => empee_contribution_rate_projected();\nexport const unit_growth_rate = () => unit_growth_rate_projected();\n"],"mappings":"AAAA;;AAEA;AACEA,UAAU;AACVC,YAAY;AACZC,eAAe;AACfC,UAAU;AACVC,cAAc;AACdC,aAAa;AACbC,oBAAoB;AACpBC,GAAG;AACHC,MAAK,IAALA,KAAK;AACLC,eAAc,IAAdA,cAAc;AACdC,gBAAe,IAAfA,eAAe;AACfC,sBAAqB,IAAIC,+BAA+B;AACxDC,wBAAuB,IAAIC,iCAAiC;AAC5DC,iBAAgB,IAAIC,0BAA0B;AAC9CC,aAAY,IAAZA,YAAY;AACP,sDAAiB;;AAExB;AACEN,sBAAqB,IAAIO,4BAA4B;AACrDL,wBAAuB,IAAIM,8BAA8B;AACzDJ,iBAAgB,IAAIK,uBAAuB;AACtC,mDAAc;;AAErB;AACEpB,UAAU;AACVC,YAAY;AACZC,eAAe;AACfC,UAAU;AACVC,cAAc;AACdC,aAAa;AACbC,oBAAoB;AACpBC,GAAG;AACHC,KAAK;AACLC,cAAc;AACdC,eAAe;;;AAGjB,OAAO,MAAMW,WAAW,GAAGA,CAAA,EAAAC,cAAA,OAAMA,cAAc;AAC/C,OAAO,MAAMC,WAAW,GAAGA,CAAA,EAAAC,cAAA,OAAMA,cAAc;AAC/C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,EAAAC,WAAA,OAAMA,WAAW,CAAC,CAAC;;AAE3C,OAAO,MAAMC,+BAA+B,GAAGA,CAAA,EAAAD,WAAA,EAAAJ,cAAA,EAAAE,cAAA,OAAM;EACnD,IAAIC,QAAQ,GAAAC,WAAA,GAAE,IAAI,CAAC,EAAE,OAAOL,WAAW,GAAAC,cAAA,GAAE,CAAC;EACrC,OAAOC,WAAW,GAAAC,cAAA,GAAE;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMb,qBAAqB,GAAGA,CAAA,EAAAiB,MAAA,EAAAF,WAAA,EAAAJ,cAAA,EAAAE,cAAA,OAAM;EACzC,IAAIjB,GAAG,GAAAqB,MAAA,GAAE,GAAGD,+BAA+B,GAAAD,WAAA,EAAAJ,cAAA,EAAAE,cAAA,GAAE;EAC3C,OAAOZ,+BAA+B,IAAE,CAAC;EACtC,OAAOM,4BAA4B,GAAAU,MAAA,GAAE;AAC5C,CAAC;;AAED,OAAO,MAAMf,uBAAuB,GAAGA,CAAA,OAAMC,iCAAiC,IAAE;AAChF,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,OAAMC,0BAA0B,IAAE"}