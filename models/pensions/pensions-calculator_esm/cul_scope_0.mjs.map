{"version":3,"sources":["pensions-calculator.cul.js"],"names":["memoize","fund_value_","fund_value$","unit_balance_","unit_balance$","unit_allocation_","unit_allocation$","unit_price_","unit_price$","annual_premium_","annual_premium$","annual_salary_","annual_salary$","projected_fund_value_","projected_fund_value$","age_","age$","age_0_","age_0$","retirement_age_","retirement_age$","annual_salary_0_","annual_salary_0$","salary_inflation_rate_","salary_inflation_rate$","empee_contribution_rate_","empee_contribution_rate$","unit_growth_rate_","unit_growth_rate$","fund_value_0_","fund_value_0$","fund_value$m","JSON","stringify","fund_value","a","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","annual_salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_balance$m","unit_balance","unit_allocation$m","unit_allocation","unit_price$m","unit_price","annual_premium$m","annual_premium","annual_salary$m","annual_salary","projected_fund_value$m","projected_fund_value","age$m","age","age_0$m","age_0","retirement_age$m","retirement_age","annual_salary_0$m","annual_salary_0","salary_inflation_rate$m","salary_inflation_rate","empee_contribution_rate$m","empee_contribution_rate","unit_growth_rate$m","unit_growth_rate","fund_value_0$m","fund_value_0"],"mappings":"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","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { fund_value_ as fund_value$, unit_balance_ as unit_balance$, unit_allocation_ as unit_allocation$, unit_price_ as unit_price$, annual_premium_ as annual_premium$, annual_salary_ as annual_salary$, projected_fund_value_ as projected_fund_value$, age_ as age$, age_0_ as age_0$, retirement_age_ as retirement_age$, annual_salary_0_ as annual_salary_0$, salary_inflation_rate_ as salary_inflation_rate$, empee_contribution_rate_ as empee_contribution_rate$, unit_growth_rate_ as unit_growth_rate$, fund_value_0_ as fund_value_0$ } from \"./pensions-calculator.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start fund_value memo-loader code //////////\n//const fund_value$m = memoize(999999, isEqual)(fund_value$);\nexport const fund_value$m = memoize(fund_value$, JSON.stringify);\nexport const fund_value = (a) => {\n  return fund_value$m(a);\n  // eslint-disable-next-line no-undef\n  fund_value$({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end fund_value memo-loader code //////////\n\n\n\n////////// start unit_balance memo-loader code //////////\n//const unit_balance$m = memoize(999999, isEqual)(unit_balance$);\nexport const unit_balance$m = memoize(unit_balance$, JSON.stringify);\nexport const unit_balance = (a) => {\n  return unit_balance$m(a);\n  // eslint-disable-next-line no-undef\n  unit_balance$({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end unit_balance memo-loader code //////////\n\n\n\n////////// start unit_allocation memo-loader code //////////\n//const unit_allocation$m = memoize(999999, isEqual)(unit_allocation$);\nexport const unit_allocation$m = memoize(unit_allocation$, JSON.stringify);\nexport const unit_allocation = (a) => {\n  return unit_allocation$m(a);\n  // eslint-disable-next-line no-undef\n  unit_allocation$({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, unit_growth_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end unit_allocation memo-loader code //////////\n\n\n\n////////// start unit_price memo-loader code //////////\n//const unit_price$m = memoize(999999, isEqual)(unit_price$);\nexport const unit_price$m = memoize(unit_price$, JSON.stringify);\nexport const unit_price = (a) => {\n  return unit_price$m(a);\n  // eslint-disable-next-line no-undef\n  unit_price$({ age_in, age_0_in, unit_growth_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end unit_price memo-loader code //////////\n\n\n\n////////// start annual_premium memo-loader code //////////\n//const annual_premium$m = memoize(999999, isEqual)(annual_premium$);\nexport const annual_premium$m = memoize(annual_premium$, JSON.stringify);\nexport const annual_premium = (a) => {\n  return annual_premium$m(a);\n  // eslint-disable-next-line no-undef\n  annual_premium$({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end annual_premium memo-loader code //////////\n\n\n\n////////// start annual_salary memo-loader code //////////\n//const annual_salary$m = memoize(999999, isEqual)(annual_salary$);\nexport const annual_salary$m = memoize(annual_salary$, JSON.stringify);\nexport const annual_salary = (a) => {\n  return annual_salary$m(a);\n  // eslint-disable-next-line no-undef\n  annual_salary$({ age_in, age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end annual_salary memo-loader code //////////\n\n\n\n////////// start projected_fund_value memo-loader code //////////\n//const projected_fund_value$m = memoize(999999, isEqual)(projected_fund_value$);\nexport const projected_fund_value$m = memoize(projected_fund_value$, JSON.stringify);\nexport const projected_fund_value = (a) => {\n  return projected_fund_value$m(a);\n  // eslint-disable-next-line no-undef\n  projected_fund_value$({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end projected_fund_value memo-loader code //////////\n\n\n\n////////// start age memo-loader code //////////\n//const age$m = memoize(999999, isEqual)(age$);\nexport const age$m = memoize(age$, JSON.stringify);\nexport const age = (a) => {\n  return age$m(a);\n  // eslint-disable-next-line no-undef\n  age$({ age_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end age memo-loader code //////////\n\n\n\n////////// start age_0 memo-loader code //////////\n//const age_0$m = memoize(999999, isEqual)(age_0$);\nexport const age_0$m = memoize(age_0$, JSON.stringify);\nexport const age_0 = (a) => {\n  return age_0$m(a);\n  // eslint-disable-next-line no-undef\n  age_0$({ age_0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end age_0 memo-loader code //////////\n\n\n\n////////// start retirement_age memo-loader code //////////\n//const retirement_age$m = memoize(999999, isEqual)(retirement_age$);\nexport const retirement_age$m = memoize(retirement_age$, JSON.stringify);\nexport const retirement_age = (a) => {\n  return retirement_age$m(a);\n  // eslint-disable-next-line no-undef\n  retirement_age$({ retirement_age_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end retirement_age memo-loader code //////////\n\n\n\n////////// start annual_salary_0 memo-loader code //////////\n//const annual_salary_0$m = memoize(999999, isEqual)(annual_salary_0$);\nexport const annual_salary_0$m = memoize(annual_salary_0$, JSON.stringify);\nexport const annual_salary_0 = (a) => {\n  return annual_salary_0$m(a);\n  // eslint-disable-next-line no-undef\n  annual_salary_0$({ annual_salary_0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end annual_salary_0 memo-loader code //////////\n\n\n\n////////// start salary_inflation_rate memo-loader code //////////\n//const salary_inflation_rate$m = memoize(999999, isEqual)(salary_inflation_rate$);\nexport const salary_inflation_rate$m = memoize(salary_inflation_rate$, JSON.stringify);\nexport const salary_inflation_rate = (a) => {\n  return salary_inflation_rate$m(a);\n  // eslint-disable-next-line no-undef\n  salary_inflation_rate$({ salary_inflation_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end salary_inflation_rate memo-loader code //////////\n\n\n\n////////// start empee_contribution_rate memo-loader code //////////\n//const empee_contribution_rate$m = memoize(999999, isEqual)(empee_contribution_rate$);\nexport const empee_contribution_rate$m = memoize(empee_contribution_rate$, JSON.stringify);\nexport const empee_contribution_rate = (a) => {\n  return empee_contribution_rate$m(a);\n  // eslint-disable-next-line no-undef\n  empee_contribution_rate$({ empee_contribution_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end empee_contribution_rate memo-loader code //////////\n\n\n\n////////// start unit_growth_rate memo-loader code //////////\n//const unit_growth_rate$m = memoize(999999, isEqual)(unit_growth_rate$);\nexport const unit_growth_rate$m = memoize(unit_growth_rate$, JSON.stringify);\nexport const unit_growth_rate = (a) => {\n  return unit_growth_rate$m(a);\n  // eslint-disable-next-line no-undef\n  unit_growth_rate$({ unit_growth_rate_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end unit_growth_rate memo-loader code //////////\n\n\n\n////////// start fund_value_0 memo-loader code //////////\n//const fund_value_0$m = memoize(999999, isEqual)(fund_value_0$);\nexport const fund_value_0$m = memoize(fund_value_0$, JSON.stringify);\nexport const fund_value_0 = (a) => {\n  return fund_value_0$m(a);\n  // eslint-disable-next-line no-undef\n  fund_value_0$({ fund_value_0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end fund_value_0 memo-loader code //////////"]}