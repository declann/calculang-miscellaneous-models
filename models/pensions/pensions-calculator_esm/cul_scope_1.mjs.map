{"version":3,"names":["fund_value_0","unit_growth_rate","empee_contribution_rate","salary_inflation_rate","annual_salary_0","retirement_age","age_0","age","projected_fund_value","annual_salary","annual_premium","unit_price","unit_allocation","unit_balance","fund_value","fund_value_","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","annual_salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_balance_","unit_allocation_","unit_price_","annual_premium_","annual_salary_","projected_fund_value_","age_","age_0_","retirement_age_","annual_salary_0_","salary_inflation_rate_","empee_contribution_rate_","unit_growth_rate_","fund_value_0_"],"sources":["pensions-calculator.cul.js"],"sourcesContent":["import { fund_value_0 } from \"./pensions-calculator.cul.js\";import { unit_growth_rate } from \"./pensions-calculator.cul.js\";import { empee_contribution_rate } from \"./pensions-calculator.cul.js\";import { salary_inflation_rate } from \"./pensions-calculator.cul.js\";import { annual_salary_0 } from \"./pensions-calculator.cul.js\";import { retirement_age } from \"./pensions-calculator.cul.js\";import { age_0 } from \"./pensions-calculator.cul.js\";import { age } from \"./pensions-calculator.cul.js\";import { projected_fund_value } from \"./pensions-calculator.cul.js\";import { annual_salary } from \"./pensions-calculator.cul.js\";import { annual_premium } from \"./pensions-calculator.cul.js\";import { unit_price } from \"./pensions-calculator.cul.js\";import { unit_allocation } from \"./pensions-calculator.cul.js\";import { unit_balance } from \"./pensions-calculator.cul.js\";import { fund_value } from \"./pensions-calculator.cul.js\"; // disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\nexport const fund_value_ = ({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => unit_balance({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) * unit_price({ age_in, age_0_in, unit_growth_rate_in }); // not allowing for multiple funds now\n\nexport const unit_balance_ = ({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1) return fund_value_0({ fund_value_0_in }) / unit_price({ age_in, age_0_in, unit_growth_rate_in }); // was caught by stack error because of no lower bound! static analysis!\n  else return unit_balance({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, age_in: age({ age_in }) - 1 }) + unit_allocation({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, unit_growth_rate_in });\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation_ = ({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, unit_growth_rate_in }) => annual_premium({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) / unit_price({ age_in, age_0_in, unit_growth_rate_in }); // TODO model a contribution charge\nexport const unit_price_ = ({ age_in, age_0_in, unit_growth_rate_in }) => {// no b/o spread. Should this part be in terms of age ?\n  if (age({ age_in }) <= age_0({ age_0_in })) return 1;else\n  return unit_price({ age_0_in, unit_growth_rate_in, age_in: age({ age_in }) - 1 }) * (1 + unit_growth_rate({ unit_growth_rate_in }));\n};\n\nexport const annual_premium_ = ({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1 || age({ age_in }) == retirement_age({ retirement_age_in })) return 0;else\n  return annual_salary({ age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in, age_in: age({ age_in }) - 1 }) * empee_contribution_rate({ empee_contribution_rate_in });\n};\n\n// at end of year\nexport const annual_salary_ = ({ age_in, age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1) return annual_salary_0({ annual_salary_0_in });else\n  if (age({ age_in }) >= retirement_age({ retirement_age_in }))\n  return 0;else\n\n  return annual_salary({ age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in, age_in: age({ age_in }) - 1 }) * (1 + salary_inflation_rate({ salary_inflation_rate_in })); // < age_0 = undefined, any way/use to capture this statically?\n};\n\n\n// at retirement:\nexport const projected_fund_value_ = ({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) =>\nfund_value({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, age_in: retirement_age({ retirement_age_in }) });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age_ = ({ age_in }) => age_in; // input\nexport const age_0_ = ({ age_0_in }) => age_0_in;\n\nexport const retirement_age_ = ({ retirement_age_in }) => retirement_age_in;\nexport const annual_salary_0_ = ({ annual_salary_0_in }) => annual_salary_0_in;\nexport const salary_inflation_rate_ = ({ salary_inflation_rate_in }) => salary_inflation_rate_in;\nexport const empee_contribution_rate_ = ({ empee_contribution_rate_in }) => empee_contribution_rate_in;\n//export const emper_contribution_rate = () => (emper_contribution_rate_in) not modelling employer contributions yet\n\nexport const unit_growth_rate_ = ({ unit_growth_rate_in }) => unit_growth_rate_in;\n\nexport const fund_value_0_ = ({ fund_value_0_in }) => fund_value_0_in;"],"mappings":"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"}