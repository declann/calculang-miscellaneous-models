{"version":3,"sources":["pensions-calculator.cul.js"],"names":["fund_value_0","unit_growth_rate","empee_contribution_rate","salary_inflation_rate","annual_salary_0","retirement_age","age_0","age","projected_fund_value","annual_salary","annual_premium","unit_price","unit_allocation","unit_balance","fund_value","fund_value_","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","annual_salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_balance_","unit_allocation_","unit_price_","annual_premium_","annual_salary_","projected_fund_value_","age_","age_0_","retirement_age_","annual_salary_0_","salary_inflation_rate_","empee_contribution_rate_","unit_growth_rate_","fund_value_0_"],"mappings":"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","sourcesContent":["import { fund_value_0 } from \"./pensions-calculator.cul.js\";import { unit_growth_rate } from \"./pensions-calculator.cul.js\";import { empee_contribution_rate } from \"./pensions-calculator.cul.js\";import { salary_inflation_rate } from \"./pensions-calculator.cul.js\";import { annual_salary_0 } from \"./pensions-calculator.cul.js\";import { retirement_age } from \"./pensions-calculator.cul.js\";import { age_0 } from \"./pensions-calculator.cul.js\";import { age } from \"./pensions-calculator.cul.js\";import { projected_fund_value } from \"./pensions-calculator.cul.js\";import { annual_salary } from \"./pensions-calculator.cul.js\";import { annual_premium } from \"./pensions-calculator.cul.js\";import { unit_price } from \"./pensions-calculator.cul.js\";import { unit_allocation } from \"./pensions-calculator.cul.js\";import { unit_balance } from \"./pensions-calculator.cul.js\";import { fund_value } from \"./pensions-calculator.cul.js\"; // disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\nexport const fund_value_ = ({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => unit_balance({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) * unit_price({ age_in, age_0_in, unit_growth_rate_in }); // not allowing for multiple funds now\n\nexport const unit_balance_ = ({ age_in, age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1) return fund_value_0({ fund_value_0_in }) / unit_price({ age_in, age_0_in, unit_growth_rate_in }); // was caught by stack error because of no lower bound! static analysis!\n  else return unit_balance({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, age_in: age({ age_in }) - 1 }) + unit_allocation({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, unit_growth_rate_in });\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation_ = ({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, unit_growth_rate_in }) => annual_premium({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) / unit_price({ age_in, age_0_in, unit_growth_rate_in }); // TODO model a contribution charge\nexport const unit_price_ = ({ age_in, age_0_in, unit_growth_rate_in }) => {// no b/o spread. Should this part be in terms of age ?\n  if (age({ age_in }) <= age_0({ age_0_in })) return 1;else\n  return unit_price({ age_0_in, unit_growth_rate_in, age_in: age({ age_in }) - 1 }) * (1 + unit_growth_rate({ unit_growth_rate_in }));\n};\n\nexport const annual_premium_ = ({ age_in, age_0_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1 || age({ age_in }) == retirement_age({ retirement_age_in })) return 0;else\n  return annual_salary({ age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in, age_in: age({ age_in }) - 1 }) * empee_contribution_rate({ empee_contribution_rate_in });\n};\n\n// at end of year\nexport const annual_salary_ = ({ age_in, age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in }) => {\n  if (age({ age_in }) <= age_0({ age_0_in }) - 1) return annual_salary_0({ annual_salary_0_in });else\n  if (age({ age_in }) >= retirement_age({ retirement_age_in }))\n  return 0;else\n\n  return annual_salary({ age_0_in, annual_salary_0_in, retirement_age_in, salary_inflation_rate_in, age_in: age({ age_in }) - 1 }) * (1 + salary_inflation_rate({ salary_inflation_rate_in })); // < age_0 = undefined, any way/use to capture this statically?\n};\n\n\n// at retirement:\nexport const projected_fund_value_ = ({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in }) =>\nfund_value({ age_0_in, fund_value_0_in, unit_growth_rate_in, retirement_age_in, annual_salary_0_in, salary_inflation_rate_in, empee_contribution_rate_in, age_in: retirement_age({ retirement_age_in }) });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age_ = ({ age_in }) => age_in; // input\nexport const age_0_ = ({ age_0_in }) => age_0_in;\n\nexport const retirement_age_ = ({ retirement_age_in }) => retirement_age_in;\nexport const annual_salary_0_ = ({ annual_salary_0_in }) => annual_salary_0_in;\nexport const salary_inflation_rate_ = ({ salary_inflation_rate_in }) => salary_inflation_rate_in;\nexport const empee_contribution_rate_ = ({ empee_contribution_rate_in }) => empee_contribution_rate_in;\n//export const emper_contribution_rate = () => (emper_contribution_rate_in) not modelling employer contributions yet\n\nexport const unit_growth_rate_ = ({ unit_growth_rate_in }) => unit_growth_rate_in;\n\nexport const fund_value_0_ = ({ fund_value_0_in }) => fund_value_0_in;"]}