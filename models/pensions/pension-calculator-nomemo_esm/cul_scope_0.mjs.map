{"version":3,"names":["fund_value","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","salary_inflation_rate_in","empee_contribution_rate_in","unit_balance","unit_price","age","age_0","fund_value_0","unit_allocation","empee_contribution","unit_growth_rate","retirement_age","salary","empee_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value","annual_salary_0_in"],"sources":["pension-calculator-nomemo.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () => empee_contribution() / unit_price(); // todo emper contribution, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const salary_0 = () => annual_salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\n//export const emper_contribution_rate = () => (emper_contribution_rate_in) not modelling employer contributions yet\n\nexport const unit_growth_rate = () => unit_growth_rate_in;\n\nexport const fund_value_0 = () => fund_value_0_in;\n"],"mappings":"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"}