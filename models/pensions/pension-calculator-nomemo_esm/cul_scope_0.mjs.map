{"version":3,"names":["net_salary","fund_value","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","emper_contribution_rate_in","unit_balance","unit_price","age","age_0","fund_value_0","unit_allocation","empee_contribution","emper_contribution","unit_growth_rate","retirement_age","salary","empee_contribution_rate","accumulated_empee_contributions","empee_contribution_tax_relief","gross_salary_in","tax_credits_in","pension_contribution_in","emper_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value"],"sources":["pension-calculator-nomemo.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nimport { net_salary } from \"./simple-incometax.cul\";\nexport { net_salary };\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () =>\n  (empee_contribution() + emper_contribution()) / unit_price(); // todo, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const accumulated_empee_contributions = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contributions({ age_in: age() - 1 }) +\n      empee_contribution()\n    );\n};\n//_.range(age_0(), retirement_age()).reduce((acc, val) => acc + val);\n\nexport const empee_contribution_tax_relief = () =>\n  net_salary({\n    gross_salary_in: salary(),\n    tax_credits_in: 3000,\n    pension_contribution_in: 0,\n  }) -\n  net_salary({\n    gross_salary_in: salary(),\n    tax_credits_in: 3000,\n    pension_contribution_in: empee_contribution(),\n  });\n\nexport const emper_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * emper_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const salary_0 = () => salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\nexport const emper_contribution_rate = () => emper_contribution_rate_in;\n\nexport const unit_growth_rate = () => unit_growth_rate_in;\n\nexport const fund_value_0 = () => fund_value_0_in;\n"],"mappings":"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"}