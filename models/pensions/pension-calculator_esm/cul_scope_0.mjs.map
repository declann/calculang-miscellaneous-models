{"version":3,"names":["income_tax","fund_value","unit_balance","unit_price","age","age_0","fund_value_0","age_in","unit_allocation","empee_contribution","emper_contribution","contribution_charge","unit_growth_rate","retirement_age","salary","empee_contribution_rate","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","gross_salary_in","tax_credits_in","pension_contribution_in","emper_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value","salaries_per_projected_fund","age_0_in","retirement_age_in","salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","emper_contribution_rate_in","unit_growth_rate_in","fund_value_0_in","contribution_charge_in"],"sources":["pension-calculator.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nimport { income_tax } from \"./simple-incometax.cul\";\nexport { income_tax };\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () =>\n  ((empee_contribution() + emper_contribution()) *\n    (1 - contribution_charge())) /\n  unit_price(); // todo, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const accumulated_empee_contributions = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contributions({ age_in: age() - 1 }) +\n      empee_contribution()\n    );\n};\n\nexport const pension_tax_relief_ratio = () =>\n  empee_contribution_tax_relief() / empee_contribution();\n\nexport const empee_contribution_tax_relief = () =>\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: 0,\n  }) -\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: empee_contribution(),\n  });\n\n// affected by bug: depends on gross_salary_in, for some reason\n// issue #102\n/*export const accumulated_empee_contribution_tax_relief = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contribution_tax_relief({ age_in: age() - 1 }) +\n      empee_contribution_tax_relief()\n    );\n};*/\n\nexport const emper_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * emper_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\nexport const salaries_per_projected_fund = () => projected_fund_value() / salary({age_in: retirement_age() - 1})\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const salary_0 = () => salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\nexport const emper_contribution_rate = () => emper_contribution_rate_in;\n\nexport const unit_growth_rate = () => unit_growth_rate_in;\n\nexport const fund_value_0 = () => fund_value_0_in;\n\nexport const contribution_charge = () => contribution_charge_in;\n"],"mappings":"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"}