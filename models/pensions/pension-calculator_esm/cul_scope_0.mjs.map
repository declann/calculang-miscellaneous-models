{"version":3,"names":["income_tax","fund_value","age_in","age_0_in","fund_value_0_in","unit_growth_rate_in","retirement_age_in","salary_0_in","salary_inflation_rate_in","empee_contribution_rate_in","emper_contribution_rate_in","contribution_charge_in","unit_balance","unit_price","age","age_0","fund_value_0","unit_allocation","empee_contribution","emper_contribution","contribution_charge","unit_growth_rate","retirement_age","salary","empee_contribution_rate","accumulated_empee_contributions","pension_tax_relief_ratio","empee_contribution_tax_relief","gross_salary_in","tax_credits_in","pension_contribution_in","emper_contribution_rate","salary_0","salary_inflation_rate","projected_fund_value"],"sources":["pension-calculator.cul.js"],"sourcesContent":["// disclaimer: This is a work-in-progress model released for some calculang/tooling demonstration purposes and numbers shouldn't be relied upon; there are known model issues.\n\n// this model should prob. be broken into some modular pieces, but it isn't because it definitely needs memoisation, which is currently only working for non-modular models\n\n// todo add timing comments\n\nimport { income_tax } from \"./simple-incometax.cul\";\nexport { income_tax };\n\nexport const fund_value = () => unit_balance() * unit_price(); // not allowing for multiple funds now\n\nexport const unit_balance = () => {\n  if (age() <= age_0() - 1) return fund_value_0() / unit_price();\n  else return unit_balance({ age_in: age() - 1 }) + unit_allocation();\n  // timing = premium received at start of year and allocated immediately\n};\n\nexport const unit_allocation = () =>\n  ((empee_contribution() + emper_contribution()) *\n    (1 - contribution_charge())) /\n  unit_price(); // todo, AVCs?\n\nexport const unit_price = () => {\n  if (age() <= age_0()) return 1;\n  else return unit_price({ age_in: age() - 1 }) * (1 + unit_growth_rate());\n};\n\nexport const empee_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * empee_contribution_rate();\n};\n\nexport const accumulated_empee_contributions = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contributions({ age_in: age() - 1 }) +\n      empee_contribution()\n    );\n};\n\nexport const pension_tax_relief_ratio = () =>\n  empee_contribution_tax_relief() / empee_contribution();\n\nexport const empee_contribution_tax_relief = () =>\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: 0,\n  }) -\n  income_tax({\n    gross_salary_in: salary({ age_in: age() - 1 }),\n    tax_credits_in: 3000,\n    pension_contribution_in: empee_contribution(),\n  });\n\n// affected by bug: depends on gross_salary_in, for some reason\n// issue #102\n/*export const accumulated_empee_contribution_tax_relief = () => {\n  if (age() == age_0() - 1) return 0;\n  else\n    return (\n      accumulated_empee_contribution_tax_relief({ age_in: age() - 1 }) +\n      empee_contribution_tax_relief()\n    );\n};*/\n\nexport const emper_contribution = () => {\n  if (age() <= age_0() - 1 || age() == retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * emper_contribution_rate();\n};\n\nexport const salary = () => {\n  // at end of year\n  if (age() <= age_0() - 1) return salary_0();\n  else if (age() >= retirement_age()) return 0;\n  else return salary({ age_in: age() - 1 }) * (1 + salary_inflation_rate()); // < age_0 = undefined, any way/use to capture this statically?\n};\n\nexport const projected_fund_value = () =>\n  // at retirement:\n  fund_value({ age_in: retirement_age() });\n\n// explicit inputs ::\n\n// using age and age_0 (starting age) as inputs, rather than year/time and age_0.\nexport const age = () => age_in; // input\nexport const age_0 = () => age_0_in;\n\nexport const retirement_age = () => retirement_age_in;\nexport const salary_0 = () => salary_0_in;\nexport const salary_inflation_rate = () => salary_inflation_rate_in;\nexport const empee_contribution_rate = () => empee_contribution_rate_in;\nexport const emper_contribution_rate = () => emper_contribution_rate_in;\n\nexport const unit_growth_rate = () => unit_growth_rate_in;\n\nexport const fund_value_0 = () => fund_value_0_in;\n\nexport const contribution_charge = () => contribution_charge_in;\n"],"mappings":"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"}