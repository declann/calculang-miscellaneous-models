{"version":3,"sources":["donut.cul.js"],"names":["memoize","R1_","R1$","R2_","R2$","A_","A$","B_","B$","frame_","frame$","K2_","K2$","K1_","K1$","screen_width_","screen_width$","screen_height_","screen_height$","theta_","theta$","phi_","phi$","cosA_","cosA$","sinA_","sinA$","cosB_","cosB$","sinB_","sinB$","cosTheta_","cosTheta$","sinTheta_","sinTheta$","cosPhi_","cosPhi$","sinPhi_","sinPhi$","circlex_","circlex$","circley_","circley$","x_","x$","y_","y$","z_","z$","xp_","xp$","yp_","yp$","L_","L$","R1$m","JSON","stringify","R1","a","R1_in","R2$m","R2","R2_in","A$m","A","frame_in","B$m","B","frame$m","frame","K2$m","K2","K2_in","K1$m","K1","K1_in","screen_width$m","screen_width","screen_width_in","screen_height$m","screen_height","screen_height_in","theta$m","theta","theta_in","phi$m","phi","phi_in","cosA$m","cosA","sinA$m","sinA","cosB$m","cosB","sinB$m","sinB","cosTheta$m","cosTheta","sinTheta$m","sinTheta","cosPhi$m","cosPhi","sinPhi$m","sinPhi","circlex$m","circlex","circley$m","circley","x$m","x","y$m","y","z$m","z","xp$m","xp","yp$m","yp","L$m","L"],"mappings":"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","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { R1_ as R1$, R2_ as R2$, A_ as A$, B_ as B$, frame_ as frame$, K2_ as K2$, K1_ as K1$, screen_width_ as screen_width$, screen_height_ as screen_height$, theta_ as theta$, phi_ as phi$, cosA_ as cosA$, sinA_ as sinA$, cosB_ as cosB$, sinB_ as sinB$, cosTheta_ as cosTheta$, sinTheta_ as sinTheta$, cosPhi_ as cosPhi$, sinPhi_ as sinPhi$, circlex_ as circlex$, circley_ as circley$, x_ as x$, y_ as y$, z_ as z$, xp_ as xp$, yp_ as yp$, L_ as L$ } from \"./donut.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start R1 memo-loader code //////////\n//const R1$m = memoize(999999, isEqual)(R1$);\nexport const R1$m = memoize(R1$, JSON.stringify);\nexport const R1 = (a) => {\n  return R1$m(a);\n  // eslint-disable-next-line no-undef\n  R1$({ R1_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end R1 memo-loader code //////////\n\n\n\n////////// start R2 memo-loader code //////////\n//const R2$m = memoize(999999, isEqual)(R2$);\nexport const R2$m = memoize(R2$, JSON.stringify);\nexport const R2 = (a) => {\n  return R2$m(a);\n  // eslint-disable-next-line no-undef\n  R2$({ R2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end R2 memo-loader code //////////\n\n\n\n////////// start A memo-loader code //////////\n//const A$m = memoize(999999, isEqual)(A$);\nexport const A$m = memoize(A$, JSON.stringify);\nexport const A = (a) => {\n  return A$m(a);\n  // eslint-disable-next-line no-undef\n  A$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A memo-loader code //////////\n\n\n\n////////// start B memo-loader code //////////\n//const B$m = memoize(999999, isEqual)(B$);\nexport const B$m = memoize(B$, JSON.stringify);\nexport const B = (a) => {\n  return B$m(a);\n  // eslint-disable-next-line no-undef\n  B$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B memo-loader code //////////\n\n\n\n////////// start frame memo-loader code //////////\n//const frame$m = memoize(999999, isEqual)(frame$);\nexport const frame$m = memoize(frame$, JSON.stringify);\nexport const frame = (a) => {\n  return frame$m(a);\n  // eslint-disable-next-line no-undef\n  frame$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end frame memo-loader code //////////\n\n\n\n////////// start K2 memo-loader code //////////\n//const K2$m = memoize(999999, isEqual)(K2$);\nexport const K2$m = memoize(K2$, JSON.stringify);\nexport const K2 = (a) => {\n  return K2$m(a);\n  // eslint-disable-next-line no-undef\n  K2$({ K2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end K2 memo-loader code //////////\n\n\n\n////////// start K1 memo-loader code //////////\n//const K1$m = memoize(999999, isEqual)(K1$);\nexport const K1$m = memoize(K1$, JSON.stringify);\nexport const K1 = (a) => {\n  return K1$m(a);\n  // eslint-disable-next-line no-undef\n  K1$({ K1_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end K1 memo-loader code //////////\n\n\n\n////////// start screen_width memo-loader code //////////\n//const screen_width$m = memoize(999999, isEqual)(screen_width$);\nexport const screen_width$m = memoize(screen_width$, JSON.stringify);\nexport const screen_width = (a) => {\n  return screen_width$m(a);\n  // eslint-disable-next-line no-undef\n  screen_width$({ screen_width_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end screen_width memo-loader code //////////\n\n\n\n////////// start screen_height memo-loader code //////////\n//const screen_height$m = memoize(999999, isEqual)(screen_height$);\nexport const screen_height$m = memoize(screen_height$, JSON.stringify);\nexport const screen_height = (a) => {\n  return screen_height$m(a);\n  // eslint-disable-next-line no-undef\n  screen_height$({ screen_height_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end screen_height memo-loader code //////////\n\n\n\n////////// start theta memo-loader code //////////\n//const theta$m = memoize(999999, isEqual)(theta$);\nexport const theta$m = memoize(theta$, JSON.stringify);\nexport const theta = (a) => {\n  return theta$m(a);\n  // eslint-disable-next-line no-undef\n  theta$({ theta_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end theta memo-loader code //////////\n\n\n\n////////// start phi memo-loader code //////////\n//const phi$m = memoize(999999, isEqual)(phi$);\nexport const phi$m = memoize(phi$, JSON.stringify);\nexport const phi = (a) => {\n  return phi$m(a);\n  // eslint-disable-next-line no-undef\n  phi$({ phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end phi memo-loader code //////////\n\n\n\n////////// start cosA memo-loader code //////////\n//const cosA$m = memoize(999999, isEqual)(cosA$);\nexport const cosA$m = memoize(cosA$, JSON.stringify);\nexport const cosA = (a) => {\n  return cosA$m(a);\n  // eslint-disable-next-line no-undef\n  cosA$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end cosA memo-loader code //////////\n\n\n\n////////// start sinA memo-loader code //////////\n//const sinA$m = memoize(999999, isEqual)(sinA$);\nexport const sinA$m = memoize(sinA$, JSON.stringify);\nexport const sinA = (a) => {\n  return sinA$m(a);\n  // eslint-disable-next-line no-undef\n  sinA$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sinA memo-loader code //////////\n\n\n\n////////// start cosB memo-loader code //////////\n//const cosB$m = memoize(999999, isEqual)(cosB$);\nexport const cosB$m = memoize(cosB$, JSON.stringify);\nexport const cosB = (a) => {\n  return cosB$m(a);\n  // eslint-disable-next-line no-undef\n  cosB$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end cosB memo-loader code //////////\n\n\n\n////////// start sinB memo-loader code //////////\n//const sinB$m = memoize(999999, isEqual)(sinB$);\nexport const sinB$m = memoize(sinB$, JSON.stringify);\nexport const sinB = (a) => {\n  return sinB$m(a);\n  // eslint-disable-next-line no-undef\n  sinB$({ frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sinB memo-loader code //////////\n\n\n\n////////// start cosTheta memo-loader code //////////\n//const cosTheta$m = memoize(999999, isEqual)(cosTheta$);\nexport const cosTheta$m = memoize(cosTheta$, JSON.stringify);\nexport const cosTheta = (a) => {\n  return cosTheta$m(a);\n  // eslint-disable-next-line no-undef\n  cosTheta$({ theta_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end cosTheta memo-loader code //////////\n\n\n\n////////// start sinTheta memo-loader code //////////\n//const sinTheta$m = memoize(999999, isEqual)(sinTheta$);\nexport const sinTheta$m = memoize(sinTheta$, JSON.stringify);\nexport const sinTheta = (a) => {\n  return sinTheta$m(a);\n  // eslint-disable-next-line no-undef\n  sinTheta$({ theta_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sinTheta memo-loader code //////////\n\n\n\n////////// start cosPhi memo-loader code //////////\n//const cosPhi$m = memoize(999999, isEqual)(cosPhi$);\nexport const cosPhi$m = memoize(cosPhi$, JSON.stringify);\nexport const cosPhi = (a) => {\n  return cosPhi$m(a);\n  // eslint-disable-next-line no-undef\n  cosPhi$({ phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end cosPhi memo-loader code //////////\n\n\n\n////////// start sinPhi memo-loader code //////////\n//const sinPhi$m = memoize(999999, isEqual)(sinPhi$);\nexport const sinPhi$m = memoize(sinPhi$, JSON.stringify);\nexport const sinPhi = (a) => {\n  return sinPhi$m(a);\n  // eslint-disable-next-line no-undef\n  sinPhi$({ phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end sinPhi memo-loader code //////////\n\n\n\n////////// start circlex memo-loader code //////////\n//const circlex$m = memoize(999999, isEqual)(circlex$);\nexport const circlex$m = memoize(circlex$, JSON.stringify);\nexport const circlex = (a) => {\n  return circlex$m(a);\n  // eslint-disable-next-line no-undef\n  circlex$({ R2_in, R1_in, theta_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end circlex memo-loader code //////////\n\n\n\n////////// start circley memo-loader code //////////\n//const circley$m = memoize(999999, isEqual)(circley$);\nexport const circley$m = memoize(circley$, JSON.stringify);\nexport const circley = (a) => {\n  return circley$m(a);\n  // eslint-disable-next-line no-undef\n  circley$({ R1_in, theta_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end circley memo-loader code //////////\n\n\n\n////////// start x memo-loader code //////////\n//const x$m = memoize(999999, isEqual)(x$);\nexport const x$m = memoize(x$, JSON.stringify);\nexport const x = (a) => {\n  return x$m(a);\n  // eslint-disable-next-line no-undef\n  x$({ R2_in, R1_in, theta_in, frame_in, phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end x memo-loader code //////////\n\n\n\n////////// start y memo-loader code //////////\n//const y$m = memoize(999999, isEqual)(y$);\nexport const y$m = memoize(y$, JSON.stringify);\nexport const y = (a) => {\n  return y$m(a);\n  // eslint-disable-next-line no-undef\n  y$({ R2_in, R1_in, theta_in, frame_in, phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end y memo-loader code //////////\n\n\n\n////////// start z memo-loader code //////////\n//const z$m = memoize(999999, isEqual)(z$);\nexport const z$m = memoize(z$, JSON.stringify);\nexport const z = (a) => {\n  return z$m(a);\n  // eslint-disable-next-line no-undef\n  z$({ K2_in, frame_in, R2_in, R1_in, theta_in, phi_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end z memo-loader code //////////\n\n\n\n////////// start xp memo-loader code //////////\n//const xp$m = memoize(999999, isEqual)(xp$);\nexport const xp$m = memoize(xp$, JSON.stringify);\nexport const xp = (a) => {\n  return xp$m(a);\n  // eslint-disable-next-line no-undef\n  xp$({ screen_width_in, K1_in, R2_in, R1_in, theta_in, frame_in, phi_in, K2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end xp memo-loader code //////////\n\n\n\n////////// start yp memo-loader code //////////\n//const yp$m = memoize(999999, isEqual)(yp$);\nexport const yp$m = memoize(yp$, JSON.stringify);\nexport const yp = (a) => {\n  return yp$m(a);\n  // eslint-disable-next-line no-undef\n  yp$({ screen_height_in, K1_in, R2_in, R1_in, theta_in, frame_in, phi_in, K2_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end yp memo-loader code //////////\n\n\n\n////////// start L memo-loader code //////////\n//const L$m = memoize(999999, isEqual)(L$);\nexport const L$m = memoize(L$, JSON.stringify);\nexport const L = (a) => {\n  return L$m(a);\n  // eslint-disable-next-line no-undef\n  L$({ phi_in, theta_in, frame_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end L memo-loader code //////////"]}