{"version":3,"names":["R1","R1_in","R2","R2_in","A","frame_in","frame","B","K2","K2_in","K1","K1_in","screen_width","screen_width_in","screen_height","screen_height_in","theta","theta_in","phi","phi_in","cosA","Math","cos","sinA","sin","cosB","sinB","cosTheta","sinTheta","cosPhi","sinPhi","circlex","circley","x","y","z","xp","yp","L"],"sources":["donut.cul.js"],"sourcesContent":["// this code reflects math and code listings written by Andy Sloane in:\n//  https://www.a1k0n.net/2011/07/20/donut-math.html\n// interesting to compare iterative vs. functional style in approach.\n// also interesting to compare separation of concerns.\n// go to Andys blog (also https://www.a1k0n.net/2021/01/13/optimizing-donut.html)\n// to understand the math in this hurried conversion!\n// soon I will elaborate specifically on how calculang can be used to understand the math/numbers.\n\n// torus params\nexport const R1 = () => R1_in;\nexport const R2 = () => R2_in;\n// rotations time params\n//export const A = () => A_in;\n//export const B = () => B_in;\nexport const A = () => 1 + 0.07 * frame(); // todo make rotation params out of 0.07, 0.03\nexport const B = () => 1 + 0.03 * frame();\nexport const frame = () => frame_in;\n\nexport const K2 = () => K2_in;\nexport const K1 = () => K1_in; //(screen_width() * K2() * 3) / (8 * (R1() + R2()));\nexport const screen_width = () => screen_width_in;\nexport const screen_height = () => screen_height_in;\n\n// around the cross-sectional circle of torus domain 0-2pi\nexport const theta = () => theta_in;\n// around center of revolution of torus domain 0-2pi\nexport const phi = () => phi_in;\n\n// just for convenience/introspection\nexport const cosA = () => Math.cos(A());\nexport const sinA = () => Math.sin(A());\nexport const cosB = () => Math.cos(B());\nexport const sinB = () => Math.sin(B());\nexport const cosTheta = () => Math.cos(theta());\nexport const sinTheta = () => Math.sin(theta());\nexport const cosPhi = () => Math.cos(phi());\nexport const sinPhi = () => Math.sin(phi());\n\n// (x,y) coordinates of circle before revolving:\nexport const circlex = () => R2() + R1() * cosTheta();\nexport const circley = () => R1() * sinTheta();\n\n// (x,y,z) coordinates after rotations:\n// [for math: https://www.a1k0n.net/2011/07/20/donut-math.html]\nexport const x = () =>\n  circlex() * (cosB() * cosPhi() + sinA() * sinB() * sinPhi());\n\nexport const y = () =>\n  circlex() * (sinB() * cosPhi() - sinA() * cosB() * sinPhi()) +\n  circley() * cosA() * cosB();\n\nexport const z = () =>\n  K2() + cosA() * circlex() * sinPhi() + circley() * sinA();\n\n// coordinates in 2d projection\nexport const xp = () => screen_width() / 2 + (K1() * x()) / z();\nexport const yp = () => screen_height() / 2 - (K1() * y()) / z();\n\n// luminosity\nexport const L = () =>\n  cosPhi() * cosTheta() * sinB() -\n  cosA() * cosTheta() * sinPhi() -\n  sinA() * sinTheta() +\n  cosB() * (cosA() * sinTheta() - cosTheta() * sinA() * sinPhi());\n"],"mappings":"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"}