{"version":3,"sources":["webpack:///../../../../webpack/universalModuleDefinition","webpack:///../../../../webpack/bootstrap","webpack:///../../../../climate-simple-nomemo.cul.js"],"names":["emissions_rate","emissions_rate_in","year_0","temperature_0","CO2_concentration_0","climate_change_sensitivity","climate_change_sensitivity_in","year","year_in","absorption","drawdown","CO2_concentration","CO2_concentration_delta","net_carbon","temperature","concentration_factor","temperature_delta"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;;AAEO,MAAMA,cAAc,GAAG,2BAAMC,iBAAiB,CAAC,CAAC;;AAEhD,MAAMC,MAAM,GAAG,QAAM,IAAI;AACzB,MAAMC,aAAa,GAAG,QAAM,KAAK;AACjC,MAAMC,mBAAmB,GAAG,QAAM,KAAK;;AAEvC,MAAMC,0BAA0B,GAAG,uCAAMC,6BAA6B,CAAC,CAAC;;AAExE,MAAMC,IAAI,GAAG,iBAAMC,OAAO;;AAE1B,MAAMC,UAAU,GAAG,2BAAMT,cAAc,uBAAE,GAAG,IAAI;;AAEhD,MAAMU,QAAQ,GAAG,oCAAM,KAAK,GAAGC,iBAAiB,gCAAE;;AAElD,MAAMA,iBAAiB,GAAG,oCAAM;EACrC,IAAIJ,IAAI,aAAE,IAAIL,MAAM,IAAE,EAAE,OAAOE,mBAAmB,IAAE,CAAC;;EAEnD;IACEO,iBAAiB,sBAAGH,OAAO,EAAED,IAAI,aAAE,GAAG,CAAC,GAAG,GAAGK,uBAAuB,gCAAE;;AAE5E,CAAC;;AAEM,MAAMC,UAAU,GAAG;AACxB,YAAab,cAAc,uBAAE,GAAGS,UAAU,uBAAE,GAAGC,QAAQ,gCAAE,CAAC,CAAC;;AAEtD,MAAME,uBAAuB,GAAG;AACrCC,UAAU,sBAAGL,OAAO,EAAED,IAAI,aAAE,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;;AAE3C,MAAMO,WAAW,GAAG;AACzBX,aAAa,IAAE,GAAG,CAACY,oBAAoB,gCAAE,GAAG,CAAC,IAAIV,0BAA0B,mCAAE;;AAExE,MAAMU,oBAAoB,GAAG;AAClCJ,iBAAiB,gCAAE,GAAGP,mBAAmB,IAAE;;AAEtC,MAAMY,iBAAiB,GAAG;AAC9BL,iBAAiB,gCAAE,GAAGP,mBAAmB,IAAE,GAAIC,0BAA0B,mCAAE,C","file":"climate-simple-nomemo.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// minimise wip: just plan this on paper for now\n\n// todo: validate against what I've been told.\n// reconcile to UCAR Simple Climate Model: https://scied.ucar.edu/interactive/simple-climate-model\n\nexport const emissions_rate = () => emissions_rate_in; // gigatons carbon per year, not CO2 (=> no oxygen mass) // 10.5\n\nexport const year_0 = () => 2015;\nexport const temperature_0 = () => 14.65;\nexport const CO2_concentration_0 = () => 399.4;\n\nexport const climate_change_sensitivity = () => climate_change_sensitivity_in; // 3\n\nexport const year = () => year_in;\n\nexport const absorption = () => emissions_rate() * 0.55;\n\nexport const drawdown = () => 0.005 * CO2_concentration();\n\nexport const CO2_concentration = () => {\n  if (year() == year_0()) return CO2_concentration_0();\n  else\n    return (\n      CO2_concentration({ year_in: year() - 1 }) + CO2_concentration_delta()\n    );\n};\n\nexport const net_carbon = () =>\n  /* _rate? */ emissions_rate() - absorption() - drawdown(); // can be negative because of drawdown\n\nexport const CO2_concentration_delta = () =>\n  net_carbon({ year_in: year() - 1 }) * 0.000001; // TODO put a real value here?\n\nexport const temperature = () =>\n  temperature_0() + (concentration_factor() - 1) * climate_change_sensitivity();\n\nexport const concentration_factor = () =>\n  CO2_concentration() / CO2_concentration_0();\n\nexport const temperature_delta = () =>\n  (CO2_concentration() / CO2_concentration_0()) * climate_change_sensitivity();\n"],"sourceRoot":""}