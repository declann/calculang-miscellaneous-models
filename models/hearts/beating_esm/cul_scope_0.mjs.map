{"version":3,"sources":["beating.cul.js"],"names":["x","x_in","waviness","waviness_in","tallness","tallness_in","arc_size","arc_size_in","pow","trend","wavey","Math","sin","PI","arcy","abs","sqrt","y"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO,MAAMA,CAAC,GAAG,CAAC,EAAEC,IAAF,EAAD,KAAcA,IAAxB;AACP,OAAO,MAAMC,QAAQ,GAAG,CAAC,EAAEC,WAAF,EAAD,KAAqBA,WAAtC;AACP,OAAO,MAAMC,QAAQ,GAAG,CAAC,EAAEC,WAAF,EAAD,KAAqBA,WAAtC;AACP,OAAO,MAAMC,QAAQ,GAAG,CAAC,EAAEC,WAAF,EAAD,KAAqBA,WAAtC;;AAEP,OAAOC,GAAP,MAAgB,WAAhB;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC,EAAER,IAAF,EAAD,KAAcO,GAAG,CAACR,CAAC,CAAC,EAAEC,IAAF,EAAD,CAAF,EAAc,IAAI,CAAlB,CAA/B;;AAEP,OAAO,MAAMS,KAAK,GAAG,CAAC,EAAEP,WAAF,EAAeF,IAAf,EAAD,KAA2BU,IAAI,CAACC,GAAL,CAASV,QAAQ,CAAC,EAAEC,WAAF,EAAD,CAAR,GAA4BQ,IAAI,CAACE,EAAjC,GAAsCb,CAAC,CAAC,EAAEC,IAAF,EAAD,CAAhD,CAAzC;;AAEP,OAAO,MAAMa,IAAI,GAAG,CAAC,EAAEb,IAAF,EAAQM,WAAR,EAAD,KAA2B;AAC7C,MAAII,IAAI,CAACI,GAAL,CAASf,CAAC,CAAC,EAAEC,IAAF,EAAD,CAAV,IAAwBU,IAAI,CAACK,IAAL,CAAUV,QAAQ,CAAC,EAAEC,WAAF,EAAD,CAAlB,CAA5B,EAAkE,OAAO,CAAP,CAAlE;AACA,SAAOC,GAAG,CAACF,QAAQ,CAAC,EAAEC,WAAF,EAAD,CAAR,GAA4BP,CAAC,CAAC,EAAEC,IAAF,EAAD,CAAD,GAAcD,CAAC,CAAC,EAAEC,IAAF,EAAD,CAA5C,EAAwD,GAAxD,CAAV;AACD,CAHM;;AAKP;AACA,OAAO,MAAMgB,CAAC,GAAG,CAAC,EAAEhB,IAAF,EAAQM,WAAR,EAAqBJ,WAArB,EAAkCE,WAAlC,EAAD,KAAqDI,KAAK,CAAC,EAAER,IAAF,EAAD,CAAL,GAAkBa,IAAI,CAAC,EAAEb,IAAF,EAAQM,WAAR,EAAD,CAAJ,GAA8BG,KAAK,CAAC,EAAEP,WAAF,EAAeF,IAAf,EAAD,CAAnC,GAA6DG,QAAQ,CAAC,EAAEC,WAAF,EAAD,CAAtJ","sourcesContent":["// some references:\n// https://www.google.com/search?q=beating+heart+in+desmos\n// https://www.youtube.com/watch?v=4rPUg2jmcOw\n\n// my own desmos build to figure:\n// https://www.desmos.com/calculator/hf4pefzsbl\n\nexport const x = ({ x_in }) => x_in;\nexport const waviness = ({ waviness_in }) => waviness_in;\nexport const tallness = ({ tallness_in }) => tallness_in;\nexport const arc_size = ({ arc_size_in }) => arc_size_in;\n\nimport pow from './pow.mjs';\n\nexport const trend = ({ x_in }) => pow(x({ x_in }), 2 / 3);\n\nexport const wavey = ({ waviness_in, x_in }) => Math.sin(waviness({ waviness_in }) * Math.PI * x({ x_in }));\n\nexport const arcy = ({ x_in, arc_size_in }) => {\n  if (Math.abs(x({ x_in })) > Math.sqrt(arc_size({ arc_size_in }))) return 0;else\n  return pow(arc_size({ arc_size_in }) - x({ x_in }) * x({ x_in }), 0.5);\n};\n\n// trend + arcy * wavey\nexport const y = ({ x_in, arc_size_in, waviness_in, tallness_in }) => trend({ x_in }) + arcy({ x_in, arc_size_in }) * wavey({ waviness_in, x_in }) * tallness({ tallness_in });"]}