{"version":3,"sources":["margins.cul.js"],"names":["memoize","num_bars_","num_bars$","container_height_","container_height$","top_margin_","top_margin$","bottom_margin_","bottom_margin$","gap_","gap$","bar_height_","bar_height$","error_","error$","num_bars$m","JSON","stringify","num_bars","a","num_bars_in","container_height$m","container_height","container_height$_in","top_margin$_in","bottom_margin$_in","gap$_in","bar_height$_in","top_margin$m","top_margin","bottom_margin$m","bottom_margin","gap$m","gap","bar_height$m","bar_height","error$m","error"],"mappings":"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","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { num_bars_ as num_bars$, container_height_ as container_height$, top_margin_ as top_margin$, bottom_margin_ as bottom_margin$, gap_ as gap$, bar_height_ as bar_height$, error_ as error$ } from \"./margins.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start num_bars memo-loader code //////////\n//const num_bars$m = memoize(999999, isEqual)(num_bars$);\nexport const num_bars$m = memoize(num_bars$, JSON.stringify);\nexport const num_bars = (a) => {\n  return num_bars$m(a);\n  // eslint-disable-next-line no-undef\n  num_bars$({ num_bars_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end num_bars memo-loader code //////////\n\n\n\n////////// start container_height memo-loader code //////////\n//const container_height$m = memoize(999999, isEqual)(container_height$);\nexport const container_height$m = memoize(container_height$, JSON.stringify);\nexport const container_height = (a) => {\n  return container_height$m(a);\n  // eslint-disable-next-line no-undef\n  container_height$({ container_height$_in, top_margin$_in, bottom_margin$_in, num_bars_in, gap$_in, bar_height$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end container_height memo-loader code //////////\n\n\n\n////////// start top_margin memo-loader code //////////\n//const top_margin$m = memoize(999999, isEqual)(top_margin$);\nexport const top_margin$m = memoize(top_margin$, JSON.stringify);\nexport const top_margin = (a) => {\n  return top_margin$m(a);\n  // eslint-disable-next-line no-undef\n  top_margin$({ top_margin$_in, container_height$_in, bottom_margin$_in, num_bars_in, gap$_in, bar_height$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end top_margin memo-loader code //////////\n\n\n\n////////// start bottom_margin memo-loader code //////////\n//const bottom_margin$m = memoize(999999, isEqual)(bottom_margin$);\nexport const bottom_margin$m = memoize(bottom_margin$, JSON.stringify);\nexport const bottom_margin = (a) => {\n  return bottom_margin$m(a);\n  // eslint-disable-next-line no-undef\n  bottom_margin$({ bottom_margin$_in, container_height$_in, top_margin$_in, num_bars_in, gap$_in, bar_height$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end bottom_margin memo-loader code //////////\n\n\n\n////////// start gap memo-loader code //////////\n//const gap$m = memoize(999999, isEqual)(gap$);\nexport const gap$m = memoize(gap$, JSON.stringify);\nexport const gap = (a) => {\n  return gap$m(a);\n  // eslint-disable-next-line no-undef\n  gap$({ gap$_in, container_height$_in, top_margin$_in, bottom_margin$_in, num_bars_in, bar_height$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end gap memo-loader code //////////\n\n\n\n////////// start bar_height memo-loader code //////////\n//const bar_height$m = memoize(999999, isEqual)(bar_height$);\nexport const bar_height$m = memoize(bar_height$, JSON.stringify);\nexport const bar_height = (a) => {\n  return bar_height$m(a);\n  // eslint-disable-next-line no-undef\n  bar_height$({ bar_height$_in, container_height$_in, top_margin$_in, bottom_margin$_in, num_bars_in, gap$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end bar_height memo-loader code //////////\n\n\n\n////////// start error memo-loader code //////////\n//const error$m = memoize(999999, isEqual)(error$);\nexport const error$m = memoize(error$, JSON.stringify);\nexport const error = (a) => {\n  return error$m(a);\n  // eslint-disable-next-line no-undef\n  error$({ container_height$_in, top_margin$_in, bottom_margin$_in, num_bars_in, gap$_in, bar_height$_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end error memo-loader code //////////"]}