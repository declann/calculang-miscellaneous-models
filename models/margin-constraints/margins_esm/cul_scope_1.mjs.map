{"version":3,"names":["top_margin$","top_margin$_in","bottom_margin$","bottom_margin$_in","num_bars","num_bars_in","gap$","gap$_in","bar_height$","bar_height$_in","container_height$","container_height$_in","container_height","undefined","top_margin","bottom_margin","gap","bar_height","error"],"sources":["margins.cul.js"],"sourcesContent":["// using constraint equation used by Bret Victor in:\n// http://worrydream.com/ScrubbingCalculator/\n\nexport const top_margin$ = () => top_margin$_in;\nexport const bottom_margin$ = () => bottom_margin$_in;\nexport const num_bars = () => num_bars_in; // not unlockable (fut: possibly, with a remainder?)\nexport const gap$ = () => gap$_in;\nexport const bar_height$ = () => bar_height$_in;\nexport const container_height$ = () => container_height$_in;\n\n// the formula we are interested in (following example Bret Victor uses):\n//    top_margin + bottom_margin + (num_bars-1) * gap + num_bars * bar_height = container_height\n\nexport const container_height = () =>\n  container_height$() != undefined\n    ? container_height$() // nullish coalescing not working TODO fix\n    : top_margin() +\n      bottom_margin() +\n      (num_bars() - 1) * gap() +\n      num_bars() * bar_height();\n\n// I do manual algebraic manipulation below, some tools can do this auto, investigate?\n\nexport const top_margin = () =>\n  top_margin$() != undefined\n    ? top_margin$()\n    : container_height() -\n      (bottom_margin() + (num_bars() - 1) * gap() + num_bars() * bar_height());\n\nexport const bottom_margin = () =>\n  bottom_margin$() != undefined\n    ? bottom_margin$()\n    : container_height() -\n      (top_margin() + (num_bars() - 1) * gap() + num_bars() * bar_height());\n\nexport const gap = () =>\n  gap$() != undefined\n    ? gap$()\n    : (container_height() -\n        top_margin() -\n        bottom_margin() -\n        num_bars() * bar_height()) /\n      (num_bars() - 1);\n\nexport const bar_height = () =>\n  bar_height$() != undefined\n    ? bar_height$()\n    : (container_height() -\n        top_margin() -\n        bottom_margin() -\n        gap() * (num_bars() - 1)) /\n      num_bars();\n\n// error function\nexport const error = () =>\n  container_height() -\n  (top_margin() +\n    bottom_margin() +\n    (num_bars() - 1) * gap() +\n    num_bars() * bar_height());\n"],"mappings":"8TAAA;AACA;;AAEA,OAAO,MAAMA,WAAW,GAAGA,CAAA,EAAAC,cAAA,OAAMA,cAAc;AAC/C,OAAO,MAAMC,cAAc,GAAGA,CAAA,EAAAC,iBAAA,OAAMA,iBAAiB;AACrD,OAAO,MAAMC,SAAQ,GAAGA,CAAA,EAAAC,WAAA,OAAMA,WAAW,CAAC,CAAC;AAC3C,OAAO,MAAMC,IAAI,GAAGA,CAAA,EAAAC,OAAA,OAAMA,OAAO;AACjC,OAAO,MAAMC,WAAW,GAAGA,CAAA,EAAAC,cAAA,OAAMA,cAAc;AAC/C,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,EAAAC,oBAAA,OAAMA,oBAAoB;;AAE3D;AACA;;AAEA,OAAO,MAAMC,iBAAgB,GAAGA,CAAA,EAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA;AAC9BC,iBAAiB,GAAAC,oBAAA,GAAE,IAAIE,SAAS;AAC5BH,iBAAiB,GAAAC,oBAAA,GAAE,CAAC;AAAA,EACpBG,UAAU,GAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACZM,aAAa,GAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACf,CAACL,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,IAAIW,GAAG,GAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA,GAAE;AACxBL,QAAQ,GAAAC,WAAA,GAAE,GAAGY,UAAU,GAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,GAAE;;AAE/B;;AAEA,OAAO,MAAMO,WAAU,GAAGA,CAAA,EAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA;AACxBT,WAAW,GAAAC,cAAA,GAAE,IAAIY,SAAS;AACtBb,WAAW,GAAAC,cAAA,GAAE;AACbW,gBAAgB,GAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACjBM,aAAa,GAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE,GAAG,CAACL,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,IAAIW,GAAG,GAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA,GAAE,GAAGL,QAAQ,GAAAC,WAAA,GAAE,GAAGY,UAAU,GAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,GAAE,CAAC;;AAE9E,OAAO,MAAMQ,cAAa,GAAGA,CAAA,EAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA;AAC3BP,cAAc,GAAAC,iBAAA,GAAE,IAAIU,SAAS;AACzBX,cAAc,GAAAC,iBAAA,GAAE;AAChBS,gBAAgB,GAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACjBK,UAAU,GAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE,GAAG,CAACL,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,IAAIW,GAAG,GAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA,GAAE,GAAGL,QAAQ,GAAAC,WAAA,GAAE,GAAGY,UAAU,GAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,GAAE,CAAC;;AAE3E,OAAO,MAAMS,IAAG,GAAGA,CAAA,EAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA;AACjBH,IAAI,GAAAC,OAAA,GAAE,IAAIM,SAAS;AACfP,IAAI,GAAAC,OAAA,GAAE;AACN,CAACK,gBAAgB,GAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACjBK,UAAU,GAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACZM,aAAa,GAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACfL,QAAQ,GAAAC,WAAA,GAAE,GAAGY,UAAU,GAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,GAAE;AAC1BH,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,CAAC;;AAEtB,OAAO,MAAMY,WAAU,GAAGA,CAAA,EAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA;AACxBC,WAAW,GAAAC,cAAA,GAAE,IAAII,SAAS;AACtBL,WAAW,GAAAC,cAAA,GAAE;AACb,CAACG,gBAAgB,GAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACjBK,UAAU,GAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACZM,aAAa,GAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACfO,GAAG,GAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA,GAAE,IAAIL,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,CAAC;AAC1BD,QAAQ,GAAAC,WAAA,GAAE;;AAEhB;AACA,OAAO,MAAMa,MAAK,GAAGA,CAAA,EAAAP,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA;AACnBG,gBAAgB,GAAAD,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACjBK,UAAU,GAAAb,cAAA,EAAAU,oBAAA,EAAAR,iBAAA,EAAAE,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACXM,aAAa,GAAAZ,iBAAA,EAAAQ,oBAAA,EAAAV,cAAA,EAAAI,WAAA,EAAAE,OAAA,EAAAE,cAAA,GAAE;AACf,CAACL,QAAQ,GAAAC,WAAA,GAAE,GAAG,CAAC,IAAIW,GAAG,GAAAT,OAAA,EAAAI,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAI,cAAA,GAAE;AACxBL,QAAQ,GAAAC,WAAA,GAAE,GAAGY,UAAU,GAAAR,cAAA,EAAAE,oBAAA,EAAAV,cAAA,EAAAE,iBAAA,EAAAE,WAAA,EAAAE,OAAA,GAAE,CAAC"}