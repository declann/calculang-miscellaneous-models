{"version":3,"sources":["triple.cul.js"],"names":["memoize","v0_","v0$","t_","t$","v_","v$","v0$m","JSON","stringify","v0","a","v0_in","t$m","t","t_in","v$m","v"],"mappings":";AACA,SAASA,OAAT,QAAwB,YAAxB;AACA;AACA;;AAEA,SAASC,GAAG,IAAIC,GAAhB,EAAqBC,EAAE,IAAIC,EAA3B,EAA+BC,EAAE,IAAIC,EAArC,QAA+C,mBAA/C,C,CAA+G;;;;AAI/G;AACA;AACA,OAAO,MAAMC,IAAI,GAAGP,OAAO,CAACE,GAAD,EAAMM,IAAI,CAACC,SAAX,CAApB;AACP,OAAO,MAAMC,EAAE,GAAG,CAACC,CAAD,KAAO;AACvB,SAAOJ,IAAI,CAACI,CAAD,CAAX;AACA;AACAT,EAAAA,GAAG,CAAC,EAAEU,KAAF,EAAD,CAAH,CAHuB,CAGP;AACjB,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMC,GAAG,GAAGb,OAAO,CAACI,EAAD,EAAKI,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAMK,CAAC,GAAG,CAACH,CAAD,KAAO;AACtB,SAAOE,GAAG,CAACF,CAAD,CAAV;AACA;AACAP,EAAAA,EAAE,CAAC,EAAEW,IAAF,EAAD,CAAF,CAHsB,CAGR;AACf,CAJM;AAKP;;;;AAIA;AACA;AACA,OAAO,MAAMC,GAAG,GAAGhB,OAAO,CAACM,EAAD,EAAKE,IAAI,CAACC,SAAV,CAAnB;AACP,OAAO,MAAMQ,CAAC,GAAG,CAACN,CAAD,KAAO;AACtB,SAAOK,GAAG,CAACL,CAAD,CAAV;AACA;AACAL,EAAAA,EAAE,CAAC,EAAES,IAAF,EAAQH,KAAR,EAAD,CAAF,CAHsB,CAGD;AACtB,CAJM;AAKP","sourcesContent":["\nimport { memoize } from 'underscore';\n//import memoize from 'lru-memoize';\n//import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n\nimport { v0_ as v0$, t_ as t$, v_ as v$ } from \"./triple.cul.js?+memoed&cul_scope_id=1&cul_parent_scope_id=0\"; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n\n\n////////// start v0 memo-loader code //////////\n//const v0$m = memoize(999999, isEqual)(v0$);\nexport const v0$m = memoize(v0$, JSON.stringify);\nexport const v0 = (a) => {\n  return v0$m(a);\n  // eslint-disable-next-line no-undef\n  v0$({ v0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end v0 memo-loader code //////////\n\n\n\n////////// start t memo-loader code //////////\n//const t$m = memoize(999999, isEqual)(t$);\nexport const t$m = memoize(t$, JSON.stringify);\nexport const t = (a) => {\n  return t$m(a);\n  // eslint-disable-next-line no-undef\n  t$({ t_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end t memo-loader code //////////\n\n\n\n////////// start v memo-loader code //////////\n//const v$m = memoize(999999, isEqual)(v$);\nexport const v$m = memoize(v$, JSON.stringify);\nexport const v = (a) => {\n  return v$m(a);\n  // eslint-disable-next-line no-undef\n  v$({ t_in, v0_in }); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end v memo-loader code //////////"]}